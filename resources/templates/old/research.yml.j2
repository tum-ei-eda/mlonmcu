---
# The MLONMCU_HOME is filled in automatically when creating the environment
home: "{{ home_dir }}"
logging:
  level: DEBUG
  to_file: false
  rotate: false
cleanup:
  auto: false
  keep: 50
# Default locations for certain directoriescan be changed here
# Non-absolute paths will always be threated relative to the MLONMCU_HOME
paths:
  # Where the dependencies are downloaded and installed
  deps: deps
  # If logging to file is used keep logs in this directory
  logs: logs
  # Location where reports and artifacts are written to
  results: results
  # Directory where custom extensions can be integrated
  plugins: plugins
  # Directory for intermediate build products, should be located on a large enough drive
  temp: temp
  # A collection of models which will be used to look for models
  # The paths will be checked in the order defined here stopping at the first match
  # Non-existant paths will be skipped without throwing an error
  models:
    - "{{ home_dir }}/models"
    - "{{ config_dir }}/models"
# Here default clone_urls
repos:
  tensorflow:  # TODO: rename to tflite-micro?
    url: "git@github.com:tensorflow/tflite-micro.git"
    ref: feature-latest-tflite-micro
  tflite_micro_compiler:
    url: "git@github.com:PhilippvK/tflite_micro_compiler.git"
    ref: philippvk_new
  tvm:
    url: "git@github.com:PhilippvK/tvm.git"
    ref: feature-etiss-autotune-backup-rebased
    options:
      recursive: true
  utvm_staticrt_codegen:
    url: "git@github.com:tum-ei-eda/utvm_staticrt_codegen.git"
    ref: master
  tvm_extensions:
    url: "git@github.com:tum-ei-eda/tvm_extensions.git"
    ref: main
  etiss:
    url: "git@github.com:PhilippvK/etiss.git"
    ref: feature-clint-plic-uart
  muriscvnn:
    url: "git@github.com:fabianpedd/muriscv_nn.git"
    ref: main
  packer:
    url: "git@gitlab.lrz.de:de-tum-ei-eda-esl/tflite-pack.git"
    ref: main
  spike:
    url: "git@github.com:riscv-software-src/riscv-isa-sim.git"
    ref: master
  spikepk:
    url: "git@github.com:riscv-software-src/riscv-pk.git"
    ref: master
  cmsis:
    url: "https://github.com/PhilippvK/CMSIS_5.git"
    ref: tumeda-patches-new
  mlif:
    url: "git@github.com:tum-ei-eda/mlonmcu-sw.git"
    ref: main
  espidf:
    url: "https://github.com/espressif/esp-idf.git"
    ref: release/v4.4
    options:
      recursive: true
  microtvm_etiss:
    url: "git@github.com:PhilippvK/microtvm-etiss-template.git"
    ref: main

# Here all supported frameworks with their specific features are defined
# Optionally disable unwanted or incomatible backends or features here
# The configured defaults are used if no backend was specified in the command line options
frameworks:
  default: tvm
  tflm:
    enabled: true
    backends:
      default: tflmi
      tflmc:
        enabled: false
      tflmi:
        enabled: true
        features:
          debug_arena: true
    features:
      muriscvnn: true
      cmsisnn: true
  tvm:
    enabled: true
    backends:
      default: tvmaot
      tvmrt:
        enabled: true
        features:
          debug_arena: true
          disable_legalize: true
          autotune: true
          autotuned: true
      tvmaot:
        enabled: true
        features:
          debug_arena: true
          unpacked_api: true
          usmp: true
          disable_legalize: true
          autotune: true
          autotuned: true
      tvmllvm:
        enabled: true
        features:
          # unpacked_api: true
          disable_legalize: true
          autotune: true
          autotuned: true
      tvmcg:
        enabled: true
        features:
          debug_arena: true
          disable_legalize: true
          autotune: true
          autotuned: true
    features:
      cmsisnnbyoc: true
      muriscvnnbyoc: true
# Some frontends are eperimental and therefore disabled here
# Features like packing are only available in certain environments
#
frontends:
  tflite:
    enabled: true
    features:
      validate: true
      visualize: true
  relay:
    enabled: true
    features:
      relayviz: true
  packed:
    enabled: false
    features:
      packing: true
      packed: true
  onnx:
    enabled: false
  # TODO: saved_model (TF->TFLITE), ipynb (IPYNB->?)
# Some targets/platforms support multiple toolchains
toolchains:
  gcc: true
  llvm: true
# Platform extend the number of supported targets
platforms:
  mlif:
    enabled: true
    features:
      debug: true
      validate: true
  espidf:
    enabled: true
    features:
      debug: true
  zephyr:
    enabled: false
    features:
      debug: true
  tvm:
    enabled: true
    features: []
      # rpc: true
      # validate: true
  microtvm:
    enabled: true
    features: []
      # validate: true
# List of supported targets in the environment
targets:
  default: etiss_pulpino
  etiss_pulpino:
    enabled: true
    features:
      gdbserver: true
      etissdbg: true
      trace: true
      log_instrs: true
      # vext: true
      # pext: true
  host_x86:
    enabled: true
    features:
      gdbserver: true
  spike:
    enabled: true
    features:
      # vext: true
      # pext: true
      cachesim: true
      log_instrs: true
  ovpsim:
    enabled: true
    features: []
      # vext: true
      # pext: true
  corstone300:
    enabled: true
    features:
      ethosu: false
      arm_mvei: true
      arm_dsp: true
  microtvm_etiss:
    enabled: true
  microtvm_espidf:
    enabled: false
postprocesses:
  use:
  # - detailed_cycles
  # - average_cycles
  # - filter_cols
  # - features2cols
  # - config2cols
  # - bytes2kb
  # - visualize
# This is where further options such as specific versions of dependencies can be set in the furture
vars:
  allow_extensions: false
  # tvm.make_tool: "ninja"
  llvm.version: "11.1.0"
  runs_per_stage: true
  riscv_gcc.dl_url: "https://syncandshare.lrz.de/dl/fiD9HnHYkb2V8kNbVQYv242m/rv32gc.tar.gz"
  riscv_gcc.dl_url_vext: "https://syncandshare.lrz.de/dl/fiGp4r3f6SZaC5QyDi6QUiNQ/rv32gcv_new.tar.gz"
  riscv_gcc.dl_url_pext: "https://syncandshare.lrz.de/dl/fiNvP4mzVQ8uDvgT9Yf2bqNk/rv32gcp.tar.xz"
flags:
  tflmc.exe:
  - x86
