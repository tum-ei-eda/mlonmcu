Search.setIndex({"docnames": ["AUTHORS", "COMPONENTS", "CONTRIBUTING", "DESIGN", "ENVIRONMENTS", "LOGGING", "POSTPROCESS", "authors", "components", "components/AUTO_VECTORIZE", "components/CMSISNNBYOC", "components/MURISCVNNBYOC", "components/auto_vectorize", "components/cmsisnnbyoc", "components/muriscvnnbyoc", "contributing", "design", "docs", "environments", "history", "index", "installation", "logging", "mlonmcu", "mlonmcu.cli", "mlonmcu.cli.helper", "mlonmcu.context", "mlonmcu.environment", "mlonmcu.feature", "mlonmcu.flow", "mlonmcu.flow.tflm", "mlonmcu.flow.tflm.backend", "mlonmcu.flow.tvm", "mlonmcu.flow.tvm.backend", "mlonmcu.models", "mlonmcu.platform", "mlonmcu.platform.espidf", "mlonmcu.platform.microtvm", "mlonmcu.platform.mlif", "mlonmcu.platform.tvm", "mlonmcu.platform.zephyr", "mlonmcu.session", "mlonmcu.session.postprocess", "mlonmcu.setup", "mlonmcu.setup.tasks", "mlonmcu.target", "mlonmcu.target.arm", "mlonmcu.target.riscv", "mlonmcu.testing", "modules", "postprocess", "readme", "usage"], "filenames": ["AUTHORS.md", "COMPONENTS.md", "CONTRIBUTING.md", "DESIGN.md", "ENVIRONMENTS.md", "LOGGING.md", "POSTPROCESS.md", "authors.rst", "components.rst", "components/AUTO_VECTORIZE.md", "components/CMSISNNBYOC.md", "components/MURISCVNNBYOC.md", "components/auto_vectorize.rst", "components/cmsisnnbyoc.rst", "components/muriscvnnbyoc.rst", "contributing.rst", "design.rst", "docs.rst", "environments.rst", "history.rst", "index.rst", "installation.rst", "logging.rst", "mlonmcu.rst", "mlonmcu.cli.rst", "mlonmcu.cli.helper.rst", "mlonmcu.context.rst", "mlonmcu.environment.rst", "mlonmcu.feature.rst", "mlonmcu.flow.rst", "mlonmcu.flow.tflm.rst", "mlonmcu.flow.tflm.backend.rst", "mlonmcu.flow.tvm.rst", "mlonmcu.flow.tvm.backend.rst", "mlonmcu.models.rst", "mlonmcu.platform.rst", "mlonmcu.platform.espidf.rst", "mlonmcu.platform.microtvm.rst", "mlonmcu.platform.mlif.rst", "mlonmcu.platform.tvm.rst", "mlonmcu.platform.zephyr.rst", "mlonmcu.session.rst", "mlonmcu.session.postprocess.rst", "mlonmcu.setup.rst", "mlonmcu.setup.tasks.rst", "mlonmcu.target.rst", "mlonmcu.target.arm.rst", "mlonmcu.target.riscv.rst", "mlonmcu.testing.rst", "modules.rst", "postprocess.rst", "readme.rst", "usage.rst"], "titles": ["Credits", "Components", "Contributing", "Important Terms and Design Decisions (RFC)", "Environments", "Logging and Verbosity", "Postprocesses", "Credits", "Components", "Auto-Vectorize Feature", "CMSIS-NN BYOC Feature", "muRISCV-NN BYOC Feature", "Auto-Vectorize Feature", "CMSIS-NN BYOC Feature", "muRISCV-NN BYOC Feature", "Contributing", "Important Terms and Design Decisions (RFC)", "Documentation", "Environments", "History", "Welcome to ML on MCU\u2019s documentation!", "Installation", "Logging and Verbosity", "mlonmcu package", "mlonmcu.cli package", "mlonmcu.cli.helper package", "mlonmcu.context package", "mlonmcu.environment package", "mlonmcu.feature package", "mlonmcu.flow package", "mlonmcu.flow.tflm package", "mlonmcu.flow.tflm.backend package", "mlonmcu.flow.tvm package", "mlonmcu.flow.tvm.backend package", "mlonmcu.models package", "mlonmcu.platform package", "mlonmcu.platform.espidf package", "mlonmcu.platform.microtvm package", "mlonmcu.platform.mlif package", "mlonmcu.platform.tvm package", "mlonmcu.platform.zephyr package", "mlonmcu.session package", "mlonmcu.session.postprocess package", "mlonmcu.setup package", "mlonmcu.setup.tasks package", "mlonmcu.target package", "mlonmcu.target.arm package", "mlonmcu.target.riscv package", "mlonmcu.testing package", "mlonmcu", "Postprocesses", "ML on MCU", "Usage"], "terms": {"tum": [0, 1, 2, 7, 8, 15, 21, 51], "depart": [0, 7], "electr": [0, 7], "comput": [0, 7], "engin": [0, 7], "chair": [0, 7, 51], "electron": [0, 7], "design": [0, 5, 7, 20, 22, 51], "autom": [0, 6, 7, 50, 51], "philipp": [0, 7, 51], "van": [0, 7, 51], "kempen": [0, 7, 51], "de": [0, 7], "none": [0, 4, 6, 7, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50], "yet": [0, 3, 4, 7, 16, 18, 41], "why": [0, 3, 7, 16], "first": [0, 4, 7, 18, 19, 43, 51], "The": [1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 26, 43, 45, 51], "type": [1, 3, 4, 8, 16, 18, 20, 23, 34, 41, 42, 43, 45, 49, 51], "which": [1, 3, 4, 5, 6, 8, 16, 18, 22, 23, 24, 26, 28, 41, 42, 43, 45, 50, 51], "can": [1, 2, 3, 4, 5, 6, 8, 15, 16, 18, 21, 22, 23, 26, 34, 41, 42, 43, 45, 50, 51], "process": [1, 4, 6, 8, 18, 21, 23, 24, 26, 41, 43, 50, 51], "mlonmcu": [1, 2, 3, 4, 5, 6, 8, 15, 16, 17, 18, 20, 21, 22, 50, 51, 52], "ar": [1, 2, 3, 4, 5, 6, 8, 9, 12, 15, 16, 18, 22, 26, 34, 43, 50, 51], "given": [1, 2, 4, 8, 15, 18, 23, 26, 41, 43, 45, 46, 47, 51], "implement": [1, 3, 8, 16, 41], "follow": [1, 3, 4, 5, 6, 8, 9, 12, 16, 18, 22, 26, 50, 51], "tabl": [1, 8], "show": [1, 8], "current": [1, 3, 4, 6, 8, 9, 12, 16, 18, 23, 24, 26, 41, 43, 50, 51], "support": [1, 2, 3, 4, 8, 9, 12, 15, 16, 18, 27, 34, 41, 44, 45, 46, 47, 48, 51], "ones": [1, 8], "format": [1, 8, 23, 34, 41, 42, 43], "tflite": [1, 8, 23, 30, 34, 43], "here": [1, 2, 3, 4, 8, 15, 16, 18], "i": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 26, 28, 36, 37, 41, 42, 43, 45, 47, 50, 51], "also": [1, 4, 6, 8, 18, 50, 51], "list": [1, 2, 3, 4, 6, 8, 15, 16, 18, 23, 26, 29, 34, 35, 36, 41, 43, 45, 47, 49, 50], "probabl": [1, 8], "furtur": [1, 4, 8, 18, 43], "onnx": [1, 8, 23, 34], "tensorflow": [1, 8, 44], "savedmodel": [1, 8], "pb": [1, 8, 23, 34], "while": [1, 4, 8, 18, 23, 43, 51], "you": [1, 2, 3, 6, 8, 15, 16, 21, 50, 51], "us": [1, 2, 3, 5, 6, 8, 10, 11, 13, 14, 15, 16, 20, 22, 23, 26, 28, 34, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52], "your": [1, 2, 3, 8, 15, 16, 21, 51], "own": [1, 8], "we": [1, 3, 4, 8, 16, 18, 48], "provid": [1, 3, 4, 5, 8, 16, 18, 22, 23, 26, 42, 43, 51], "zoo": [1, 8], "clone": [1, 2, 8, 15, 21, 23, 43, 44], "from": [1, 4, 5, 6, 8, 18, 20, 22, 23, 26, 27, 34, 42, 43, 44, 45, 50], "github": [1, 2, 8, 15, 21, 34, 51], "collect": [1, 8, 23, 26, 42, 45], "eda": [1, 2, 8, 15, 21, 51], "ei": [1, 2, 8, 15, 21, 51], "arm": [1, 8, 23, 44, 45, 47], "softwar": [1, 3, 8, 16, 41, 51], "ml": [1, 2, 8, 15, 21, 23, 52], "work": [1, 2, 4, 8, 15, 18, 26, 32, 45, 46, 47, 51], "progress": [1, 8, 41, 43], "For": [1, 4, 5, 8, 18, 22, 51], "each": [1, 4, 6, 8, 18, 43, 45, 50], "number": [1, 3, 6, 8, 16, 26, 33, 34, 35, 37, 39, 50, 51], "tenflowflow": [1, 8], "lite": [1, 8], "microcontrol": [1, 8], "tflm": [1, 8, 23, 29, 34, 44], "default": [1, 3, 4, 5, 8, 9, 12, 16, 18, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 51], "interpret": [1, 8, 23, 43], "tflmi": [1, 8, 9, 12, 29, 30], "offlin": [1, 8], "compil": [1, 3, 8, 16, 23, 28, 35, 36, 37, 38, 40, 41, 43, 44, 48, 49, 51], "tflmc": [1, 8, 23, 29, 30, 43], "tvm": [1, 8, 10, 11, 13, 14, 23, 29, 34, 35, 37, 42, 43], "aot": [1, 8], "executor": [1, 8, 33], "tvmaot": [1, 8, 9, 12, 29, 32], "graph": [1, 8, 33, 43], "tvmrt": [1, 8, 29, 32], "custom": [1, 4, 5, 8, 18, 22], "codegener": [1, 8], "tvmcg": [1, 8, 29, 32], "some": [1, 3, 4, 5, 6, 8, 16, 18, 22, 23, 43, 50, 51], "especi": [1, 8, 51], "simul": [1, 3, 8, 16, 44, 45, 47, 48], "base": [1, 3, 4, 5, 6, 8, 16, 18, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51], "directli": [1, 8], "build": [1, 8, 23, 35, 37, 39, 41, 43, 44, 49], "more": [1, 2, 3, 4, 5, 8, 15, 16, 18, 22, 51], "complivc": [1, 8], "e": [1, 3, 4, 8, 9, 12, 16, 18, 43, 45], "g": [1, 3, 4, 8, 9, 12, 16, 18, 51], "real": [1, 3, 8, 16, 23, 43], "hardwar": [1, 3, 8, 16], "reus": [1, 6, 8, 50], "exist": [1, 3, 4, 8, 16, 18, 23, 26, 34, 43], "flow": [1, 3, 4, 8, 16, 17, 18, 23, 37, 39, 49], "flash": [1, 8, 23, 35, 36, 37, 39, 40], "risc": [1, 8, 9, 12, 28, 45, 47, 48], "v": [1, 5, 8, 9, 12, 22, 28, 44, 45, 47, 48], "etiss": [1, 8, 23, 43, 45, 51], "pulpino": [1, 8, 45, 47], "etiss_pulpino": [1, 8, 23, 45], "spike": [1, 8, 23, 37, 43, 45], "vpsimplu": [1, 8], "ovpsim": [1, 8, 23, 43, 45], "corstone300": [1, 8, 23, 43, 45], "fvp": [1, 8, 44, 45, 46, 47], "x86": [1, 8, 45], "host": [1, 8, 45], "host_x86": [1, 8, 23, 49], "esp": [1, 8, 36, 44], "idf": [1, 8, 36, 44], "espidf": [1, 8, 23, 35, 37, 43], "lx6": [1, 8], "esp32": [1, 8], "c3": [1, 8], "esp32c3": [1, 8], "To": [1, 2, 4, 6, 8, 15, 18, 21, 50, 51, 52], "extend": [1, 6, 8, 50], "read": [1, 3, 8, 16, 26], "would": [1, 2, 3, 4, 8, 15, 16, 18], "great": [1, 8], "thi": [1, 2, 3, 4, 5, 6, 8, 9, 12, 15, 16, 18, 21, 22, 26, 41, 43, 47, 50, 51], "arduino": [1, 8, 37], "excosystem": [1, 8], "platformio": [1, 8], "zephyro": [1, 8], "an": [1, 2, 3, 4, 5, 8, 15, 16, 18, 22, 23, 26, 27, 34, 36, 38, 43, 45, 46, 47, 51], "extens": [1, 3, 8, 10, 11, 13, 14, 16, 23, 26, 34, 35, 36, 37, 44, 45, 47, 51], "overview": [1, 8, 45], "avail": [1, 4, 6, 8, 9, 12, 18, 26, 29, 41, 43, 50, 51], "those": [1, 3, 8, 16, 51], "denot": [1, 8], "check": [1, 2, 4, 8, 9, 12, 15, 18, 23, 26, 34, 35, 36, 51], "mark": [1, 8], "respect": [1, 8], "column": [1, 6, 8, 42, 50], "setup": [1, 2, 3, 8, 15, 16, 17, 21, 23, 28, 49, 51], "other": [1, 2, 3, 4, 8, 15, 16, 18, 23, 26, 28], "debug": [1, 8, 20, 23, 35, 36, 37, 38, 40, 43, 45], "arena": [1, 8], "usag": [1, 4, 8, 18, 20, 45], "debug_arena": [1, 8, 29, 30, 31, 32, 33], "valid": [1, 4, 8, 18, 23, 34, 37, 38, 43, 49], "output": [1, 8, 20, 34, 43, 45], "data": [1, 6, 8, 9, 12, 23, 27, 31, 34, 43, 45, 49, 50], "muriscv": [1, 8, 20, 44], "nn": [1, 8, 20, 44], "muriscvnn": [1, 8, 23, 30, 38, 43], "cmsi": [1, 8, 20, 44, 45, 46], "cmsisnn": [1, 8, 23, 30, 38, 43, 45, 46], "byoc": [1, 8, 20], "cmsisnnbyoc": [1, 8, 10, 13, 32, 33, 38], "fuse": [1, 8], "tile": [1, 8], "fusetil": [1, 8], "meori": [1, 8], "planner": [1, 8], "memplan": [1, 8], "unifi": [1, 3, 8, 16], "static": [1, 8, 42, 43, 45], "memori": [1, 8, 42, 45, 47], "usmp": [1, 8, 32, 33], "vext": [1, 8, 11, 14, 37, 38, 44, 45, 47], "gdbserver": [1, 8, 45, 47], "vp": [1, 8, 45, 47], "etissdbg": [1, 8, 47], "creat": [1, 2, 8, 15, 20, 23, 26, 41, 43, 51], "trace": [1, 5, 8, 22, 45, 47], "unpack": [1, 8, 47], "api": [1, 3, 8, 16, 28, 33, 45], "unpacked_api": [1, 8, 29, 32, 33], "autotun": [1, 8, 32, 33, 41, 43], "tune": [1, 8, 23, 35, 37, 39, 41, 49], "record": [1, 8, 26, 33], "tri": [1, 8, 26, 43], "either": [1, 4, 8, 18, 21], "intern": [1, 3, 8, 16, 23], "hidden": [1, 8, 27], "user": [1, 3, 4, 5, 8, 16, 18, 22, 23, 26, 43, 45, 51], "reli": [1, 8], "3rd": [1, 8], "parti": [1, 8], "instal": [1, 2, 3, 4, 8, 15, 16, 18, 20, 24, 26, 43, 44], "them": [1, 2, 4, 8, 15, 18, 51], "give": [1, 8], "set": [1, 2, 3, 4, 5, 8, 10, 11, 13, 14, 15, 16, 18, 22, 23, 26, 41, 43, 45, 49, 51], "toolchain": [1, 8, 9, 12, 23, 27, 35, 37, 38, 43, 44, 45, 47], "gcc": [1, 8, 9, 12, 37, 38, 44], "linux": [1, 8], "download": [1, 8, 21, 23, 43, 44, 51], "extract": [1, 8, 23, 43, 45], "llvm": [1, 8, 9, 12, 23, 37, 38, 43, 47, 51], "repositori": [1, 4, 8, 18, 21, 43, 44, 45, 51], "bare_etiss_processor": [1, 8], "proxi": [1, 8, 44], "kernel": [1, 8, 44], "corston": [1, 8], "300": [1, 8], "micro": [1, 8, 51], "includ": [1, 2, 8, 15, 41, 51], "configur": [1, 4, 5, 8, 18, 22, 23, 26, 35, 38, 41, 43, 51], "utvm": [1, 8, 44], "staticrt": [1, 8], "codegen": [1, 8], "intention": [1, 8], "NOT": [1, 8], "ovpsimplu": [1, 8], "close": [1, 8, 19, 23, 26, 35, 36, 37, 38, 39, 40, 41], "sourc": [1, 3, 8, 16, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51], "need": [1, 3, 4, 5, 6, 8, 9, 12, 16, 18, 22, 23, 43, 50, 51], "individu": [1, 8, 9, 12], "licens": [1, 8, 51], "free": [1, 8, 41, 51], "make": [1, 2, 4, 5, 6, 8, 15, 18, 22, 23, 43, 50, 51], "sure": [1, 2, 4, 8, 15, 18, 51], "path": [1, 4, 8, 18, 23, 24, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 47, 49], "requir": [1, 3, 4, 5, 6, 8, 9, 12, 16, 18, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51], "welcom": [2, 15], "thei": [2, 3, 4, 15, 16, 18], "greatli": [2, 15], "appreci": [2, 15], "everi": [2, 6, 15, 50, 51], "littl": [2, 15], "bit": [2, 15], "help": [2, 4, 5, 6, 15, 18, 22, 50, 51], "credit": [2, 15, 20], "alwai": [2, 4, 5, 15, 18, 21, 22, 51], "mani": [2, 15], "wai": [2, 3, 4, 15, 16, 18], "http": [2, 15, 21, 34, 43, 51], "com": [2, 15, 21, 34, 51], "issu": [2, 3, 15, 16, 51], "If": [2, 3, 4, 5, 15, 16, 18, 21, 22, 23, 26, 34, 43, 51], "pleas": [2, 3, 4, 15, 16, 18, 47], "oper": [2, 4, 6, 15, 18, 43, 50], "system": [2, 3, 4, 15, 16, 18, 45, 51], "name": [2, 3, 4, 15, 16, 18, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48], "version": [2, 3, 4, 15, 16, 17, 18, 43, 49, 51], "ani": [2, 15, 43], "detail": [2, 5, 9, 12, 15, 20, 22, 34, 45, 51], "about": [2, 3, 9, 12, 15, 16, 23], "local": [2, 15], "might": [2, 3, 6, 15, 16, 50], "troubleshoot": [2, 15], "step": [2, 15, 51], "reproduc": [2, 3, 15, 16], "look": [2, 4, 15, 18, 25, 26, 28], "through": [2, 15, 21, 45], "anyth": [2, 15, 51], "tag": [2, 15, 43], "want": [2, 15, 51], "open": [2, 3, 15, 16, 23, 41], "whoever": [2, 15], "enhanc": [2, 15, 43], "mcu": [2, 15, 21, 23, 52], "could": [2, 3, 15, 16, 26, 43], "whether": [2, 15, 26], "part": [2, 3, 4, 15, 16, 18, 23, 43], "offici": [2, 5, 15, 22], "doc": [2, 15, 43, 45, 46, 47, 51], "docstr": [2, 15], "even": [2, 15], "web": [2, 15], "blog": [2, 15], "post": [2, 6, 15, 23, 43, 50], "articl": [2, 15], "best": [2, 4, 15, 18, 43, 51], "send": [2, 15], "file": [2, 4, 6, 15, 18, 20, 23, 24, 26, 27, 34, 41, 43, 45, 47, 50, 51], "propos": [2, 3, 15, 16, 51], "explain": [2, 15, 20, 51], "how": [2, 3, 15, 16, 42], "keep": [2, 15, 26, 41, 42], "scope": [2, 15, 23, 28], "narrow": [2, 15], "possibl": [2, 4, 5, 6, 9, 12, 15, 18, 22, 45, 50, 51], "easier": [2, 5, 15, 22, 42], "rememb": [2, 15], "volunt": [2, 15], "driven": [2, 15], "project": [2, 3, 15, 16, 36, 44, 51, 52], "readi": [2, 15], "": [2, 15, 25, 41, 43], "up": [2, 3, 4, 15, 16, 18, 24, 26, 28, 51], "develop": [2, 4, 6, 15, 18, 20, 43, 50], "fork": [2, 15], "repo": [2, 4, 15, 18, 21, 26, 27, 43, 44, 51], "git": [2, 15, 21], "your_name_her": [2, 15], "copi": [2, 15, 21, 23, 41, 43], "virtualenv": [2, 15], "assum": [2, 15], "have": [2, 3, 4, 5, 10, 11, 13, 14, 15, 16, 18, 21, 22, 41, 43, 51], "virtualenvwrapp": [2, 15], "mkvirtualenv": [2, 15], "cd": [2, 3, 15, 16, 51], "python": [2, 3, 6, 15, 16, 21, 23, 34, 43, 50, 51], "py": [2, 6, 15, 21, 26, 34, 44, 45, 50, 51], "branch": [2, 15, 35, 36, 43, 51], "checkout": [2, 15, 51], "b": [2, 15, 37, 39], "bugfix": [2, 15], "now": [2, 15, 51], "chang": [2, 4, 15, 18, 43, 51], "when": [2, 4, 6, 15, 18, 26, 43, 50, 51], "re": [2, 15], "done": [2, 3, 15, 16, 23, 41, 43], "pass": [2, 4, 6, 15, 18, 23, 42, 45, 50, 51], "flake8": [2, 15], "test": [2, 3, 15, 16, 17, 23, 43, 45, 49, 51], "tox": [2, 15], "todo": [2, 3, 6, 8, 15, 16, 25, 33, 41, 42, 43, 47, 50], "pytest": [2, 15, 51], "just": [2, 4, 15, 18, 48], "pip": [2, 15, 21, 51], "commit": [2, 15, 43, 51], "push": [2, 15], "add": [2, 9, 12, 15, 23, 41, 45, 49, 51], "m": [2, 15, 36, 37, 46, 47, 51], "descript": [2, 15, 34], "origin": [2, 3, 15, 16], "websit": [2, 15], "befor": [2, 3, 15, 16, 26, 51], "meet": [2, 15, 43], "should": [2, 3, 4, 5, 15, 16, 18, 22, 26, 43, 45, 51], "function": [2, 5, 6, 15, 22, 23, 24, 26, 34, 41, 42, 43, 45, 50], "updat": [2, 15, 23, 26, 41, 43, 51], "put": [2, 4, 15, 18], "new": [2, 3, 6, 15, 16, 26, 41, 50], "readm": [2, 15, 51], "rst": [2, 15, 51], "3": [2, 15, 23, 26, 27, 28, 32, 33, 34, 41, 43, 51], "5": [2, 15, 23, 28, 34, 41, 43], "6": [2, 15, 23, 28, 34, 41, 43], "7": [2, 15, 23, 28, 34, 41, 43, 51], "8": [2, 9, 12, 15, 23, 34, 36, 43], "pypi": [2, 15, 43], "travi": [2, 15], "ci": [2, 3, 15, 16, 51], "pull_request": [2, 15], "all": [2, 3, 4, 5, 15, 16, 18, 22, 26, 29, 41, 43, 51], "run": [2, 6, 15, 21, 23, 26, 28, 35, 37, 39, 42, 43, 45, 47, 48, 49, 50, 51], "subset": [2, 15], "unittest": [2, 15], "test_mlonmcu": [2, 15], "A": [2, 3, 9, 12, 15, 16, 26, 34, 41, 42, 43, 51], "remind": [2, 15], "maintain": [2, 15], "entri": [2, 4, 15, 18, 23, 34, 43, 45], "histori": [2, 15, 20], "Then": [2, 15, 51], "bump2vers": [2, 15], "patch": [2, 15, 23, 43], "major": [2, 15], "minor": [2, 15], "offer": [3, 16], "hand": [3, 16], "full": [3, 5, 16, 22, 41, 51], "high": [3, 16, 51], "interfac": [3, 16, 24, 38, 43, 45, 51], "well": [3, 5, 16, 22], "larg": [3, 16, 23, 51], "object": [3, 16, 23, 24, 26, 27, 31, 33, 34, 35, 41, 42, 43, 45], "mai": [3, 5, 16, 22], "document": [3, 16, 51], "glossari": [3, 16], "understand": [3, 16, 51], "mean": [3, 6, 16, 26, 50], "core": [3, 16, 43, 44, 45, 47], "concept": [3, 16, 51], "infrastructur": [3, 16], "basic": [3, 4, 9, 12, 16, 18, 43], "reimplement": [3, 16], "tinyml": [3, 16], "benchmark": [3, 6, 16, 23, 36, 37, 38, 39, 40, 41, 43, 45, 47, 50, 51], "wa": [3, 4, 5, 6, 16, 18, 22, 23, 26, 41, 50, 51], "one": [3, 4, 5, 6, 16, 18, 22, 23, 26, 34, 43, 50, 51], "year": [3, 16], "approach": [3, 6, 16, 50], "mind": [3, 16], "split": [3, 16], "previous": [3, 16, 51], "time": [3, 4, 16, 18, 41, 43, 51], "grow": [3, 16], "script": [3, 6, 16, 24, 26, 34, 37, 43, 44, 45, 47, 50], "hierarch": [3, 16], "packag": [3, 4, 5, 16, 17, 18, 22, 49], "depend": [3, 4, 16, 18, 20, 26, 28, 43, 44, 51], "mostli": [3, 16], "invis": [3, 16], "without": [3, 4, 16, 18, 51], "interf": [3, 16, 51], "In": [3, 4, 6, 16, 18, 50], "addit": [3, 4, 16, 18, 23, 43, 45, 51], "revamp": [3, 16], "command": [3, 9, 10, 11, 12, 13, 14, 16, 20, 21, 23, 24, 25, 33, 34, 37, 39, 43, 45, 51], "line": [3, 9, 10, 11, 12, 13, 14, 16, 20, 23, 24, 25, 33, 34, 43, 45, 51], "integr": [3, 16, 42, 51], "eas": [3, 5, 16, 22], "access": [3, 16], "intermedi": [3, 16, 23], "result": [3, 16, 23, 26, 42, 43, 45], "increas": [3, 16], "scalabl": [3, 16], "task": [3, 6, 16, 23, 28, 49, 50], "inher": [3, 16], "parallel": [3, 4, 16, 18, 51], "multipl": [3, 4, 16, 18, 23, 41, 42], "dimens": [3, 16, 34], "model": [3, 4, 6, 16, 17, 18, 20, 23, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 49, 50], "x": [3, 16, 43], "backend": [3, 4, 9, 12, 16, 18, 20, 23, 27, 28, 30, 32, 34, 35, 36, 37, 39, 41, 43, 45, 46, 47, 49, 51], "target": [3, 4, 6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 23, 27, 28, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51], "improv": [3, 16], "expand": [3, 16], "plugin": [3, 16, 17, 26, 44, 45, 47, 49], "abil": [3, 16], "further": [3, 4, 16, 18], "architectur": [3, 16, 47], "code": [3, 16, 44, 51], "qualiti": [3, 16], "ad": [3, 6, 16, 28, 43, 50], "unit": [3, 16, 51], "applic": [3, 16, 51], "common": [3, 6, 16, 23, 43, 47, 49, 50], "wrapper": [3, 16, 29, 32, 43, 45], "exampl": [3, 4, 11, 14, 16, 18, 20, 42, 43, 51], "enabl": [3, 4, 5, 6, 9, 12, 16, 18, 22, 23, 27, 28, 32, 33, 43, 45, 50], "commun": [3, 16], "get": [3, 4, 16, 18, 20, 23, 26, 28, 41, 42, 43, 45, 47], "start": [3, 4, 16, 18, 20, 43], "easili": [3, 16], "ensur": [3, 4, 16, 18, 23], "research": [3, 16, 51], "log": [3, 4, 16, 17, 18, 20, 26, 49], "option": [3, 4, 5, 6, 16, 18, 22, 23, 26, 27, 28, 29, 32, 33, 35, 37, 38, 41, 42, 43, 45, 47, 49, 50, 51], "isol": [3, 4, 16, 18, 51], "two": [3, 5, 6, 16, 22, 23, 43, 50], "found": [3, 4, 16, 18, 26, 43, 45, 51], "class": [3, 5, 6, 16, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50], "config": [3, 4, 5, 6, 10, 11, 13, 14, 16, 17, 18, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50], "dict": [3, 16, 23, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 45, 47], "lead": [3, 16, 20], "less": [3, 16], "framework": [3, 4, 16, 18, 20, 23, 27, 28, 41, 43, 44, 49, 51], "frontend": [3, 4, 16, 18, 20, 23, 27, 28, 41, 43, 49], "specif": [3, 4, 16, 18, 20, 34, 41, 42, 51], "higher": [3, 16], "codebas": [3, 4, 16, 18], "baselin": [3, 16, 41, 42], "variabl": [3, 4, 16, 18, 26, 27, 43, 45, 51], "learn": [3, 4, 16, 18, 51], "inherit": [3, 6, 16, 50], "introduc": [3, 16], "er": [3, 16], "most": [3, 4, 5, 16, 18, 21, 22, 51], "relev": [3, 16, 51], "gener": [3, 4, 6, 16, 18, 23, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 50, 51], "implicitli": [3, 16], "defin": [3, 4, 16, 18, 24, 41, 45, 51], "contain": [3, 16, 26, 41, 43, 51], "load": [3, 16, 23, 26, 35, 36, 41, 49], "convert": [3, 6, 16, 23, 34, 42, 43, 45, 50], "As": [3, 4, 16, 18, 51], "properti": [3, 4, 16, 18, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47], "aforement": [3, 16], "frameworkfeatur": [3, 16, 23, 28], "targetfeatur": [3, 16, 23, 28], "There": [3, 4, 6, 16, 18, 50, 51], "except": [3, 5, 16, 22, 26, 43, 51], "scheme": [3, 16], "mlif": [3, 5, 9, 12, 16, 22, 23, 35, 37, 43, 47], "cmake": [3, 16, 23, 43, 51], "replac": [3, 16, 43], "rel": [3, 4, 16, 18], "long": [3, 16], "altern": [3, 16, 51], "similar": [3, 6, 16, 42, 50], "overwrit": [3, 16, 27, 45], "becom": [3, 16], "case": [3, 4, 16, 18, 43], "onli": [3, 4, 5, 6, 9, 12, 16, 18, 22, 43, 45, 50, 51], "doe": [3, 5, 16, 22, 26, 34, 43, 51], "becaus": [3, 16, 45], "did": [3, 16], "came": [3, 16, 51], "suitabl": [3, 16, 26, 43], "someth": [3, 16], "better": [3, 16], "than": [3, 16], "rais": [3, 5, 16, 22, 23, 26, 34, 43], "discuss": [3, 16], "At": [3, 4, 16, 18], "point": [3, 4, 16, 18, 41, 43, 45, 51], "quiet": [3, 5, 16, 22, 37], "unrealist": [3, 16], "resolut": [3, 16, 51], "mechan": [3, 4, 16, 18, 23], "tool": [3, 4, 16, 18, 43, 45, 51], "howev": [3, 4, 5, 6, 16, 18, 22, 50, 51], "least": [3, 16, 34, 51], "shall": [3, 16], "evalu": [3, 6, 16, 50], "futur": [3, 6, 16, 50], "see": [3, 16, 26, 43, 51], "ck": [3, 16], "renam": [3, 16, 42], "veri": [3, 4, 5, 6, 16, 18, 22, 42, 43, 50, 51], "what": [3, 16, 43], "call": [3, 5, 6, 16, 22, 24, 42, 50], "featur": [4, 5, 6, 17, 18, 20, 22, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50], "out": [4, 18, 28, 32, 33, 34, 37, 39, 45, 46, 47, 51], "box": [4, 18, 51], "reason": [4, 5, 18, 22], "stick": [4, 18], "predefin": [4, 6, 18, 23, 26, 50], "valu": [4, 6, 18, 23, 25, 27, 28, 34, 35, 36, 38, 41, 43, 45, 50], "instead": [4, 5, 18, 22, 45, 51], "hardcod": [4, 18], "url": [4, 18, 27, 43], "insid": [4, 18, 34, 51], "complet": [4, 6, 9, 12, 18, 41, 50], "allow": [4, 9, 12, 18], "low": [4, 18], "effort": [4, 18], "ha": [4, 6, 18, 23, 34, 45, 50, 51], "advantag": [4, 18], "therefor": [4, 18], "differ": [4, 6, 18, 50, 51], "compon": [4, 18, 20, 23, 41, 43, 51], "turn": [4, 6, 9, 12, 18, 50], "certain": [4, 5, 18, 22], "reduc": [4, 18], "typic": [4, 18, 25], "via": [4, 18, 43, 45, 51], "go": [4, 5, 18, 22], "next": [4, 18, 26, 41, 51], "uniqu": [4, 18], "directori": [4, 5, 18, 22, 23, 26, 27, 34, 41, 43, 45, 46, 47, 51], "chosen": [4, 18], "where": [4, 18, 26, 43, 51], "export": [4, 18, 23, 26, 41, 49], "written": [4, 18, 41, 43], "refer": [4, 18, 23, 43], "home": [4, 18, 23, 27, 32, 45, 46, 47, 51], "structur": [4, 18], "yaml": [4, 18, 26, 27], "summar": [4, 18], "mlonmcu_hom": [4, 18, 26, 51], "fill": [4, 18, 32, 33], "automat": [4, 18, 26, 43, 51], "home_dir": [4, 18, 27], "fals": [4, 5, 9, 12, 18, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "locat": [4, 18, 51], "directoriescan": [4, 18], "non": [4, 6, 18, 26, 43, 50], "absolut": [4, 18], "threat": [4, 18], "dep": [4, 18, 23, 26, 28, 43], "clone_url": [4, 18], "some_repo": [4, 18], "insert_repo_url_her": [4, 18], "ref": [4, 18, 27], "optional_branch_tag_or_commit": [4, 18], "disabl": [4, 18], "unwant": [4, 18, 42], "incomat": [4, 18], "specifi": [4, 5, 18, 22, 26, 43], "some_framework": [4, 18], "true": [4, 5, 9, 12, 18, 22, 23, 24, 26, 27, 28, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47], "some_backend": [4, 18], "some_featur": [4, 18], "another_featur": [4, 18], "fronend": [4, 18], "order": [4, 18, 26, 43], "until": [4, 18, 24, 41], "compat": [4, 8, 18, 34, 43, 51], "some_frontend": [4, 18], "another_frontend": [4, 18], "some_target": [4, 18], "some_featue": [4, 18], "var": [4, 18], "some_var": [4, 18], "10": [4, 18, 23, 26, 33, 37, 39, 42, 43], "foo": [4, 6, 18, 25, 43, 50], "bar": [4, 18, 43], "theoret": [4, 18], "omit": [4, 18], "do": [4, 6, 18, 45, 47, 48, 50, 51], "note": [4, 18], "explicitli": [4, 18], "hint": [4, 18, 23, 26], "wildcard": [4, 18], "singl": [4, 6, 18, 41, 42, 50], "everyon": [4, 18], "minim": [4, 5, 6, 18, 22, 23, 47, 50, 51], "strip": [4, 18], "down": [4, 18], "small": [4, 18], "essenti": [4, 18], "dev": [4, 18, 43, 51], "guarante": [4, 18], "tumeda": [4, 18], "publicli": [4, 18], "after": [4, 6, 18, 50], "initi": [4, 5, 6, 18, 22, 23, 24, 26, 27, 41, 47, 50, 51], "being": [4, 5, 18, 22], "freeli": [4, 18], "modifi": [4, 18], "afterward": [4, 18], "init": [4, 18, 23, 49, 51], "shown": [4, 18], "unix": [4, 18], "h": [4, 18], "ask": [4, 18], "question": [4, 18], "interact": [4, 18, 23, 26, 27, 43], "moment": [4, 18], "cli": [4, 5, 17, 18, 22, 23, 45, 49], "subcommand": [4, 18, 24], "resolv": [4, 18, 23, 43], "flag": [4, 5, 18, 22, 23, 26, 43], "regist": [4, 6, 18, 23, 27, 43, 50], "els": [4, 18, 26], "fall": [4, 18], "back": [4, 18, 26], "tmp": [4, 18], "myenv": [4, 18], "env": [4, 18, 23, 26, 37, 45, 49], "experi": [4, 18], "wrap": [4, 18, 23, 41], "mlonmcucontext": [4, 18, 23, 26, 44, 51], "util": [4, 6, 17, 18, 26, 27, 28, 41, 42, 44, 45, 49, 50], "lock": [4, 18, 23, 26, 41], "instanc": [4, 18, 26, 41], "request": [4, 18, 20], "block": [4, 9, 12, 18, 26], "context": [4, 17, 18, 23, 24, 25, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 49, 51], "import": [4, 6, 18, 20, 50, 51, 52], "ctx": [4, 18, 24], "analog": [4, 18], "so": [4, 5, 6, 18, 22, 50], "ini": [4, 18, 23, 26], "On": [5, 22, 25], "side": [5, 22], "level": [5, 9, 12, 22, 23], "info": [5, 22, 45, 47], "q": [5, 22], "warn": [5, 8, 22, 51], "inform": [5, 22, 23, 41, 51], "print": [5, 9, 12, 22, 23, 43, 45], "Of": [5, 22], "cours": [5, 22], "togeth": [5, 22], "clean": [5, 22, 24, 26], "deal": [5, 22], "thing": [5, 22], "term": [5, 20, 22, 34], "stack": [5, 22], "logger": [5, 22, 23, 45, 47], "addition": [5, 22], "execut": [5, 22, 23, 43, 45, 46, 47], "etc": [5, 22, 51], "print_output": [5, 9, 12, 22, 23, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47], "backend_nam": [5, 22, 29, 33, 37, 39, 41], "redirect": [5, 22], "its": [5, 22, 23, 26, 41], "messag": [5, 22, 45], "produc": [5, 22], "environ": [5, 17, 20, 22, 23, 24, 26, 45, 49, 51], "yml": [5, 20, 22, 26, 34], "to_fil": [5, 22, 23, 27, 41, 42], "rotat": [5, 22, 23], "By": [5, 22], "overwritten": [5, 22], "itself": [5, 22, 47], "find": [5, 22, 26, 28, 51], "relat": [5, 22, 28, 42, 51], "date": [5, 22, 51], "affect": [5, 22, 43], "come": [5, 22], "someon": [5, 22], "get_logg": [5, 17, 22, 23, 49], "recent": [6, 21, 26, 43, 50], "intend": [6, 43, 50], "visual": [6, 23, 28, 34, 43, 44, 50], "These": [6, 43, 50], "mainli": [6, 45, 50, 51], "row": [6, 42, 50], "report": [6, 17, 29, 30, 31, 41, 42, 43, 49, 50, 51], "session": [6, 17, 23, 24, 26, 43, 49, 50], "Their": [6, 50], "complex": [6, 50], "vari": [6, 50], "power": [6, 50], "appli": [6, 23, 42, 43, 50], "varieti": [6, 50], "insert": [6, 50], "earlier": [6, 50], "averagecyclespostprocess": [6, 50], "averag": [6, 50], "over": [6, 23, 50, 51], "determinist": [6, 50], "detailedcyclespostprocess": [6, 50], "determin": [6, 26, 41, 50, 51], "cycl": [6, 35, 36, 50], "invoc": [6, 50], "num": [6, 50], "flattenconfig": [6, 50], "dictionari": [6, 25, 34, 43, 50], "item": [6, 23, 25, 50], "filter": [6, 23, 24, 42, 50], "flattenfeatur": [6, 50], "per": [6, 50], "boolean": [6, 50], "postproc": [6, 50], "processstag": [6, 50], "mypostprocess": [6, 41, 42, 50], "def": [6, 28, 29, 34, 45, 50], "__init__": [6, 50], "self": [6, 26, 50, 51], "super": [6, 50], "It": [6, 9, 12, 50, 51], "anoth": [6, 26, 50], "aggregatepostprocess": [6, 50], "newli": [6, 50], "registr": [6, 29, 30, 31, 50], "manual": [6, 10, 11, 13, 14, 50], "register_postprocess": [6, 50], "decor": [6, 28, 43, 50], "plai": [6, 50], "auto": [8, 20, 32, 33], "vector": [8, 20, 48], "f": [9, 12], "auto_vector": [9, 12, 38], "argument": [9, 12, 43, 45, 46, 47, 51], "loop": [9, 12], "optim": [9, 12, 35, 38, 40], "o2": [9, 12], "o1": [9, 12], "off": [9, 12], "ne": [9, 12], "verbos": [9, 12, 20, 23, 37, 43, 44, 45, 47], "dure": [9, 12], "compilil": [9, 12], "mlid": [9, 12], "stdout": [9, 12, 43, 45], "artifact": [9, 12, 17, 29, 34, 35, 41, 42, 43, 49, 51], "effect": [9, 12], "momemt": [9, 12], "vlen": [9, 12, 23, 37, 45, 47], "larger": [9, 12], "equal": [9, 12], "128": [9, 12, 36, 47], "seem": [9, 12, 51], "like": [9, 12, 25, 43, 45, 47, 51], "elen": [9, 12, 23, 37, 45, 47], "64": [9, 12, 36, 47], "proper": [9, 12], "align": [9, 12], "alignment_byt": [9, 12, 29, 32, 33], "break": [9, 12], "select": [10, 11, 13, 14, 47], "mcpu": [10, 11, 13, 14], "desired_layout": [10, 11, 13, 14, 32, 33], "muriscvnnbyoc": [11, 14, 32, 33, 38], "map": [11, 14, 23, 33, 34, 41, 42, 43, 45], "cortex": [11, 14, 45, 46, 47], "m55": [11, 14, 45, 46, 47], "m33": [11, 14], "pext": [11, 14, 37, 38, 44, 45, 47], "m0": [11, 14], "No": [11, 14], "subpackag": [17, 49], "platform": [17, 20, 23, 27, 28, 29, 30, 32, 34, 41, 43, 44, 45, 46, 47, 49], "submodul": [17, 49], "modul": [17, 20, 49], "artifactformat": [17, 23, 49], "lookup_artifact": [17, 23, 49], "filter_config": [17, 23, 49], "remove_config_prefix": [17, 23, 28, 29, 49], "resolve_required_config": [17, 23, 49], "str2bool": [17, 23, 49], "str2dict": [17, 23, 49], "str2list": [17, 23, 49], "get_formatt": [17, 23, 49], "set_log_fil": [17, 23, 49], "set_log_level": [17, 23, 49], "process_extens": [17, 23, 49], "timeout": [17, 28, 35, 36, 37, 39, 40, 49], "exec_timeout": [17, 23, 49], "ask_us": [17, 23, 49], "filter_non": [17, 23, 49], "get_base_prefix_compat": [17, 23, 49], "in_virtualenv": [17, 23, 49], "is_power_of_two": [17, 23, 49], "content": [17, 49], "releas": [19, 20, 23, 26, 41, 43], "stabl": 20, "decis": 20, "rfc": 20, "motiv": 20, "goal": [20, 35, 38], "fundament": 20, "manag": [20, 23, 24, 43], "templat": [20, 23, 33, 35, 37, 38, 44, 49, 51], "registri": [20, 23, 28, 29, 30, 31, 32, 33, 43], "postprocess": [20, 23, 41], "stage": [20, 24, 37, 41], "error": [20, 23, 35, 38, 41, 43, 45], "write": [20, 26, 41, 45], "background": 20, "contribut": 20, "pull": 20, "guidelin": 20, "tip": 20, "deploi": 20, "contributor": 20, "0": [20, 23, 26, 27, 28, 32, 33, 34, 37, 39, 41, 42, 43, 45, 46, 47, 51], "1": [20, 23, 26, 27, 28, 33, 34, 36, 37, 39, 41, 43, 45, 47, 51], "2021": 20, "11": [20, 23, 51], "12": [20, 23], "index": [20, 26, 41, 43], "search": 20, "page": [20, 51], "termin": 21, "prefer": 21, "method": [21, 41, 45], "don": 21, "t": [21, 33, 36, 37, 43, 45], "guid": 21, "public": 21, "Or": 21, "tarbal": 21, "curl": 21, "ojl": 21, "master": 21, "onc": 21, "helper": [23, 24, 26, 41, 42, 43, 45, 49], "pars": [23, 24, 34, 43], "add_build_opt": [23, 24], "get_pars": [23, 24, 29], "handl": [23, 24, 34, 41, 42, 45], "cleanup": [23, 26, 44, 49], "add_common_opt": [23, 24, 45], "add_context_opt": [23, 24], "add_flow_opt": [23, 24], "add_model_opt": [23, 24], "handle_logging_flag": [23, 24], "kickoff_run": [23, 24], "add_compile_opt": [23, 24], "check_arg": [23, 24], "environmenthint": [23, 24], "lookup_user_environ": [23, 24], "add_export_opt": [23, 24], "handle_list_target": [23, 24], "add_init_opt": [23, 24], "add_load_opt": [23, 24], "main": [23, 29, 34, 43, 45, 47, 49, 51], "handle_dock": [23, 24], "add_models_opt": [23, 24], "add_run_opt": [23, 24], "add_setup_opt": [23, 24], "cleanup_sess": [23, 26], "create_sess": [23, 26], "get_sess": [23, 26], "get_sessions_runs_idx": [23, 26], "is_clean": [23, 26], "load_cach": [23, 26], "load_extens": [23, 26], "lookup": [23, 26, 43, 49], "print_summari": [23, 26, 34, 35, 49], "get_environment_by_nam": [23, 26], "get_environment_by_path": [23, 26], "get_id": [23, 26], "load_recent_sess": [23, 26], "lookup_environ": [23, 26], "resolve_environment_fil": [23, 26], "setup_log": [23, 26], "read_write_filelock": [23, 49], "rwlocktimeout": [23, 26], "readfilelock": [23, 26], "acquir": [23, 26], "is_lock": [23, 26], "writefilelock": [23, 26], "backendconfig": [23, 27], "backendfeatureconfig": [23, 27], "baseconfig": [23, 27], "defaultsconfig": [23, 27], "featureconfig": [23, 27], "featurekind": [23, 27], "unknown": [23, 27, 28, 33, 49], "frameworkconfig": [23, 27], "frameworkfeatureconfig": [23, 27], "frontendconfig": [23, 27], "frontendfeatureconfig": [23, 27], "pathconfig": [23, 27], "platformconfig": [23, 27], "platformfeatureconfig": [23, 27], "repoconfig": [23, 27, 43], "recurs": [23, 27, 43], "single_branch": [23, 27], "targetconfig": [23, 27], "targetfeatureconfig": [23, 27], "get_config_dir": [23, 27], "get_environments_dir": [23, 27], "get_environments_fil": [23, 27], "get_plugins_dir": [23, 27], "init_config_dir": [23, 27], "defaultenviron": [23, 27], "from_fil": [23, 27, 41], "get_default_backend": [23, 27], "get_default_framework": [23, 27], "get_default_target": [23, 27], "has_backend": [23, 27], "has_featur": [23, 27], "has_framework": [23, 27], "has_frontend": [23, 27], "has_platform": [23, 27], "has_target": [23, 27], "has_toolchain": [23, 27], "lookup_backend_config": [23, 27], "lookup_backend_feature_config": [23, 27], "lookup_feature_config": [23, 27], "lookup_framework_config": [23, 27], "lookup_framework_feature_config": [23, 27], "lookup_frontend_config": [23, 27], "lookup_frontend_feature_config": [23, 27], "lookup_path": [23, 27], "lookup_platform_config": [23, 27], "lookup_platform_feature_config": [23, 27], "lookup_target_config": [23, 27], "lookup_target_feature_config": [23, 27], "lookup_var": [23, 27], "supports_featur": [23, 27], "userenviron": [23, 27], "clone_models_repo": [23, 27], "create_environment_directori": [23, 27], "create_venv_directori": [23, 27], "initialize_environ": [23, 27], "get_alternative_nam": [23, 27], "get_environment_nam": [23, 27], "get_environments_map": [23, 27], "register_environ": [23, 27], "validate_nam": [23, 27], "loader": [23, 49], "load_environment_from_fil": [23, 27], "fill_environment_yaml": [23, 27], "fill_templ": [23, 27], "get_template_nam": [23, 27], "get_template_text": [23, 27], "write_environment_yaml_from_templ": [23, 27], "writer": [23, 49], "create_environment_dict": [23, 27], "write_environment_to_fil": [23, 27], "backendfeatur": [23, 28], "add_backend_config": [23, 28, 35, 36, 37, 45], "feature_typ": [23, 28], "get_backend_config": [23, 28, 35, 36, 37, 45, 46, 47], "featurebas": [23, 28], "add_framework_config": [23, 28], "get_framework_config": [23, 28], "frontendfeatur": [23, 28], "add_frontend_config": [23, 28], "get_frontend_config": [23, 28], "update_format": [23, 28], "platformfeatur": [23, 28], "add_platform_config": [23, 28, 29, 34, 45], "add_platform_def": [23, 28, 29, 34, 45], "get_platform_config": [23, 28, 29, 34, 45], "get_platform_def": [23, 28, 29, 30, 32, 34, 35, 36, 45, 46, 47], "runfeatur": [23, 28], "add_run_config": [23, 28], "get_run_config": [23, 28], "setupfeatur": [23, 28], "add_required_cache_flag": [23, 28], "add_setup_config": [23, 28], "get_required_cache_flag": [23, 28], "get_setup_config": [23, 28], "add_target_callback": [23, 28], "add_target_config": [23, 28], "get_target_callback": [23, 28], "get_target_config": [23, 28], "hpmcounter": [23, 28], "counter_nam": [23, 28], "enabled_count": [23, 28], "num_count": [23, 28], "supported_count": [23, 28], "tvmtunebas": [23, 28], "append": [23, 28, 41, 43], "early_stop": [23, 28, 39], "max_parallel": [23, 28], "num_work": [23, 28, 41], "results_fil": [23, 28], "trial": [23, 28, 39], "trials_singl": [23, 28, 39], "use_rpc": [23, 28, 35, 37, 39], "visualize_fil": [23, 28], "visualize_l": [23, 28], "get_available_feature_nam": [23, 28], "get_available_featur": [23, 28], "get_matching_featur": [23, 28], "register_featur": [23, 28], "featuretyp": [23, 28], "export_artifact": [23, 29, 34, 35, 45], "generate_artifact": [23, 29, 34, 35, 45], "has_tun": [23, 29], "load_model": [23, 29, 30, 31, 32, 33], "needs_target": [23, 29, 32, 33], "process_featur": [23, 29, 34, 35, 41, 42, 43, 45], "set_tuning_record": [23, 29, 32, 33], "supports_model": [23, 29], "init_backend_featur": [23, 29], "get_available_backend_nam": [23, 29], "convert_data": [23, 49], "write_fil": [23, 34], "coremarkfrontend": [23, 34], "lookup_model": [23, 34], "supported_nam": [23, 34], "dhrystonefrontend": [23, 34], "embenchfrontend": [23, 34], "examplefrontend": [23, 34], "process_metadata": [23, 34], "produce_artifact": [23, 34], "supports_format": [23, 34], "use_inout_data": [23, 34], "layergenfrontend": [23, 34], "fmt": [23, 32, 33, 34], "layergen_ex": [23, 34], "mathisfrontend": [23, 34], "mibenchfrontend": [23, 34], "onnxfrontend": [23, 34], "pbfrontend": [23, 34], "packedfrontend": [23, 34], "fake_pack": [23, 34], "ignore_exist": [23, 34], "use_pack": [23, 34], "paddlefrontend": [23, 34], "polybenchfrontend": [23, 34], "relayfrontend": [23, 34], "relayviz_plott": [23, 34], "tvm_build_dir": [23, 32, 33, 34, 35, 37, 39], "tvm_pythonpath": [23, 32, 33, 34, 35, 37, 39], "visualize_graph": [23, 34], "simplefrontend": [23, 34], "taclebenchfrontend": [23, 34], "tflitefrontend": [23, 34], "analyze_en": [23, 34], "analyze_script": [23, 34], "pack_script": [23, 34], "split_lay": [23, 34], "visualize_en": [23, 34], "visualize_script": [23, 34], "group": [23, 41, 42, 49], "modelgroup": [23, 34], "apply_modelgroup": [23, 34], "find_metadata": [23, 34], "get_model_directori": [23, 34], "list_modelgroup": [23, 34], "list_model": [23, 34], "lookup_models_and_group": [23, 34], "map_frontend_to_model": [23, 34], "print_group": [23, 34], "print_model": [23, 34], "print_path": [23, 34], "metadata": [23, 32, 33, 49], "parse_metadata": [23, 34], "coremarkprogram": [23, 34], "dhrystoneprogram": [23, 34], "embenchprogram": [23, 34], "exampleprogram": [23, 34], "mathisprogram": [23, 34], "get_elem_s": [23, 34], "get_narg": [23, 34], "size": [23, 32, 33, 34, 45], "mibenchprogram": [23, 34], "input_shap": [23, 29, 30, 31, 33, 34], "input_typ": [23, 29, 30, 31, 33, 34], "inputs_path": [23, 34], "metadata_path": [23, 34], "output_shap": [23, 29, 30, 31, 33, 34], "output_typ": [23, 29, 30, 31, 33, 34], "outputs_path": [23, 34], "skip_check": [23, 34, 35, 38], "support_path": [23, 34], "modelformat": [23, 34], "ipynb": [23, 34, 51], "pack": [23, 34, 44, 48], "paddl": [23, 34], "relai": [23, 34, 43], "text": [23, 34, 43, 45, 49], "from_extens": [23, 34], "polybenchprogram": [23, 34], "program": [23, 26, 34, 45, 46, 47, 51], "taclebenchprogram": [23, 34], "workload": [23, 34], "parse_metadata_from_path": [23, 34], "parse_shape_str": [23, 34], "parse_type_str": [23, 34], "backendmodelopt": [23, 34], "tflmimodelopt": [23, 34], "tvmrtmodelopt": [23, 34], "parse_model_options_for_backend": [23, 34], "fill_data_sourc": [23, 34], "get_data_sourc": [23, 34], "lookup_data_buff": [23, 34], "make_hex_arrai": [23, 30, 31, 34], "espidf_target": [23, 35], "microtvm": [23, 35, 44], "microtvm_arduino_target": [23, 35], "microtvm_backend": [23, 35], "microtvm_base_platform": [23, 35], "microtvm_build_platform": [23, 35], "microtvm_compile_platform": [23, 35], "microtvm_corev_ovpsim_target": [23, 35], "microtvm_espidf_target": [23, 35], "microtvm_etiss_target": [23, 35], "microtvm_host_target": [23, 35], "microtvm_mlonmcu_target": [23, 35], "microtvm_spike_target": [23, 35], "microtvm_target": [23, 35], "microtvm_target_platform": [23, 35], "microtvm_template_target": [23, 35], "microtvm_tune_platform": [23, 35], "microtvm_zephyr_target": [23, 35], "mlif_target": [23, 35], "tvm_backend": [23, 35], "tvm_base_platform": [23, 35], "tvm_build_platform": [23, 35], "tvm_rpc_platform": [23, 35], "tvm_target": [23, 35], "tvm_target_platform": [23, 35], "tvm_tune_platform": [23, 35], "zephyr": [23, 35, 37, 43], "zephyr_target": [23, 35], "get_platform_nam": [23, 35, 41], "get_platforms_backend": [23, 35], "get_platforms_target": [23, 35], "print_backend": [23, 35], "print_platform": [23, 35], "print_target": [23, 35], "buildplatform": [23, 35, 37, 39], "supports_build": [23, 35], "compileplatform": [23, 35, 36, 37, 38, 40], "get_metr": [23, 35, 45, 46, 47], "num_thread": [23, 32, 33, 35, 36, 37, 38, 40, 43, 45, 47], "supports_compil": [23, 35], "get_supported_backend": [23, 35, 37, 39], "get_supported_target": [23, 35, 36, 37, 38, 39, 40], "init_directori": [23, 35, 36, 37, 38, 39, 40, 41], "supports_flash": [23, 35], "supports_monitor": [23, 35], "supports_tun": [23, 35], "targetplatform": [23, 35, 36, 38, 39, 40], "create_target": [23, 35, 36, 37, 38, 39, 40], "monitor": [23, 35, 36, 37, 39, 40], "tuneplatform": [23, 35, 39], "tune_model": [23, 35], "get_platform": [23, 35], "register_platform": [23, 35], "add_backend": [23, 41], "add_backend_by_nam": [23, 41], "add_featur": [23, 41], "add_feature_by_nam": [23, 41], "add_features_by_nam": [23, 41], "add_framework": [23, 41], "add_frontend": [23, 41], "add_frontend_by_nam": [23, 41], "add_frontends_by_nam": [23, 41], "add_model": [23, 41], "add_model_by_nam": [23, 41], "add_platform": [23, 41], "add_platform_by_nam": [23, 41], "add_platforms_by_nam": [23, 41], "add_postprocess": [23, 41], "add_postprocess_by_nam": [23, 41], "add_postprocesses_by_nam": [23, 41], "add_target": [23, 41], "add_target_by_nam": [23, 41], "build_platform": [23, 41], "compile_platform": [23, 41], "export_opt": [23, 41], "export_stag": [23, 41], "get_all_config": [23, 41], "get_all_feature_nam": [23, 41], "get_all_postprocess_nam": [23, 41], "get_all_sub_artifact": [23, 41], "get_frontend_nam": [23, 41], "get_reason_text": [23, 41], "get_report": [23, 41], "has_stag": [23, 41], "init_compon": [23, 41], "last_stag": [23, 41], "next_stag": [23, 41], "prefix": [23, 31, 41, 43], "stage_subdir": [23, 41], "target_optimized_layout": [23, 41], "target_optimized_schedul": [23, 41], "target_platform": [23, 41], "target_to_backend": [23, 41], "todict": [23, 41], "tune_en": [23, 41], "tune_platform": [23, 41], "unlock": [23, 41], "write_run_fil": [23, 41], "runstag": [23, 41], "nop": [23, 41], "add_ani": [23, 41], "activ": [23, 26, 41, 51], "create_run": [23, 41], "discard": [23, 41], "enumerate_run": [23, 41], "fail": [23, 26, 34, 41, 51], "process_run": [23, 41], "report_fmt": [23, 41], "request_run_idx": [23, 41], "runs_dir": [23, 41], "update_latest_run_symlink": [23, 41], "sessionstatu": [23, 41], "ara": [23, 43, 45], "arm_gcc": [23, 43, 45, 46], "corev": [23, 43], "cv32e40p": [23, 43, 45], "dtc": [23, 43], "layergen": [23, 34, 43], "pulp": [23, 43, 47], "riscv_gcc": [23, 37, 43, 45, 47], "srecord": [23, 43], "tf": [23, 29, 30, 43], "utvmcg": [23, 32, 33, 43], "veril": [23, 43, 47], "vicuna": [23, 43, 45], "cach": [23, 26, 28, 49], "taskcach": [23, 26, 43], "find_best_match": [23, 43], "read_from_fil": [23, 43], "write_to_fil": [23, 43], "convert_kei": [23, 43], "gen_requir": [23, 49], "validationerror": [23, 43], "format_problem": [23, 43], "join_and_write_requir": [23, 43], "join_requir": [23, 43], "parse_arg": [23, 43], "parse_semv": [23, 43], "semver_to_requir": [23, 43], "validate_constraint": [23, 43], "validate_or_rais": [23, 43], "validate_requirements_by_piec": [23, 43], "clean_cach": [23, 43], "clean_depend": [23, 43], "generate_requir": [23, 43], "get_dependency_ord": [23, 43], "install_depend": [23, 43], "invoke_single_task": [23, 43], "setup_progress_bar": [23, 43], "write_cache_fil": [23, 43], "write_env_fil": [23, 43], "taskfactori": [23, 43], "param": [23, 26, 33, 43, 44, 49], "remov": [23, 41, 43, 51], "reset_chang": [23, 43], "taskgraph": [23, 43], "export_dot": [23, 43], "get_graph": [23, 43], "get_ord": [23, 43], "tasktyp": [23, 43], "misc": [23, 43], "opt": [23, 43], "get_comb": [23, 43], "clone_wrapp": [23, 43], "download_and_extract": [23, 43], "exec": [23, 43, 45, 46, 47], "exec_getout": [23, 43], "is_popul": [23, 43], "makedirnam": [23, 43], "makeflag": [23, 43], "mkdir": [23, 43], "move": [23, 43], "symlink": [23, 43], "riscv": [23, 44, 45], "ara_rtl": [23, 45], "corev_ovpsim": [23, 37, 45], "gvsoc_pulp": [23, 45], "riscv_bext_target": [23, 45], "riscv_pext_target": [23, 45], "riscv_qemu": [23, 45], "riscv_vext_target": [23, 45], "bench": [23, 49], "add_bench_metr": [23, 45], "parse_bench_result": [23, 45], "init_target_featur": [23, 45], "elf": [23, 35, 36, 37, 39, 40, 46, 47, 49], "get_result": [23, 45], "parseelf": [23, 45], "parse_cmdlin": [23, 45], "printsz": [23, 45], "print_result": [23, 45], "write_csv": [23, 45], "hostx86target": [23, 45], "gdbserver_attach": [23, 45, 47], "gdbserver_en": [23, 45, 47], "gdbserver_port": [23, 37, 45, 47], "get_arch": [23, 35, 36, 45, 46, 47], "metric": [23, 47, 49], "from_csv": [23, 45], "get_data": [23, 45], "to_csv": [23, 45], "get_hardware_detail": [23, 45], "get_target_system": [23, 35, 36, 45, 47], "inspect": [23, 45], "parse_exit": [23, 45, 47], "reconfigur": [23, 45, 47], "repeat": [23, 33, 35, 36, 37, 39, 45, 46, 47], "corstone300target": [23, 45, 46], "cmsis_dir": [23, 45, 46], "cmsisnn_dir": [23, 45, 46], "enable_dsp": [23, 45, 46], "enable_ethosu": [23, 45, 46], "enable_fpu": [23, 45, 46], "enable_mvei": [23, 45, 46], "ethosu_num_mac": [23, 45, 46], "ethosu_platform_dir": [23, 45, 46], "extra_arg": [23, 37, 45, 46, 47], "fvp_ex": [23, 45, 46], "gcc_prefix": [23, 45, 46], "get_default_fvp_arg": [23, 45, 46], "get_ethosu_fvp_arg": [23, 45, 46], "parse_stdout": [23, 45, 46, 47], "timeout_sec": [23, 37, 45, 46, 47], "etisspulpinotarget": [23, 45, 47], "get_ini_bool_config": [23, 45, 47], "ovpsimtarget": [23, 45, 47], "attr": [23, 35, 36, 37, 45, 47], "embedded_vext": [23, 37, 45, 47], "enable_pext": [23, 37, 45, 47], "enable_vext": [23, 37, 45, 47], "end_to_end_cycl": [23, 45, 47], "get_default_ovpsim_arg": [23, 45, 47], "ovpsim_ex": [23, 45, 47], "pext_spec": [23, 37, 45, 47], "variant": [23, 37, 45, 47], "vext_spec": [23, 37, 45, 47], "riscvqemutarget": [23, 45, 47], "get_cpu_str": [23, 45, 47], "get_qemu_arg": [23, 45, 47], "riscv32_qemu_ex": [23, 45, 47], "spiketarget": [23, 45, 47], "isa": [23, 45, 47], "spike_ex": [23, 35, 37, 45, 47], "spike_pk": [23, 35, 37, 45, 47], "spikepk_extra_arg": [23, 45, 47], "get_target": [23, 45], "register_target": [23, 45], "riscv_toolchain": [23, 49], "myriscvtarget": [23, 48], "myrvptarget": [23, 48], "myrvvtarget": [23, 48], "defint": 23, "raw": [23, 34, 49], "archiv": [23, 41, 43, 49], "dest": [23, 26, 27, 34, 43], "return": [23, 24, 25, 26, 29, 34, 41, 43, 45], "writtem": 23, "disk": [23, 26, 34, 41], "cmdline": [23, 45], "checker": 23, "attribut": [23, 26, 43, 45], "enum": [23, 27, 28, 34, 36, 41, 43], "enumer": [23, 27, 28, 34, 36, 38, 43], "13": 23, "bin": [23, 34, 49, 51], "imag": [23, 49, 51], "json": [23, 49], "9": 23, "mlf": [23, 32, 33, 37, 49], "4": [23, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 47], "numpi": [23, 49], "shared_object": [23, 49], "2": [23, 26, 27, 28, 34, 36, 41, 43, 51], "first_onli": 23, "match": [23, 43], "required_kei": 23, "global": [23, 28, 41, 43], "cfg": [23, 34, 43, 51], "assertionerror": [23, 34], "kei": [23, 25, 26, 33, 43, 45], "miss": 23, "skip": [23, 41], "iter": 23, "ret": 23, "transform": [23, 42], "default_flag": [23, 27], "paramet": [23, 26, 34, 43, 45], "str": [23, 26, 34, 36, 43, 45, 47], "allow_non": 23, "loge": 23, "formatt": 23, "properli": 23, "runtim": [23, 32, 33], "definit": [23, 26, 27, 28, 30, 32, 34, 41, 42, 43, 44, 45, 46, 47], "around": [23, 41], "panda": 23, "datafram": [23, 42], "df": [23, 42, 49], "combin": [23, 34, 41, 43, 51], "three": [23, 51], "pre": [23, 43], "setter": [23, 41], "set_main": [23, 49], "center": 23, "set_post": [23, 49], "right": 23, "third": [23, 43], "set_pr": [23, 49], "left": 23, "func": [23, 43], "arg": [23, 24, 25, 29, 33, 36, 37, 39, 40, 41, 43, 45, 46, 47], "kwarg": [23, 33, 36, 37, 39, 40, 41, 43, 45, 46, 47], "bool": [23, 26, 43, 45], "yes_kei": 23, "y": [23, 43], "j": 23, "no_kei": 23, "n": 23, "drop": [23, 41, 42], "sy": 23, "detect": 23, "virtual": [23, 45, 46, 47, 51], "top": [23, 41, 42], "filter_arg": [24, 25], "extract_backend_nam": [24, 25], "extract_config": [24, 25], "extract_config_and_feature_nam": [24, 25], "extract_feature_nam": [24, 25], "extract_frontend_nam": [24, 25], "extract_platform_nam": [24, 25], "extract_postprocess_nam": [24, 25], "extract_target_nam": [24, 25], "parse_var": [24, 25], "parser": [24, 45], "subpars": 24, "parent": 24, "require_target": 24, "with_hom": 24, "mana": 24, "created_at": 24, "invok": 24, "callback": 24, "consol": [24, 43], "pair": [25, 45], "separ": [25, 42, 43], "That": 25, "revers": 25, "shellarg": 25, "argpars": [25, 45], "declar": 25, "hello": 25, "world": 25, "seri": 25, "contextmanag": 26, "deps_lock": 26, "folder": 26, "session_idx": 26, "counter": [26, 28], "leav": 26, "old": 26, "label": [26, 41], "session_id": 26, "run_id": 26, "resum": 26, "inact": 26, "suppli": 26, "alia": [26, 27, 34], "success": 26, "int": [26, 43], "sort": [26, 43], "id": 26, "store": [26, 35, 36, 43], "integ": [26, 43], "repres": [26, 41, 43], "empti": [26, 43], "count": [26, 35, 36, 42], "maximum": 26, "neither": 26, "nor": 26, "perform": [26, 28], "sucess": 26, "filelock": 26, "timeouterror": 26, "filepath": [26, 29], "raise_except": 26, "occup": 26, "situat": 26, "alreadi": [26, 41, 43, 51], "occupi": 26, "otherwis": 26, "succeed": 26, "raiseexcept": 26, "delet": 26, "log_level": 27, "20": [27, 51], "log_to_fil": 27, "log_rot": 27, "default_framework": 27, "default_backend": 27, "default_target": 27, "cleanup_auto": 27, "cleanup_keep": 27, "100": [27, 37, 39], "kind": 27, "classmethod": [27, 28, 34, 38, 41], "filenam": [27, 34, 43, 45], "names_onli": 27, "merg": [27, 41, 42, 47], "refresh": [27, 43], "create_venv": 27, "clone_model": 27, "allow_exist": 27, "template_nam": 27, "abc": [28, 29, 34], "input_format": [28, 34], "output_format": [28, 34], "required_flag": 28, "pre_callback": 28, "post_callback": 28, "32": [28, 36, 37, 45, 47], "feature_nam": [28, 41], "tflmframework": [29, 30], "optimized_kernel": [29, 30], "optimized_kernel_inc_dir": [29, 30], "optimized_kernel_lib": [29, 30], "tf_src": [29, 30], "tflmbackend": [29, 30, 31], "tflmcbackend": [29, 30, 31], "generate_head": [29, 30, 31, 32, 33], "tflmibackend": [29, 30, 31], "arena_s": [29, 30, 31, 32, 33, 34], "custom_op": [29, 30, 31, 34], "legaci": [29, 30, 31], "op": [29, 30, 31, 33], "ops_resolv": [29, 30, 31], "model_info": [29, 32], "python_util": [29, 32], "tuner": [29, 32], "tvmaotplu": [29, 32], "tvmc_util": [29, 32], "tvmllvm": [29, 32], "tvmframework": [29, 32], "crt_config_dir": [29, 32], "extra_inc": [29, 32], "extra_lib": [29, 32], "tvm_src": [29, 32], "get_crt_config_dir": [29, 32], "tvmaotbackend": [29, 32, 33], "get_tvmc_compile_arg": [29, 32, 33], "get_workspace_size_from_metadata": [29, 32, 33], "tvmaotplusbackend": [29, 32, 33], "tvmcgbackend": [29, 32, 33], "get_max_workspace_size_from_metadata": [29, 32, 33], "tvmrtbackend": [29, 32, 33], "abstract": [29, 34, 35, 42], "tupl": [29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 43, 45], "src_dir": [29, 30, 32, 34, 36, 37, 38, 45, 47], "tflmicodegen": [30, 31], "generate_wrapp": [30, 31, 32, 33], "makecustomopprototyp": [30, 31], "make_op_registr": [30, 31], "special": [30, 32, 43], "ex": [30, 31, 32, 33, 34, 37, 45, 46, 47], "1048576": [30, 31, 32, 33], "mutabl": [30, 31], "header": 31, "tvmbackend": [32, 33, 37, 39], "custom_unrol": [32, 33], "desired_layout_map": [32, 33], "desired_layout_op": [32, 33], "disable_vector": [32, 33], "disabled_pass": [32, 33], "dump": [32, 33], "extra_target_detail": [32, 33], "extra_target": [32, 33], "get_graph_and_params_from_mlf": [32, 33], "get_target_detail": [32, 33], "get_tuning_record": [32, 33], "invoke_tvmc": [32, 33, 35, 37, 39], "invoke_tvmc_compil": [32, 33], "opt_level": [32, 33], "pass_config": [32, 33, 42], "refresh_model_info": [32, 33], "relay_debug": [32, 33], "target_devic": [32, 33], "target_kei": [32, 33], "target_mabi": [32, 33], "target_march": [32, 33], "target_mattr": [32, 33], "target_mcpu": [32, 33], "target_model": [32, 33], "target_mtripl": [32, 33], "target_num_cor": [32, 33], "tophub_url": [32, 33], "tvm_configs_dir": [32, 33, 35, 37, 39], "tvmc_custom_script": [32, 33, 35, 37, 39], "tvmc_extra_arg": [32, 33], "use_tlcpack": [32, 33], "use_tuning_result": [32, 33], "modelinfo": [32, 33], "has_in": [32, 33], "has_out": [32, 33], "onnxmodelinfo": [32, 33], "pbmodelinfo": [32, 33], "paddlemodelinfo": [32, 33], "relaymodelinfo": [32, 33], "relaytensorinfo": [32, 33], "tensorinfo": [32, 33], "tflitemodelinfo": [32, 33], "tflitetensorinfo": [32, 33], "get_fallback_model_info": [32, 33], "get_model_format": [32, 33], "get_model_info": [32, 33], "get_onnx_model_info": [32, 33], "get_paddle_model_info": [32, 33], "get_pb_model_info": [32, 33], "get_relay_model_info": [32, 33], "get_supported_format": [32, 33], "get_tfgraph_inout": [32, 33], "get_tflite_model_info": [32, 33], "parse_relay_main": [32, 33], "shape_from_str": [32, 33], "prepare_python_environ": [32, 33], "get_autoscheduler_default": [32, 33], "get_autotuning_default": [32, 33], "get_autotvm_default": [32, 33], "get_metascheduler_default": [32, 33], "check_allow": [32, 33], "gen_extra_target_details_arg": [32, 33], "gen_target_details_arg": [32, 33], "get_bench_tvmc_arg": [32, 33], "get_data_tvmc_arg": [32, 33], "get_desired_layout_arg": [32, 33], "get_disabled_pass_tvmc_arg": [32, 33], "get_input_shapes_tvmc_arg": [32, 33], "get_pass_config_tvmc_arg": [32, 33], "get_rpc_tvmc_arg": [32, 33], "get_runtime_executor_tvmc_arg": [32, 33], "get_target_tvmc_arg": [32, 33], "get_tuning_records_tvmc_arg": [32, 33], "get_tvmaot_tvmc_arg": [32, 33], "get_tvmrt_tvmc_arg": [32, 33], "tvmllvmbackend": [32, 33], "calc_pag": [32, 33], "generate_aot_includ": [32, 33], "generate_common_includ": [32, 33], "generate_graph_includ": [32, 33], "generate_tvmaot_wrapp": [32, 33], "generate_tvmrt_wrapp": [32, 33], "generate_wrapper_head": [32, 33], "getsiz": [32, 33], "write_tvmaot_wrapp": [32, 33], "write_tvmrt_wrapp": [32, 33], "runner": [32, 45, 46, 47], "resourc": 32, "crt_config": 32, "crt": [32, 33], "system_lib": [32, 33], "16": [32, 33, 36, 38], "autotuned_mod": [32, 33], "autotuned_results_fil": [32, 33], "extra_pass_config": [32, 33], "tir": [32, 33], "disable_leg": [32, 33], "moiopt": [32, 33], "uma_backend": [32, 33], "algorithm": [32, 33], "hill_climb": [32, 33], "c": [33, 36, 37, 47], "build_dir": [33, 34, 35, 36, 37, 38, 39, 40], "configs_dir": [33, 37, 39], "pythonpath": [33, 34, 37, 39], "tuner_nam": 33, "cwd": [33, 43, 45, 46, 47], "in_tensor": 33, "out_tensor": 33, "fix_nam": 33, "model_fil": 33, "mod_text": 33, "shape": [33, 34], "dtype": 33, "model_buf": 33, "shape_str": 33, "debug_cfg": 33, "target_detail": 33, "print_tim": 33, "profil": [33, 35, 37, 39], "end_to_end": 33, "mode": [33, 34, 43], "ins_fil": [33, 35, 37, 39], "outs_fil": [33, 35, 37, 39], "print_top": [33, 35, 37, 39], "layout": 33, "hostnam": 33, "port": [33, 35, 36, 37, 40], "tuning_records_fil": 33, "link_param": 33, "workspace_s": 33, "page_s": 33, "1024": [33, 34, 36], "alloc": 33, "mod_nam": 33, "tensor": 33, "variou": 34, "binari": 34, "val": 34, "actual": [34, 43, 45], "byte": [34, 42, 43], "chose": 34, "wrong": 34, "valueerror": 34, "convers": 34, "pint": 34, "save": 34, "embench": [34, 44], "ins": 34, "retur": 34, "input": [34, 43], "mibench": 34, "packer": 34, "polybench": 34, "relayviz": 34, "equival": 34, "taclebench": 34, "tflite_analyz": 34, "model_nam": [34, 41], "depth": 34, "all_model": 34, "duplic": 34, "alt": 34, "field": 34, "pdmodel": 34, "txt": [34, 41, 43, 47, 51], "ext": [34, 47], "inputs_str": 34, "string": [34, 43, 47], "usabl": 34, "taken": 34, "apach": [34, 51], "blob": 34, "driver": 34, "tvmc": 34, "shape_pars": 34, "form": [34, 43], "input_nam": 34, "dim1": 34, "dim2": 34, "dimn": 34, "input_name2": 34, "indic": [34, 41], "desir": 34, "colon": 34, "forward": 34, "slash": 34, "dot": 34, "within": 34, "space": 34, "arrai": 34, "shape_dict": 34, "ty": 34, "type_dict": 34, "builtin_op": 34, "in_buf": 34, "out_buf": 34, "input_path": 34, "output_path": 34, "espidfplatform": [35, 36], "baud": [35, 36, 37, 40], "espidf_install_dir": [35, 36], "espidf_src_dir": [35, 36], "flash_onli": [35, 36, 40], "get_idf_cmake_arg": [35, 36], "get_idf_serial_arg": [35, 36], "idf_ex": [35, 36], "invoke_idf_ex": [35, 36], "prepar": [35, 36, 37, 38, 40], "project_templ": [35, 36, 37, 40], "use_idf_monitor": [35, 36], "wait_for_us": [35, 36, 40], "get_project_templ": [35, 36, 40], "esp32c3perfcount": [35, 36], "branch_taken": [35, 36], "idl": [35, 36], "inst": [35, 36], "inst_comp": [35, 36], "jmp_hazard": [35, 36], "jmp_uncond": [35, 36], "ld_hazard": [35, 36], "esp32c3target": [35, 36], "abi": [35, 36, 37, 45, 47], "arch": [35, 36, 37, 45, 47], "fpu": [35, 36, 37, 45, 47], "has_fpu": [35, 36, 45, 47], "xlen": [35, 36, 37, 45, 47], "create_espidf_platform_target": [35, 36], "get_espidf_platform_target": [35, 36], "register_espidf_platform_target": [35, 36], "microtvmplatform": [35, 37], "arduinomicrotvmplatformtarget": [35, 37], "arduino_install_dir": [35, 37], "get_project_opt": [35, 37], "update_environ": [35, 37], "create_microtvm_platform_backend": [35, 37], "get_microtvm_platform_backend": [35, 37], "register_microtvm_platform_backend": [35, 37], "microtvmbaseplatform": [35, 37], "collect_available_project_opt": [35, 37], "get_template_arg": [35, 37], "invoke_tvmc_micro": [35, 37], "project_opt": [35, 37], "filter_project_opt": [35, 37], "get_project_option_arg": [35, 37], "parse_project_options_from_stdout": [35, 37], "microtvmbuildplatform": [35, 37], "create_backend": [35, 37, 39], "microtvmcompileplatform": [35, 37], "invoke_tvmc_micro_build": [35, 37], "invoke_tvmc_micro_cr": [35, 37], "corevovpsimmicrotvmplatformtarget": [35, 37], "enable_xcorevalu": [35, 37, 45, 47], "enable_xcorevbi": [35, 37, 45, 47], "enable_xcorevbitmanip": [35, 37, 45, 47], "enable_xcorevhwlp": [35, 37, 45, 47], "enable_xcorevmac": [35, 37, 45, 47], "enable_xcorevmem": [35, 37, 45, 47], "enable_xcorevsimd": [35, 37, 45, 47], "etiss_extra_arg": [35, 37], "etiss_script": [35, 37, 45, 47], "gcc_arch": [35, 37, 45, 47], "llvm_arch": [35, 37, 45, 47], "llvm_prefix": [35, 37], "microtvm_ovpsim_src_dir": [35, 37], "riscv_gcc_install_dir": [35, 37], "riscv_gcc_nam": [35, 37], "espidfmicrotvmplatformtarget": [35, 37], "board": [35, 37], "esp_idf_install_dir": [35, 37], "esp_idf_src_dir": [35, 37], "microtvm_espidf_templ": [35, 37], "etissmicrotvmplatformtarget": [35, 37], "cpu_arch": [35, 37, 45, 47], "microtvm_etiss_src_dir": [35, 37], "hostmicrotvmplatformtarget": [35, 37], "mlonmcumicrotvmplatformtarget": [35, 37], "spikemicrotvmplatformtarget": [35, 37], "microtvm_spike_src_dir": [35, 37], "create_microtvm_platform_target": [35, 37], "get_microtvm_platform_target": [35, 37], "name2templ": [35, 37], "register_microtvm_platform_target": [35, 37], "microtvmtargetplatform": [35, 37], "experimental_tvmc_print_tim": [35, 37], "get_tvmc_run_arg": [35, 37, 39], "invoke_tvmc_micro_flash": [35, 37], "invoke_tvmc_micro_run": [35, 37], "invoke_tvmc_run": [35, 37, 39], "skip_flash": [35, 37], "templatemicrotvmplatformtarget": [35, 37], "microtvmtuneplatform": [35, 37], "experimental_tvmc_micro_tun": [35, 37], "invoke_tvmc_micro_tun": [35, 37], "invoke_tvmc_tun": [35, 37, 39], "zephyrmicrotvmplatformtarget": [35, 37], "zephyr_install_dir": [35, 37, 40], "zephyr_sdk_dir": [35, 37, 40], "mlifplatform": [35, 38], "debug_symbol": [35, 38], "fail_on_error": [35, 38], "fuse_ld": [35, 38], "garbage_collect": [35, 38], "gen_data_artifact": [35, 38], "get_cmake_arg": [35, 38], "get_definit": [35, 38], "ignore_data": [35, 38], "input_data_path": [35, 38], "llvm_dir": [35, 38], "lto": [35, 38], "mem_onli": [35, 38], "mlif_dir": [35, 38], "model_support_dir": [35, 38], "output_data_path": [35, 38], "prebuild_lib_dir": [35, 38], "slim_cpp": [35, 38], "strip_str": [35, 38], "validate_output": [35, 38], "verbose_makefil": [35, 38], "mlifexitcod": [35, 38], "invalid_s": [35, 38], "output_missmatch": [35, 38], "create_mlif_platform_target": [35, 38], "get_mlif_platform_target": [35, 38], "tvmplatform": [35, 39], "create_tvm_platform_backend": [35, 39], "get_tvm_platform_backend": [35, 39], "register_tvm_platform_backend": [35, 39], "tvmbaseplatform": [35, 37, 39], "tvmbuildplatform": [35, 39], "tvmrpcplatform": [35, 39], "rpc_hostnam": [35, 37, 39], "rpc_kei": [35, 37, 39], "rpc_port": [35, 37, 39], "create_tvm_platform_target": [35, 39], "name2devic": [35, 39], "tvmtargetplatform": [35, 37, 39], "aggreg": [35, 37, 39], "fill_mod": [35, 37, 39], "total_tim": [35, 37, 39], "tvmtuneplatform": [35, 37, 39], "enable_wandb": [35, 37, 39], "experimental_tvmc_tune_task": [35, 37, 39], "experimental_tvmc_tune_visu": [35, 37, 39], "get_autoscheduler_tune_arg": [35, 39], "get_autotvm_tune_arg": [35, 39], "get_metascheduler_tune_arg": [35, 39], "get_tune_arg": [35, 39], "min_repeat_m": [35, 37, 39], "tune_task": [35, 39], "zephyrplatform": [35, 40], "get_seri": [35, 40], "get_west_cmake_arg": [35, 40], "invoke_west": [35, 40], "zephyr_venv_dir": [35, 40], "create_zephyr_platform_target": [35, 40], "platform_backend": 35, "platform_nam": [35, 41], "platform_target": 35, "src": [35, 36, 37, 38, 40, 43], "120": [35, 36, 37, 39, 40], "60": [35, 36, 37, 39, 40], "model_path": 35, "p": 35, "overrid": [35, 36, 37, 39, 45], "115200": [36, 40], "project_dir": [36, 37, 39, 40], "install_dir": [36, 37, 38, 40, 45, 46, 47], "256": [36, 45, 46], "512": 36, "optimized_layout": [36, 37, 45, 46, 47], "optimized_schedul": [36, 37, 45, 46, 47], "target_nam": [36, 37, 41, 45], "autoscheduler_en": [37, 39], "autoscheduler_include_simple_task": [37, 39], "autoscheduler_log_estimated_lat": [37, 39], "autotuning_append": [37, 39], "autotuning_early_stop": [37, 39], "autotuning_max_parallel": [37, 39], "autotuning_mod": [37, 39], "autotuning_num_work": [37, 39], "autotuning_results_fil": [37, 39], "autotuning_task": [37, 39], "autotuning_timeout": [37, 39], "autotuning_tri": [37, 39], "autotuning_trials_singl": [37, 39], "autotuning_use_rpc": [37, 39], "autotuning_visu": [37, 39], "autotuning_visualize_fil": [37, 39], "autotuning_visualize_l": [37, 39], "autotvm_en": [37, 39], "autotvm_tun": [37, 39], "ga": [37, 39], "metascheduler_en": [37, 39], "autoschedul": [37, 39], "autotvm": [37, 39], "metaschedul": [37, 39], "tvm_profil": [37, 39], "tvm_rpc": [37, 39], "arduino_board": 37, "project_typ": 37, "warning_as_error": 37, "live": [37, 39, 43, 44, 45], "list_opt": 37, "forc": [37, 43], "mlf_path": 37, "doubl": [37, 45, 47], "ovpsim_extra_arg": 37, "workspace_size_byt": 37, "xcorev": [37, 47], "microtvm_ovpsim": 37, "host_driven": 37, "microtvm_espidf": 37, "etissvp": [37, 45, 47], "microtvm_etiss": 37, "rvptarget": [37, 45, 47, 48], "rvvtarget": [37, 45, 47, 48], "atom": [37, 45, 47], "compress": [37, 45, 47], "cpu": [37, 45, 47], "embed": [37, 45, 47], "multipli": [37, 45, 47], "92": [37, 45, 47], "microtvm_spik": 37, "pk": [37, 45, 47], "compile_definit": 37, "config_main_stack_s": 37, "16384": 37, "extra_files_tar": 37, "nrfjprog_snr": 37, "openocd_seri": 37, "zephyr_board": 37, "sdk_dir": [37, 40], "librari": 38, "generic_mlonmcu": 38, "prebuild_lib_path": 38, "ml_interfac": 38, "arm_dsp": [38, 45, 46], "arm_mvei": [38, 45, 46], "xpulp": [38, 47], "data_fil": 38, "_model": 38, "intenum": [38, 41], "17": 38, "18": 38, "rpc": 39, "trials_glob": 39, "venv_dir": 40, "project2": 40, "runpostprocess": [41, 42], "post_run": [41, 42], "sessionpostprocess": [41, 42], "post_sess": [41, 42], "analysecorevcountspostprocess": [41, 42], "to_df": [41, 42], "analysedumppostprocess": [41, 42], "analyseinstructionspostprocess": [41, 42], "sequenc": [41, 42], "artifact2columnpostprocess": [41, 42], "file2colnam": [41, 42], "bytes2kbpostprocess": [41, 42], "comparerowspostprocess": [41, 42], "group_bi": [41, 42], "invert": [41, 42], "percent": [41, 42], "substract": [41, 42], "to_compar": [41, 42], "config2columnspostprocess": [41, 42], "limit": [41, 42], "features2columnspostprocess": [41, 42], "filtercolumnspostprocess": [41, 42], "drop_const": [41, 42], "drop_empti": [41, 42], "drop_nan": [41, 42], "passconfig2columnspostprocess": [41, 42], "renamecolumnspostprocess": [41, 42], "visualizepostprocess": [41, 42], "match_row": [41, 42], "idx": 41, "comment": 41, "target_optim": 41, "frontend_nam": 41, "postprocess_nam": 41, "choosen": 41, "restor": 41, "omit_path": 41, "omit_default": 41, "omit_glob": 41, "only_us": 41, "sub": 41, "teh": 41, "component_cl": 41, "temporari": 41, "aquir": 41, "mutex": 41, "postprocess_featur": [41, 42], "reconstruct": 41, "later": [41, 51], "describ": [41, 43], "dir": [41, 44, 45, 46], "csv": [41, 45, 47], "err": 41, "factori": 41, "failng": 41, "per_stag": 41, "print_report": 41, "latest_run_idx": 41, "statu": 41, "end": [42, 43, 45, 51], "multi": 42, "instruct": 42, "scale": 42, "kilobyt": 42, "explod": 42, "prior": 42, "config2column": 42, "simpl": [42, 47], "plot": 42, "png": 42, "col": 42, "clone_ara": [43, 44], "install_arm_gcc": [43, 44], "clone_benchmark": [43, 44], "clone_cmsi": [43, 44], "clone_cmsisnn": [43, 44], "clone_ethosu_platform": [43, 44], "get_task_factori": [43, 44], "clone_corevverif": [43, 44], "install_corstone300": [43, 44], "build_cv32e40p": [43, 44], "clone_cv32e40p": [43, 44], "build_dtc": [43, 44], "clone_dtc": [43, 44], "clone_espidf": [43, 44], "install_espidf": [43, 44], "build_etiss": [43, 44], "clean_etiss": [43, 44], "clone_etiss": [43, 44], "clone_etiss_accelerator_plugin": [43, 44], "clone_microtvm_etiss": [43, 44], "install_etiss": [43, 44], "clone_layergen": [43, 44], "install_llvm": [43, 44], "clone_mlif": [43, 44], "build_muriscvnn": [43, 44], "clone_muriscvnn": [43, 44], "install_corev_ovpsim": [43, 44], "clone_pulp_freerto": [43, 44], "install_gvsoc": [43, 44], "install_pulp_gcc": [43, 44], "check_multilib": [43, 44], "install_riscv_gcc": [43, 44], "build_spik": [43, 44], "build_spike_pk": [43, 44], "clean_spik": [43, 44], "clone_microtvm_spik": [43, 44], "clone_spik": [43, 44], "clone_spike_pk": [43, 44], "build_srecord": [43, 44], "clone_srecord": [43, 44], "build_tensorflow": [43, 44], "clone_tensorflow": [43, 44], "clone_tflite_pack": [43, 44], "install_tflite_pack": [43, 44], "download_tflite_vizu": [43, 44], "build_tflite_micro_compil": [43, 44], "clone_tflite_micro_compil": [43, 44], "build_tvm": [43, 44], "clone_tvm": [43, 44], "clone_tvm_extens": [43, 44], "install_tvm": [43, 44], "requires_patch": [43, 44], "build_utvm_staticrt_codegen": [43, 44], "clone_utvm_staticrt_codegen": [43, 44], "build_veril": [43, 44], "clone_veril": [43, 44], "install_veril": [43, 44], "clone_vicuna": [43, 44], "install_zephyr": [43, 44], "tak": 43, "mod": 43, "take": 43, "whih": 43, "reset": 43, "piec": 43, "roughli": 43, "broken": 43, "along": 43, "buildabl": 43, "few": 43, "extern": 43, "extra": 43, "aren": 43, "abov": 43, "same": 43, "quot": 43, "consolid": 43, "exclud": 43, "below": 43, "lint": 43, "problem": 43, "occur": 43, "human": 43, "readabl": 43, "concern": 43, "prepend": [43, 45], "distinct": 43, "bullet": 43, "namespac": 43, "join": 43, "requirments_by_piec": 43, "against": 43, "constraint": 43, "ordereddict": 43, "requirements_by_piec": 43, "mention": 43, "setuptool": 43, "semant": 43, "z": 43, "semver": 43, "must": 43, "encount": 43, "element": 43, "second": 43, "numer": 43, "trivial": 43, "metadta": 43, "caret": 43, "poetri": 43, "org": [43, 51], "joined_dep": 43, "style": [43, 51], "tasks_factori": 43, "write_cach": 43, "write_env": 43, "rebuild": [43, 44], "annot": 43, "categori": 43, "cleanuo": 43, "pend": 43, "between": 43, "node": 43, "edg": 43, "topolog": 43, "comb": 43, "repo_dir": 43, "patch_fil": 43, "pathlik": 43, "destin": 43, "refesh": 43, "switch": 43, "use_ninja": 43, "kward": 43, "popen": 43, "handle_exit": [43, 45, 46, 47], "thread": [43, 44], "snake_cas": 43, "dirnam": 43, "base_foo_flag": 43, "o": [43, 45], "makedir": 43, "handel": 43, "exit": 43, "dynam": 44, "gnu": 44, "ethosu": [44, 45, 46, 47], "verif": 44, "rtl": [44, 47], "devic": [44, 51], "tree": [44, 51], "sw": 44, "freerto": 44, "riscvinstalldir": 44, "gccname": 44, "unitilti": 44, "screcord": 44, "lib": 44, "preinterpret": 44, "resolve_cpu_featur": [45, 46], "aratarget": [45, 47], "ara_apps_dir": [45, 47], "ara_hardware_dir": [45, 47], "ara_verilator_tb": [45, 47], "limit_cycl": [45, 47], "nr_lane": [45, 47], "prepare_simul": [45, 47], "verilator_install_dir": [45, 47], "arartltarget": [45, 47], "questasim_install_dir": [45, 47], "spike_install_dir": [45, 47], "corevovpsimtarget": [45, 47], "processor": [45, 47], "replace_unsupport": [45, 47], "cv32e40ptarget": [45, 47], "verilator_execut": [45, 47], "etisstarget": [45, 47], "allow_error": [45, 47], "cycle_time_p": [45, 47], "debug_etiss": [45, 47], "etiss_dir": [45, 47], "etiss_src_dir": [45, 47], "extra_bool_config": [45, 47], "extra_int_config": [45, 47], "extra_plugin_config": [45, 47], "extra_string_config": [45, 47], "get_ini_int_config": [45, 47], "get_ini_plugin_config": [45, 47], "get_ini_string_config": [45, 47], "jit": [45, 47], "max_block_s": [45, 47], "ram_siz": [45, 47], "ram_start": [45, 47], "rom_siz": [45, 47], "rom_start": [45, 47], "trace_memori": [45, 47], "write_ini": [45, 47], "gvsocpulptarget": [45, 47], "get_basic_gvsoc_simulating_arg": [45, 47], "gvsoc_fold": [45, 47], "gvsoc_preparation_env": [45, 47], "gvsoc_script": [45, 47], "pulp_freertos_config_dir": [45, 47], "pulp_freertos_install_dir": [45, 47], "pulp_freertos_support_dir": [45, 47], "xpulp_vers": [45, 47], "riscvtarget": [45, 47, 48], "pupl_gcc_toolchain_requir": [45, 47], "gcc_extens": [45, 47], "gcc_variant": [45, 47], "llvm_extens": [45, 47], "pulp_gcc_basenam": [45, 47], "pulp_gcc_prefix": [45, 47], "riscv_gcc_basenam": [45, 47], "riscv_gcc_prefix": [45, 47], "rvbtarget": [45, 47], "bext_spec": [45, 47], "bext_zba": [45, 47], "bext_zbb": [45, 47], "bext_zbc": [45, 47], "bext_zb": [45, 47], "enable_bext": [45, 47], "filter_unsupported_extens": [45, 47], "join_extens": [45, 47], "sort_extensions_canon": [45, 47], "split_extens": [45, 47], "update_extens": [45, 47], "update_extensions_pulp": [45, 47], "vicunatarget": [45, 47], "dc_line_width": [45, 47], "dc_size": [45, 47], "get_config_arg": [45, 47], "ic_line_width": [45, 47], "ic_siz": [45, 47], "mem_lat": [45, 47], "mem_siz": [45, 47], "mem_width": [45, 47], "vicuna_src_dir": [45, 47], "vmem_width": [45, 47], "vport_polici": [45, 47], "vproc_config": [45, 47], "vproc_pipelin": [45, 47], "allow_miss": 45, "argumentpars": 45, "ignore_output": 45, "print_func": 45, "callabl": 45, "built": 45, "err_func": 45, "bound": 45, "subprocess": 45, "stderr": 45, "sysout": 45, "arbitrari": 45, "keyword": 45, "elffil": 45, "gather": 45, "rom": 45, "ram": 45, "heavil": 45, "inspir": 45, "infil": 45, "segment": 45, "sz": 45, "unknown_msg": 45, "displai": 45, "fanci": 45, "interest": 45, "easi": 45, "2222": [45, 47], "include_opt": 45, "identify_opt": 45, "inspect_program": 45, "readelf": 45, "inspect_program_arg": 45, "_environ": 45, "optin": 45, "fix": [45, 46, 47], "ethosu_platform": [45, 46], "bitmanip_spec": [45, 47], "94": [45, 47], "96": [45, 47], "log_instr": [45, 47], "machin": [45, 47], "qemu": [45, 47], "riscv32_qemu": [45, 47], "sim": [45, 47], "bext": [45, 47], "cachesim": [45, 47], "exit_cod": [45, 47], "enable_fp": 46, "enable_fp_dp": 46, "enable_mv": 46, "gvsoc": 47, "10000000": 47, "4096": 47, "verilator_tb": 47, "_": [47, 51], "questasim": 47, "ovpsimcorev": 47, "31250": 47, "67108864": 47, "8388608": 47, "vanilla_acceler": 47, "pulpissimo": 47, "ilp32": 47, "pulp_freerto": 47, "config_dir": 47, "support_dir": 47, "pulp_gcc": 47, "lower": 47, "canon": 47, "inp": 47, "cv32e40x": 47, "524288": 47, "compact": 47, "ibex": 47, "core_dir": 47, "sim_dir": 47, "prog_path": 47, "prog": 47, "trace_fil": 47, "sim_trac": 47, "trace_sig": 47, "myriscv_default": 48, "myriscv_pack": 48, "rvp": 48, "myriscv_vector": 48, "rvv": 48, "deploy": 51, "infer": 51, "tini": 51, "control": 51, "readthedoc": 51, "io": 51, "highli": 51, "eniron": 51, "quickli": 51, "coverag": 51, "apt": 51, "sudo": 51, "python3": 51, "venv": 51, "libboost": 51, "graphviz": 51, "doxygen": 51, "libtinfo": 51, "zlib1g": 51, "texinfo": 51, "unzip": 51, "ninja": 51, "flex": 51, "lsb": 51, "libelf": 51, "v3": 51, "shell": 51, "v2": 51, "clang": 51, "workaround": 51, "fresh": 51, "recom": 51, "section": 51, "feel": 51, "choos": 51, "conda": 51, "whenev": 51, "recommend": 51, "ptional": 51, "dependeci": 51, "r": 51, "requirements_dev": 51, "notebook": 51, "md": 51, "abl": 51, "older": 51, "uninstal": 51, "ship": 51, "preinstal": 51, "sytem": 51, "medium": 51, "easiest": 51, "compos": 51, "mount": 51, "share": 51, "trigger": 51, "spend": 51, "too": 51, "much": 51, "heavi": 51, "again": 51, "demo": 51, "jupyt": 51, "methodologi": 51, "paragraph": 51, "seen": 51, "tl": 51, "dl": 51, "achiv": 51, "initiali": 51, "requirements_addit": 51, "additon": 51, "requirements_al": 51, "distribut": 51, "latest": 51, "html": 51, "workflow": 51, "doctr": 51, "markdown": 51, "publish": 51, "our": 51, "regard": 51, "black": 51, "length": 51, "technic": 51, "univers": 51, "munich": 51, "rafael": 51, "stahl": 51, "rafzi": 51, "wrote": 51, "philippvk": 51, "cookiecutter_": 51, "audreyr": 51, "cookiecutt": 51, "pypackag": 51, "restructuredtext": 51}, "objects": {"": [[23, 0, 0, "-", "mlonmcu"]], "mlonmcu": [[23, 0, 0, "-", "artifact"], [24, 0, 0, "-", "cli"], [23, 0, 0, "-", "config"], [26, 0, 0, "-", "context"], [27, 0, 0, "-", "environment"], [28, 0, 0, "-", "feature"], [29, 0, 0, "-", "flow"], [23, 0, 0, "-", "logging"], [23, 0, 0, "-", "mlonmcu"], [34, 0, 0, "-", "models"], [35, 0, 0, "-", "platform"], [23, 0, 0, "-", "plugins"], [23, 0, 0, "-", "report"], [41, 0, 0, "-", "session"], [43, 0, 0, "-", "setup"], [45, 0, 0, "-", "target"], [48, 0, 0, "-", "testing"], [23, 0, 0, "-", "timeout"], [23, 0, 0, "-", "utils"], [23, 0, 0, "-", "version"]], "mlonmcu.artifact": [[23, 1, 1, "", "Artifact"], [23, 1, 1, "", "ArtifactFormat"], [23, 5, 1, "", "lookup_artifacts"]], "mlonmcu.artifact.Artifact": [[23, 2, 1, "", "export"], [23, 3, 1, "", "exported"], [23, 2, 1, "", "print_summary"], [23, 2, 1, "", "validate"]], "mlonmcu.artifact.ArtifactFormat": [[23, 4, 1, "", "ARCHIVE"], [23, 4, 1, "", "BIN"], [23, 4, 1, "", "DATA"], [23, 4, 1, "", "IMAGE"], [23, 4, 1, "", "JSON"], [23, 4, 1, "", "MLF"], [23, 4, 1, "", "MODEL"], [23, 4, 1, "", "NUMPY"], [23, 4, 1, "", "PARAMS"], [23, 4, 1, "", "PATH"], [23, 4, 1, "", "RAW"], [23, 4, 1, "", "SHARED_OBJECT"], [23, 4, 1, "", "SOURCE"], [23, 4, 1, "", "TEXT"], [23, 4, 1, "", "UNKNOWN"]], "mlonmcu.cli": [[24, 0, 0, "-", "build"], [24, 0, 0, "-", "cleanup"], [24, 0, 0, "-", "common"], [24, 0, 0, "-", "compile"], [24, 0, 0, "-", "env"], [24, 0, 0, "-", "export"], [24, 0, 0, "-", "flow"], [25, 0, 0, "-", "helper"], [24, 0, 0, "-", "init"], [24, 0, 0, "-", "load"], [24, 0, 0, "-", "main"], [24, 0, 0, "-", "models"], [24, 0, 0, "-", "run"], [24, 0, 0, "-", "setup"], [24, 0, 0, "-", "tune"]], "mlonmcu.cli.build": [[24, 5, 1, "", "add_build_options"], [24, 5, 1, "", "get_parser"], [24, 5, 1, "", "handle"]], "mlonmcu.cli.cleanup": [[24, 5, 1, "", "get_parser"], [24, 5, 1, "", "handle"]], "mlonmcu.cli.common": [[24, 5, 1, "", "add_common_options"], [24, 5, 1, "", "add_context_options"], [24, 5, 1, "", "add_flow_options"], [24, 5, 1, "", "add_model_options"], [24, 5, 1, "", "handle_logging_flags"], [24, 5, 1, "", "kickoff_runs"]], "mlonmcu.cli.compile": [[24, 5, 1, "", "add_compile_options"], [24, 5, 1, "", "check_args"], [24, 5, 1, "", "get_parser"], [24, 5, 1, "", "handle"]], "mlonmcu.cli.env": [[24, 1, 1, "", "EnvironmentHint"], [24, 5, 1, "", "get_parser"], [24, 5, 1, "", "handle"], [24, 5, 1, "", "lookup_user_environments"]], "mlonmcu.cli.export": [[24, 5, 1, "", "add_export_options"], [24, 5, 1, "", "get_parser"], [24, 5, 1, "", "handle"]], "mlonmcu.cli.flow": [[24, 5, 1, "", "get_parser"], [24, 5, 1, "", "handle"], [24, 5, 1, "", "handle_list_targets"]], "mlonmcu.cli.helper": [[25, 0, 0, "-", "filter"], [25, 0, 0, "-", "parse"]], "mlonmcu.cli.helper.filter": [[25, 5, 1, "", "filter_arg"]], "mlonmcu.cli.helper.parse": [[25, 5, 1, "", "extract_backend_names"], [25, 5, 1, "", "extract_config"], [25, 5, 1, "", "extract_config_and_feature_names"], [25, 5, 1, "", "extract_feature_names"], [25, 5, 1, "", "extract_frontend_names"], [25, 5, 1, "", "extract_platform_names"], [25, 5, 1, "", "extract_postprocess_names"], [25, 5, 1, "", "extract_target_names"], [25, 5, 1, "", "parse_var"], [25, 5, 1, "", "parse_vars"]], "mlonmcu.cli.init": [[24, 5, 1, "", "add_init_options"], [24, 5, 1, "", "get_parser"], [24, 5, 1, "", "handle"]], "mlonmcu.cli.load": [[24, 5, 1, "", "add_load_options"], [24, 5, 1, "", "get_parser"], [24, 5, 1, "", "handle"]], "mlonmcu.cli.main": [[24, 5, 1, "", "handle_docker"], [24, 5, 1, "", "main"]], "mlonmcu.cli.models": [[24, 5, 1, "", "add_models_options"], [24, 5, 1, "", "get_parser"], [24, 5, 1, "", "handle"]], "mlonmcu.cli.run": [[24, 5, 1, "", "add_run_options"], [24, 5, 1, "", "check_args"], [24, 5, 1, "", "get_parser"], [24, 5, 1, "", "handle"]], "mlonmcu.cli.setup": [[24, 5, 1, "", "add_setup_options"], [24, 5, 1, "", "get_parser"], [24, 5, 1, "", "handle"]], "mlonmcu.cli.tune": [[24, 5, 1, "", "get_parser"], [24, 5, 1, "", "handle"]], "mlonmcu.config": [[23, 5, 1, "", "filter_config"], [23, 5, 1, "", "remove_config_prefix"], [23, 5, 1, "", "resolve_required_config"], [23, 5, 1, "", "str2bool"], [23, 5, 1, "", "str2dict"], [23, 5, 1, "", "str2list"]], "mlonmcu.context": [[26, 1, 1, "", "MlonMcuContext"], [26, 0, 0, "-", "context"], [26, 0, 0, "-", "read_write_filelock"]], "mlonmcu.context.MlonMcuContext": [[26, 2, 1, "", "cleanup"], [26, 2, 1, "", "cleanup_sessions"], [26, 2, 1, "", "create_session"], [26, 2, 1, "", "export"], [26, 2, 1, "", "get_session"], [26, 2, 1, "", "get_sessions_runs_idx"], [26, 3, 1, "", "is_clean"], [26, 2, 1, "", "load_cache"], [26, 2, 1, "", "load_extensions"], [26, 2, 1, "", "lookup"], [26, 2, 1, "", "print_summary"]], "mlonmcu.context.context": [[26, 1, 1, "", "MlonMcuContext"], [26, 5, 1, "", "get_environment_by_name"], [26, 5, 1, "", "get_environment_by_path"], [26, 5, 1, "", "get_ids"], [26, 5, 1, "", "load_recent_sessions"], [26, 5, 1, "", "lookup_environment"], [26, 5, 1, "", "resolve_environment_file"], [26, 5, 1, "", "setup_logging"]], "mlonmcu.context.context.MlonMcuContext": [[26, 2, 1, "", "cleanup"], [26, 2, 1, "", "cleanup_sessions"], [26, 2, 1, "", "create_session"], [26, 2, 1, "", "export"], [26, 2, 1, "", "get_session"], [26, 2, 1, "", "get_sessions_runs_idx"], [26, 3, 1, "", "is_clean"], [26, 2, 1, "", "load_cache"], [26, 2, 1, "", "load_extensions"], [26, 2, 1, "", "lookup"], [26, 2, 1, "", "print_summary"]], "mlonmcu.context.read_write_filelock": [[26, 6, 1, "", "RWLockTimeout"], [26, 1, 1, "", "ReadFileLock"], [26, 1, 1, "", "WriteFileLock"]], "mlonmcu.context.read_write_filelock.RWLockTimeout": [[26, 4, 1, "", "lock"]], "mlonmcu.context.read_write_filelock.ReadFileLock": [[26, 2, 1, "", "acquire"], [26, 3, 1, "", "is_locked"], [26, 2, 1, "", "release"]], "mlonmcu.context.read_write_filelock.WriteFileLock": [[26, 2, 1, "", "acquire"], [26, 3, 1, "", "is_locked"], [26, 2, 1, "", "release"]], "mlonmcu.environment": [[27, 0, 0, "-", "config"], [27, 0, 0, "-", "environment"], [27, 0, 0, "-", "init"], [27, 0, 0, "-", "list"], [27, 0, 0, "-", "loader"], [27, 0, 0, "-", "templates"], [27, 0, 0, "-", "writer"]], "mlonmcu.environment.config": [[27, 1, 1, "", "BackendConfig"], [27, 1, 1, "", "BackendFeatureConfig"], [27, 1, 1, "", "BaseConfig"], [27, 1, 1, "", "DefaultsConfig"], [27, 1, 1, "", "FeatureConfig"], [27, 1, 1, "", "FeatureKind"], [27, 1, 1, "", "FrameworkConfig"], [27, 1, 1, "", "FrameworkFeatureConfig"], [27, 1, 1, "", "FrontendConfig"], [27, 1, 1, "", "FrontendFeatureConfig"], [27, 1, 1, "", "PathConfig"], [27, 1, 1, "", "PlatformConfig"], [27, 1, 1, "", "PlatformFeatureConfig"], [27, 1, 1, "", "RepoConfig"], [27, 1, 1, "", "TargetConfig"], [27, 1, 1, "", "TargetFeatureConfig"], [27, 5, 1, "", "get_config_dir"], [27, 5, 1, "", "get_environments_dir"], [27, 5, 1, "", "get_environments_file"], [27, 5, 1, "", "get_plugins_dir"], [27, 5, 1, "", "init_config_dir"]], "mlonmcu.environment.config.FeatureKind": [[27, 4, 1, "", "BACKEND"], [27, 4, 1, "", "FRAMEWORK"], [27, 4, 1, "", "FRONTEND"], [27, 4, 1, "", "TARGET"], [27, 4, 1, "", "UNKNOWN"]], "mlonmcu.environment.config.RepoConfig": [[27, 3, 1, "", "recursive"], [27, 3, 1, "", "single_branch"], [27, 3, 1, "", "submodules"]], "mlonmcu.environment.environment": [[27, 1, 1, "", "DefaultEnvironment"], [27, 1, 1, "", "Environment"], [27, 1, 1, "", "UserEnvironment"]], "mlonmcu.environment.environment.Environment": [[27, 2, 1, "", "from_file"], [27, 2, 1, "", "get_default_backends"], [27, 2, 1, "", "get_default_frameworks"], [27, 2, 1, "", "get_default_targets"], [27, 2, 1, "", "has_backend"], [27, 2, 1, "", "has_feature"], [27, 2, 1, "", "has_framework"], [27, 2, 1, "", "has_frontend"], [27, 2, 1, "", "has_platform"], [27, 2, 1, "", "has_target"], [27, 2, 1, "", "has_toolchain"], [27, 3, 1, "", "home"], [27, 2, 1, "", "lookup_backend_configs"], [27, 2, 1, "", "lookup_backend_feature_configs"], [27, 2, 1, "", "lookup_feature_configs"], [27, 2, 1, "", "lookup_framework_configs"], [27, 2, 1, "", "lookup_framework_feature_configs"], [27, 2, 1, "", "lookup_frontend_configs"], [27, 2, 1, "", "lookup_frontend_feature_configs"], [27, 2, 1, "", "lookup_path"], [27, 2, 1, "", "lookup_platform_configs"], [27, 2, 1, "", "lookup_platform_feature_configs"], [27, 2, 1, "", "lookup_target_configs"], [27, 2, 1, "", "lookup_target_feature_configs"], [27, 2, 1, "", "lookup_var"], [27, 2, 1, "", "supports_feature"], [27, 2, 1, "", "to_file"]], "mlonmcu.environment.init": [[27, 5, 1, "", "clone_models_repo"], [27, 5, 1, "", "create_environment_directories"], [27, 5, 1, "", "create_venv_directory"], [27, 5, 1, "", "initialize_environment"]], "mlonmcu.environment.list": [[27, 5, 1, "", "get_alternative_name"], [27, 5, 1, "", "get_environment_names"], [27, 5, 1, "", "get_environments_map"], [27, 5, 1, "", "register_environment"], [27, 5, 1, "", "validate_name"]], "mlonmcu.environment.loader": [[27, 5, 1, "", "load_environment_from_file"]], "mlonmcu.environment.templates": [[27, 5, 1, "", "fill_environment_yaml"], [27, 5, 1, "", "fill_template"], [27, 5, 1, "", "get_template_names"], [27, 5, 1, "", "get_template_text"], [27, 5, 1, "", "write_environment_yaml_from_template"]], "mlonmcu.environment.writer": [[27, 5, 1, "", "create_environment_dict"], [27, 5, 1, "", "write_environment_to_file"]], "mlonmcu.feature": [[28, 0, 0, "-", "feature"], [28, 0, 0, "-", "features"], [28, 0, 0, "-", "type"]], "mlonmcu.feature.feature": [[28, 1, 1, "", "BackendFeature"], [28, 1, 1, "", "Feature"], [28, 1, 1, "", "FeatureBase"], [28, 1, 1, "", "FrameworkFeature"], [28, 1, 1, "", "FrontendFeature"], [28, 1, 1, "", "PlatformFeature"], [28, 1, 1, "", "RunFeature"], [28, 1, 1, "", "SetupFeature"], [28, 1, 1, "", "TargetFeature"]], "mlonmcu.feature.feature.BackendFeature": [[28, 2, 1, "", "add_backend_config"], [28, 4, 1, "", "feature_type"], [28, 2, 1, "", "get_backend_config"]], "mlonmcu.feature.feature.Feature": [[28, 4, 1, "", "feature_type"]], "mlonmcu.feature.feature.FeatureBase": [[28, 4, 1, "", "DEFAULTS"], [28, 4, 1, "", "OPTIONAL"], [28, 4, 1, "", "REQUIRED"], [28, 3, 1, "", "enabled"], [28, 4, 1, "", "feature_type"], [28, 2, 1, "", "remove_config_prefix"], [28, 4, 1, "", "scope"], [28, 2, 1, "", "types"]], "mlonmcu.feature.feature.FrameworkFeature": [[28, 2, 1, "", "add_framework_config"], [28, 4, 1, "", "feature_type"], [28, 2, 1, "", "get_framework_config"]], "mlonmcu.feature.feature.FrontendFeature": [[28, 2, 1, "", "add_frontend_config"], [28, 4, 1, "", "feature_type"], [28, 2, 1, "", "get_frontend_config"], [28, 2, 1, "", "update_formats"]], "mlonmcu.feature.feature.PlatformFeature": [[28, 2, 1, "", "add_platform_config"], [28, 2, 1, "", "add_platform_defs"], [28, 4, 1, "", "feature_type"], [28, 2, 1, "", "get_platform_config"], [28, 2, 1, "", "get_platform_defs"]], "mlonmcu.feature.feature.RunFeature": [[28, 2, 1, "", "add_run_config"], [28, 4, 1, "", "feature_type"], [28, 2, 1, "", "get_run_config"]], "mlonmcu.feature.feature.SetupFeature": [[28, 2, 1, "", "add_required_cache_flags"], [28, 2, 1, "", "add_setup_config"], [28, 4, 1, "", "feature_type"], [28, 2, 1, "", "get_required_cache_flags"], [28, 2, 1, "", "get_setup_config"]], "mlonmcu.feature.feature.TargetFeature": [[28, 2, 1, "", "add_target_callbacks"], [28, 2, 1, "", "add_target_config"], [28, 4, 1, "", "feature_type"], [28, 2, 1, "", "get_target_callbacks"], [28, 2, 1, "", "get_target_config"]], "mlonmcu.feature.features": [[28, 1, 1, "", "HpmCounter"], [28, 1, 1, "", "TVMTuneBase"], [28, 5, 1, "", "get_available_feature_names"], [28, 5, 1, "", "get_available_features"], [28, 5, 1, "", "get_matching_features"], [28, 5, 1, "", "register_feature"]], "mlonmcu.feature.features.HpmCounter": [[28, 4, 1, "", "DEFAULTS"], [28, 3, 1, "", "counter_names"], [28, 3, 1, "", "enabled_counters"], [28, 2, 1, "", "get_platform_defs"], [28, 2, 1, "", "get_target_callbacks"], [28, 3, 1, "", "num_counters"], [28, 3, 1, "", "supported_counters"]], "mlonmcu.feature.features.TVMTuneBase": [[28, 4, 1, "", "DEFAULTS"], [28, 3, 1, "", "append"], [28, 3, 1, "", "early_stopping"], [28, 2, 1, "", "get_platform_config"], [28, 3, 1, "", "max_parallel"], [28, 3, 1, "", "num_workers"], [28, 3, 1, "", "results_file"], [28, 3, 1, "", "tasks"], [28, 3, 1, "", "timeout"], [28, 3, 1, "", "trials"], [28, 3, 1, "", "trials_single"], [28, 3, 1, "", "use_rpc"], [28, 3, 1, "", "visualize"], [28, 3, 1, "", "visualize_file"], [28, 3, 1, "", "visualize_live"]], "mlonmcu.feature.type": [[28, 1, 1, "", "FeatureType"]], "mlonmcu.feature.type.FeatureType": [[28, 4, 1, "", "BACKEND"], [28, 4, 1, "", "FRAMEWORK"], [28, 4, 1, "", "FRONTEND"], [28, 4, 1, "", "OTHER"], [28, 4, 1, "", "PLATFORM"], [28, 4, 1, "", "RUN"], [28, 4, 1, "", "SETUP"], [28, 4, 1, "", "TARGET"]], "mlonmcu.flow": [[29, 0, 0, "-", "backend"], [29, 0, 0, "-", "framework"], [29, 5, 1, "", "get_available_backend_names"], [30, 0, 0, "-", "tflm"], [32, 0, 0, "-", "tvm"]], "mlonmcu.flow.backend": [[29, 1, 1, "", "Backend"], [29, 5, 1, "", "get_parser"], [29, 5, 1, "", "init_backend_features"], [29, 5, 1, "", "main"]], "mlonmcu.flow.backend.Backend": [[29, 4, 1, "", "DEFAULTS"], [29, 4, 1, "", "FEATURES"], [29, 4, 1, "", "OPTIONAL"], [29, 4, 1, "", "REQUIRED"], [29, 2, 1, "", "add_platform_config"], [29, 2, 1, "", "add_platform_defs"], [29, 2, 1, "", "export_artifacts"], [29, 2, 1, "", "generate"], [29, 2, 1, "", "generate_artifacts"], [29, 2, 1, "", "get_platform_config"], [29, 2, 1, "", "get_platform_defs"], [29, 3, 1, "", "has_tuner"], [29, 2, 1, "", "load_model"], [29, 4, 1, "", "name"], [29, 3, 1, "", "needs_target"], [29, 2, 1, "", "process_features"], [29, 2, 1, "", "set_tuning_records"], [29, 2, 1, "", "supports_model"]], "mlonmcu.flow.framework": [[29, 1, 1, "", "Framework"]], "mlonmcu.flow.framework.Framework": [[29, 4, 1, "", "DEFAULTS"], [29, 4, 1, "", "FEATURES"], [29, 4, 1, "", "OPTIONAL"], [29, 4, 1, "", "REQUIRED"], [29, 2, 1, "", "add_platform_config"], [29, 2, 1, "", "add_platform_defs"], [29, 2, 1, "", "get_platform_config"], [29, 2, 1, "", "get_platform_defs"], [29, 4, 1, "", "name"], [29, 2, 1, "", "process_features"], [29, 4, 1, "", "registry"], [29, 2, 1, "", "remove_config_prefix"]], "mlonmcu.flow.tflm": [[30, 1, 1, "", "TFLMBackend"], [30, 1, 1, "", "TFLMCBackend"], [30, 1, 1, "", "TFLMIBackend"], [31, 0, 0, "-", "backend"], [30, 0, 0, "-", "framework"]], "mlonmcu.flow.tflm.TFLMBackend": [[30, 4, 1, "", "DEFAULTS"], [30, 4, 1, "", "FEATURES"], [30, 4, 1, "", "REQUIRED"], [30, 2, 1, "", "load_model"], [30, 4, 1, "", "name"], [30, 4, 1, "", "registry"]], "mlonmcu.flow.tflm.TFLMCBackend": [[30, 4, 1, "", "DEFAULTS"], [30, 4, 1, "", "FEATURES"], [30, 4, 1, "", "REQUIRED"], [30, 2, 1, "", "generate"], [30, 2, 1, "", "generate_header"], [30, 4, 1, "", "name"], [30, 3, 1, "", "print_outputs"]], "mlonmcu.flow.tflm.TFLMIBackend": [[30, 4, 1, "", "DEFAULTS"], [30, 4, 1, "", "FEATURES"], [30, 3, 1, "", "arena_size"], [30, 3, 1, "", "custom_ops"], [30, 3, 1, "", "debug_arena"], [30, 2, 1, "", "generate"], [30, 3, 1, "", "legacy"], [30, 4, 1, "", "name"], [30, 3, 1, "", "ops"], [30, 3, 1, "", "ops_resolver"], [30, 3, 1, "", "registrations"], [30, 3, 1, "", "reporter"]], "mlonmcu.flow.tflm.backend": [[31, 1, 1, "", "TFLMBackend"], [31, 1, 1, "", "TFLMCBackend"], [31, 1, 1, "", "TFLMIBackend"], [31, 0, 0, "-", "backend"], [31, 0, 0, "-", "tflmc"], [31, 0, 0, "-", "tflmi"]], "mlonmcu.flow.tflm.backend.TFLMBackend": [[31, 4, 1, "", "DEFAULTS"], [31, 4, 1, "", "FEATURES"], [31, 4, 1, "", "REQUIRED"], [31, 2, 1, "", "load_model"], [31, 4, 1, "", "name"], [31, 4, 1, "", "registry"]], "mlonmcu.flow.tflm.backend.TFLMCBackend": [[31, 4, 1, "", "DEFAULTS"], [31, 4, 1, "", "FEATURES"], [31, 4, 1, "", "REQUIRED"], [31, 2, 1, "", "generate"], [31, 2, 1, "", "generate_header"], [31, 4, 1, "", "name"], [31, 3, 1, "", "print_outputs"]], "mlonmcu.flow.tflm.backend.TFLMIBackend": [[31, 4, 1, "", "DEFAULTS"], [31, 4, 1, "", "FEATURES"], [31, 3, 1, "", "arena_size"], [31, 3, 1, "", "custom_ops"], [31, 3, 1, "", "debug_arena"], [31, 2, 1, "", "generate"], [31, 3, 1, "", "legacy"], [31, 4, 1, "", "name"], [31, 3, 1, "", "ops"], [31, 3, 1, "", "ops_resolver"], [31, 3, 1, "", "registrations"], [31, 3, 1, "", "reporter"]], "mlonmcu.flow.tflm.backend.backend": [[31, 1, 1, "", "TFLMBackend"]], "mlonmcu.flow.tflm.backend.backend.TFLMBackend": [[31, 4, 1, "", "DEFAULTS"], [31, 4, 1, "", "FEATURES"], [31, 4, 1, "", "REQUIRED"], [31, 2, 1, "", "load_model"], [31, 4, 1, "", "name"], [31, 4, 1, "", "registry"]], "mlonmcu.flow.tflm.backend.tflmc": [[31, 1, 1, "", "TFLMCBackend"]], "mlonmcu.flow.tflm.backend.tflmc.TFLMCBackend": [[31, 4, 1, "", "DEFAULTS"], [31, 4, 1, "", "FEATURES"], [31, 4, 1, "", "REQUIRED"], [31, 2, 1, "", "generate"], [31, 2, 1, "", "generate_header"], [31, 4, 1, "", "name"], [31, 3, 1, "", "print_outputs"]], "mlonmcu.flow.tflm.backend.tflmi": [[31, 1, 1, "", "TFLMIBackend"], [31, 1, 1, "", "TFLMICodegen"], [31, 5, 1, "", "make_hex_array"]], "mlonmcu.flow.tflm.backend.tflmi.TFLMIBackend": [[31, 4, 1, "", "DEFAULTS"], [31, 4, 1, "", "FEATURES"], [31, 3, 1, "", "arena_size"], [31, 3, 1, "", "custom_ops"], [31, 3, 1, "", "debug_arena"], [31, 2, 1, "", "generate"], [31, 3, 1, "", "legacy"], [31, 4, 1, "", "name"], [31, 3, 1, "", "ops"], [31, 3, 1, "", "ops_resolver"], [31, 3, 1, "", "registrations"], [31, 3, 1, "", "reporter"]], "mlonmcu.flow.tflm.backend.tflmi.TFLMICodegen": [[31, 2, 1, "", "generate_header"], [31, 2, 1, "", "generate_wrapper"], [31, 2, 1, "", "makeCustomOpPrototypes"], [31, 2, 1, "", "make_op_registrations"]], "mlonmcu.flow.tflm.framework": [[30, 1, 1, "", "TFLMFramework"]], "mlonmcu.flow.tflm.framework.TFLMFramework": [[30, 4, 1, "", "DEFAULTS"], [30, 4, 1, "", "FEATURES"], [30, 4, 1, "", "REQUIRED"], [30, 4, 1, "", "backends"], [30, 2, 1, "", "get_platform_defs"], [30, 4, 1, "", "name"], [30, 3, 1, "", "optimized_kernel"], [30, 3, 1, "", "optimized_kernel_inc_dirs"], [30, 3, 1, "", "optimized_kernel_libs"], [30, 3, 1, "", "tf_src"]], "mlonmcu.flow.tvm": [[32, 1, 1, "", "TVMAOTBackend"], [32, 1, 1, "", "TVMAOTPlusBackend"], [32, 1, 1, "", "TVMCGBackend"], [32, 1, 1, "", "TVMRTBackend"], [33, 0, 0, "-", "backend"], [32, 0, 0, "-", "framework"]], "mlonmcu.flow.tvm.TVMAOTBackend": [[32, 4, 1, "", "DEFAULTS"], [32, 4, 1, "", "FEATURES"], [32, 3, 1, "", "alignment_bytes"], [32, 3, 1, "", "arena_size"], [32, 3, 1, "", "debug_arena"], [32, 2, 1, "", "generate"], [32, 2, 1, "", "get_tvmc_compile_args"], [32, 2, 1, "", "get_workspace_size_from_metadata"], [32, 4, 1, "", "name"], [32, 3, 1, "", "unpacked_api"]], "mlonmcu.flow.tvm.TVMAOTPlusBackend": [[32, 4, 1, "", "DEFAULTS"], [32, 4, 1, "", "name"]], "mlonmcu.flow.tvm.TVMCGBackend": [[32, 4, 1, "", "REQUIRED"], [32, 2, 1, "", "generate"], [32, 2, 1, "", "get_max_workspace_size_from_metadata"], [32, 4, 1, "", "name"]], "mlonmcu.flow.tvm.TVMRTBackend": [[32, 4, 1, "", "DEFAULTS"], [32, 4, 1, "", "FEATURES"], [32, 3, 1, "", "arena_size"], [32, 3, 1, "", "debug_arena"], [32, 2, 1, "", "generate"], [32, 2, 1, "", "get_tvmc_compile_args"], [32, 4, 1, "", "name"]], "mlonmcu.flow.tvm.backend": [[33, 1, 1, "", "TVMAOTBackend"], [33, 1, 1, "", "TVMAOTPlusBackend"], [33, 1, 1, "", "TVMBackend"], [33, 1, 1, "", "TVMCGBackend"], [33, 1, 1, "", "TVMLLVMBackend"], [33, 1, 1, "", "TVMRTBackend"], [33, 0, 0, "-", "backend"], [33, 0, 0, "-", "model_info"], [33, 0, 0, "-", "python_utils"], [33, 0, 0, "-", "tuner"], [33, 0, 0, "-", "tvmaot"], [33, 0, 0, "-", "tvmaotplus"], [33, 0, 0, "-", "tvmc_utils"], [33, 0, 0, "-", "tvmcg"], [33, 0, 0, "-", "tvmllvm"], [33, 0, 0, "-", "tvmrt"], [33, 0, 0, "-", "wrapper"]], "mlonmcu.flow.tvm.backend.TVMAOTBackend": [[33, 4, 1, "", "DEFAULTS"], [33, 4, 1, "", "FEATURES"], [33, 3, 1, "", "alignment_bytes"], [33, 3, 1, "", "arena_size"], [33, 3, 1, "", "debug_arena"], [33, 2, 1, "", "generate"], [33, 2, 1, "", "get_tvmc_compile_args"], [33, 2, 1, "", "get_workspace_size_from_metadata"], [33, 4, 1, "", "name"], [33, 3, 1, "", "unpacked_api"]], "mlonmcu.flow.tvm.backend.TVMAOTPlusBackend": [[33, 4, 1, "", "DEFAULTS"], [33, 4, 1, "", "name"]], "mlonmcu.flow.tvm.backend.TVMBackend": [[33, 4, 1, "", "DEFAULTS"], [33, 4, 1, "", "FEATURES"], [33, 4, 1, "", "OPTIONAL"], [33, 4, 1, "", "REQUIRED"], [33, 3, 1, "", "custom_unroll"], [33, 3, 1, "", "desired_layout"], [33, 3, 1, "", "desired_layout_map"], [33, 3, 1, "", "desired_layout_ops"], [33, 3, 1, "", "disable_vectorize"], [33, 3, 1, "", "disabled_passes"], [33, 3, 1, "", "dump"], [33, 3, 1, "", "extra_target_details"], [33, 3, 1, "", "extra_targets"], [33, 2, 1, "", "generate"], [33, 3, 1, "", "generate_wrapper"], [33, 2, 1, "", "get_graph_and_params_from_mlf"], [33, 2, 1, "", "get_target_details"], [33, 2, 1, "", "get_tuning_records"], [33, 2, 1, "", "get_tvmc_compile_args"], [33, 2, 1, "", "invoke_tvmc"], [33, 2, 1, "", "invoke_tvmc_compile"], [33, 2, 1, "", "load_model"], [33, 4, 1, "", "name"], [33, 3, 1, "", "needs_target"], [33, 2, 1, "", "num_threads"], [33, 3, 1, "", "opt_level"], [33, 3, 1, "", "pass_config"], [33, 3, 1, "", "print_outputs"], [33, 3, 1, "", "refresh_model_info"], [33, 4, 1, "", "registry"], [33, 3, 1, "", "relay_debug"], [33, 2, 1, "", "set_tuning_records"], [33, 3, 1, "", "target_device"], [33, 3, 1, "", "target_keys"], [33, 3, 1, "", "target_mabi"], [33, 3, 1, "", "target_march"], [33, 3, 1, "", "target_mattr"], [33, 3, 1, "", "target_mcpu"], [33, 3, 1, "", "target_model"], [33, 3, 1, "", "target_mtriple"], [33, 3, 1, "", "target_num_cores"], [33, 3, 1, "", "tophub_url"], [33, 3, 1, "", "tvm_build_dir"], [33, 3, 1, "", "tvm_configs_dir"], [33, 3, 1, "", "tvm_pythonpath"], [33, 3, 1, "", "tvmc_custom_script"], [33, 3, 1, "", "tvmc_extra_args"], [33, 3, 1, "", "use_tlcpack"], [33, 3, 1, "", "use_tuning_results"]], "mlonmcu.flow.tvm.backend.TVMCGBackend": [[33, 4, 1, "", "REQUIRED"], [33, 2, 1, "", "generate"], [33, 2, 1, "", "get_max_workspace_size_from_metadata"], [33, 4, 1, "", "name"]], "mlonmcu.flow.tvm.backend.TVMLLVMBackend": [[33, 4, 1, "", "DEFAULTS"], [33, 4, 1, "", "FEATURES"], [33, 3, 1, "", "arena_size"], [33, 3, 1, "", "debug_arena"], [33, 2, 1, "", "generate"], [33, 2, 1, "", "get_graph_and_params_from_mlf"], [33, 2, 1, "", "get_tvmc_compile_args"], [33, 4, 1, "", "name"]], "mlonmcu.flow.tvm.backend.TVMRTBackend": [[33, 4, 1, "", "DEFAULTS"], [33, 4, 1, "", "FEATURES"], [33, 3, 1, "", "arena_size"], [33, 3, 1, "", "debug_arena"], [33, 2, 1, "", "generate"], [33, 2, 1, "", "get_tvmc_compile_args"], [33, 4, 1, "", "name"]], "mlonmcu.flow.tvm.backend.backend": [[33, 1, 1, "", "TVMBackend"]], "mlonmcu.flow.tvm.backend.backend.TVMBackend": [[33, 4, 1, "", "DEFAULTS"], [33, 4, 1, "", "FEATURES"], [33, 4, 1, "", "OPTIONAL"], [33, 4, 1, "", "REQUIRED"], [33, 3, 1, "", "custom_unroll"], [33, 3, 1, "", "desired_layout"], [33, 3, 1, "", "desired_layout_map"], [33, 3, 1, "", "desired_layout_ops"], [33, 3, 1, "", "disable_vectorize"], [33, 3, 1, "", "disabled_passes"], [33, 3, 1, "", "dump"], [33, 3, 1, "", "extra_target_details"], [33, 3, 1, "", "extra_targets"], [33, 2, 1, "", "generate"], [33, 3, 1, "", "generate_wrapper"], [33, 2, 1, "", "get_graph_and_params_from_mlf"], [33, 2, 1, "", "get_target_details"], [33, 2, 1, "", "get_tuning_records"], [33, 2, 1, "", "get_tvmc_compile_args"], [33, 2, 1, "", "invoke_tvmc"], [33, 2, 1, "", "invoke_tvmc_compile"], [33, 2, 1, "", "load_model"], [33, 4, 1, "", "name"], [33, 3, 1, "", "needs_target"], [33, 2, 1, "", "num_threads"], [33, 3, 1, "", "opt_level"], [33, 3, 1, "", "pass_config"], [33, 3, 1, "", "print_outputs"], [33, 3, 1, "", "refresh_model_info"], [33, 4, 1, "", "registry"], [33, 3, 1, "", "relay_debug"], [33, 2, 1, "", "set_tuning_records"], [33, 3, 1, "", "target_device"], [33, 3, 1, "", "target_keys"], [33, 3, 1, "", "target_mabi"], [33, 3, 1, "", "target_march"], [33, 3, 1, "", "target_mattr"], [33, 3, 1, "", "target_mcpu"], [33, 3, 1, "", "target_model"], [33, 3, 1, "", "target_mtriple"], [33, 3, 1, "", "target_num_cores"], [33, 3, 1, "", "tophub_url"], [33, 3, 1, "", "tvm_build_dir"], [33, 3, 1, "", "tvm_configs_dir"], [33, 3, 1, "", "tvm_pythonpath"], [33, 3, 1, "", "tvmc_custom_script"], [33, 3, 1, "", "tvmc_extra_args"], [33, 3, 1, "", "use_tlcpack"], [33, 3, 1, "", "use_tuning_results"]], "mlonmcu.flow.tvm.backend.model_info": [[33, 1, 1, "", "ModelInfo"], [33, 1, 1, "", "ONNXModelInfo"], [33, 1, 1, "", "PBModelInfo"], [33, 1, 1, "", "PaddleModelInfo"], [33, 1, 1, "", "RelayModelInfo"], [33, 1, 1, "", "RelayTensorInfo"], [33, 1, 1, "", "TensorInfo"], [33, 1, 1, "", "TfLiteModelInfo"], [33, 1, 1, "", "TfLiteTensorInfo"], [33, 5, 1, "", "get_fallback_model_info"], [33, 5, 1, "", "get_model_format"], [33, 5, 1, "", "get_model_info"], [33, 5, 1, "", "get_onnx_model_info"], [33, 5, 1, "", "get_paddle_model_info"], [33, 5, 1, "", "get_pb_model_info"], [33, 5, 1, "", "get_relay_model_info"], [33, 5, 1, "", "get_supported_formats"], [33, 5, 1, "", "get_tfgraph_inout"], [33, 5, 1, "", "get_tflite_model_info"], [33, 5, 1, "", "parse_relay_main"], [33, 5, 1, "", "shape_from_str"]], "mlonmcu.flow.tvm.backend.model_info.ModelInfo": [[33, 3, 1, "", "has_ins"], [33, 3, 1, "", "has_outs"]], "mlonmcu.flow.tvm.backend.model_info.TensorInfo": [[33, 3, 1, "", "size"]], "mlonmcu.flow.tvm.backend.python_utils": [[33, 5, 1, "", "prepare_python_environment"]], "mlonmcu.flow.tvm.backend.tuner": [[33, 5, 1, "", "get_autoscheduler_defaults"], [33, 5, 1, "", "get_autotuning_defaults"], [33, 5, 1, "", "get_autotvm_defaults"], [33, 5, 1, "", "get_metascheduler_defaults"]], "mlonmcu.flow.tvm.backend.tvmaot": [[33, 1, 1, "", "TVMAOTBackend"]], "mlonmcu.flow.tvm.backend.tvmaot.TVMAOTBackend": [[33, 4, 1, "", "DEFAULTS"], [33, 4, 1, "", "FEATURES"], [33, 3, 1, "", "alignment_bytes"], [33, 3, 1, "", "arena_size"], [33, 3, 1, "", "debug_arena"], [33, 2, 1, "", "generate"], [33, 2, 1, "", "get_tvmc_compile_args"], [33, 2, 1, "", "get_workspace_size_from_metadata"], [33, 4, 1, "", "name"], [33, 3, 1, "", "unpacked_api"]], "mlonmcu.flow.tvm.backend.tvmaotplus": [[33, 1, 1, "", "TVMAOTPlusBackend"]], "mlonmcu.flow.tvm.backend.tvmaotplus.TVMAOTPlusBackend": [[33, 4, 1, "", "DEFAULTS"], [33, 4, 1, "", "name"]], "mlonmcu.flow.tvm.backend.tvmc_utils": [[33, 5, 1, "", "check_allowed"], [33, 5, 1, "", "gen_extra_target_details_args"], [33, 5, 1, "", "gen_target_details_args"], [33, 5, 1, "", "get_bench_tvmc_args"], [33, 5, 1, "", "get_data_tvmc_args"], [33, 5, 1, "", "get_desired_layout_args"], [33, 5, 1, "", "get_disabled_pass_tvmc_args"], [33, 5, 1, "", "get_input_shapes_tvmc_args"], [33, 5, 1, "", "get_pass_config_tvmc_args"], [33, 5, 1, "", "get_rpc_tvmc_args"], [33, 5, 1, "", "get_runtime_executor_tvmc_args"], [33, 5, 1, "", "get_target_tvmc_args"], [33, 5, 1, "", "get_tuning_records_tvmc_args"], [33, 5, 1, "", "get_tvmaot_tvmc_args"], [33, 5, 1, "", "get_tvmrt_tvmc_args"]], "mlonmcu.flow.tvm.backend.tvmcg": [[33, 1, 1, "", "TVMCGBackend"]], "mlonmcu.flow.tvm.backend.tvmcg.TVMCGBackend": [[33, 4, 1, "", "REQUIRED"], [33, 2, 1, "", "generate"], [33, 2, 1, "", "get_max_workspace_size_from_metadata"], [33, 4, 1, "", "name"]], "mlonmcu.flow.tvm.backend.tvmllvm": [[33, 1, 1, "", "TVMLLVMBackend"]], "mlonmcu.flow.tvm.backend.tvmllvm.TVMLLVMBackend": [[33, 4, 1, "", "DEFAULTS"], [33, 4, 1, "", "FEATURES"], [33, 3, 1, "", "arena_size"], [33, 3, 1, "", "debug_arena"], [33, 2, 1, "", "generate"], [33, 2, 1, "", "get_graph_and_params_from_mlf"], [33, 2, 1, "", "get_tvmc_compile_args"], [33, 4, 1, "", "name"]], "mlonmcu.flow.tvm.backend.tvmrt": [[33, 1, 1, "", "TVMRTBackend"]], "mlonmcu.flow.tvm.backend.tvmrt.TVMRTBackend": [[33, 4, 1, "", "DEFAULTS"], [33, 4, 1, "", "FEATURES"], [33, 3, 1, "", "arena_size"], [33, 3, 1, "", "debug_arena"], [33, 2, 1, "", "generate"], [33, 2, 1, "", "get_tvmc_compile_args"], [33, 4, 1, "", "name"]], "mlonmcu.flow.tvm.backend.wrapper": [[33, 5, 1, "", "calc_pages"], [33, 5, 1, "", "fill"], [33, 5, 1, "", "generate_aot_includes"], [33, 5, 1, "", "generate_common_includes"], [33, 5, 1, "", "generate_graph_includes"], [33, 5, 1, "", "generate_header"], [33, 5, 1, "", "generate_tvmaot_wrapper"], [33, 5, 1, "", "generate_tvmrt_wrapper"], [33, 5, 1, "", "generate_wrapper_header"], [33, 5, 1, "", "getSizes"], [33, 5, 1, "", "write_tvmaot_wrapper"], [33, 5, 1, "", "write_tvmrt_wrapper"]], "mlonmcu.flow.tvm.framework": [[32, 1, 1, "", "TVMFramework"], [32, 5, 1, "", "get_crt_config_dir"]], "mlonmcu.flow.tvm.framework.TVMFramework": [[32, 4, 1, "", "DEFAULTS"], [32, 4, 1, "", "FEATURES"], [32, 4, 1, "", "REQUIRED"], [32, 3, 1, "", "crt_config_dir"], [32, 3, 1, "", "extra_incs"], [32, 3, 1, "", "extra_libs"], [32, 2, 1, "", "get_platform_defs"], [32, 4, 1, "", "name"], [32, 3, 1, "", "tvm_src"]], "mlonmcu.logging": [[23, 5, 1, "", "get_formatter"], [23, 5, 1, "", "get_logger"], [23, 5, 1, "", "set_log_file"], [23, 5, 1, "", "set_log_level"]], "mlonmcu.models": [[34, 1, 1, "", "LayerGenFrontend"], [34, 1, 1, "", "ONNXFrontend"], [34, 1, 1, "", "PBFrontend"], [34, 1, 1, "", "PackedFrontend"], [34, 1, 1, "", "TfLiteFrontend"], [34, 0, 0, "-", "convert_data"], [34, 0, 0, "-", "frontend"], [34, 0, 0, "-", "group"], [34, 0, 0, "-", "lookup"], [34, 0, 0, "-", "metadata"], [34, 0, 0, "-", "model"], [34, 0, 0, "-", "options"], [34, 5, 1, "", "print_summary"], [34, 0, 0, "-", "utils"]], "mlonmcu.models.LayerGenFrontend": [[34, 4, 1, "", "DEFAULTS"], [34, 4, 1, "", "FEATURES"], [34, 4, 1, "", "REQUIRED"], [34, 3, 1, "", "fmt"], [34, 2, 1, "", "generate"], [34, 3, 1, "", "layergen_exe"], [34, 2, 1, "", "produce_artifacts"]], "mlonmcu.models.PackedFrontend": [[34, 4, 1, "", "DEFAULTS"], [34, 4, 1, "", "FEATURES"], [34, 4, 1, "", "REQUIRED"], [34, 3, 1, "", "check"], [34, 3, 1, "", "fake_pack"], [34, 3, 1, "", "ignore_existing"], [34, 2, 1, "", "produce_artifacts"], [34, 3, 1, "", "use_packed"]], "mlonmcu.models.TfLiteFrontend": [[34, 4, 1, "", "DEFAULTS"], [34, 4, 1, "", "FEATURES"], [34, 4, 1, "", "OPTIONAL"], [34, 4, 1, "", "REQUIRED"], [34, 3, 1, "", "analyze_enable"], [34, 3, 1, "", "analyze_script"], [34, 2, 1, "", "generate"], [34, 3, 1, "", "pack_script"], [34, 2, 1, "", "produce_artifacts"], [34, 3, 1, "", "split_layers"], [34, 3, 1, "", "visualize_enable"], [34, 3, 1, "", "visualize_script"]], "mlonmcu.models.convert_data": [[34, 5, 1, "", "convert"], [34, 5, 1, "", "main"], [34, 5, 1, "", "write_file"]], "mlonmcu.models.frontend": [[34, 1, 1, "", "CoremarkFrontend"], [34, 1, 1, "", "DhrystoneFrontend"], [34, 1, 1, "", "EmbenchFrontend"], [34, 1, 1, "", "ExampleFrontend"], [34, 1, 1, "", "Frontend"], [34, 1, 1, "", "LayerGenFrontend"], [34, 1, 1, "", "MathisFrontend"], [34, 1, 1, "", "MibenchFrontend"], [34, 1, 1, "", "ONNXFrontend"], [34, 1, 1, "", "PBFrontend"], [34, 1, 1, "", "PackedFrontend"], [34, 1, 1, "", "PaddleFrontend"], [34, 1, 1, "", "PolybenchFrontend"], [34, 1, 1, "", "RelayFrontend"], [34, 1, 1, "", "SimpleFrontend"], [34, 1, 1, "", "TaclebenchFrontend"], [34, 1, 1, "", "TfLiteFrontend"]], "mlonmcu.models.frontend.CoremarkFrontend": [[34, 4, 1, "", "REQUIRED"], [34, 2, 1, "", "generate"], [34, 2, 1, "", "get_platform_config"], [34, 2, 1, "", "lookup_models"], [34, 3, 1, "", "supported_names"]], "mlonmcu.models.frontend.DhrystoneFrontend": [[34, 4, 1, "", "REQUIRED"], [34, 2, 1, "", "generate"], [34, 2, 1, "", "get_platform_config"], [34, 2, 1, "", "lookup_models"], [34, 3, 1, "", "supported_names"]], "mlonmcu.models.frontend.EmbenchFrontend": [[34, 4, 1, "", "REQUIRED"], [34, 2, 1, "", "generate"], [34, 2, 1, "", "get_platform_config"], [34, 2, 1, "", "get_platform_defs"], [34, 2, 1, "", "lookup_models"], [34, 3, 1, "", "supported_names"]], "mlonmcu.models.frontend.ExampleFrontend": [[34, 2, 1, "", "generate"], [34, 2, 1, "", "get_platform_config"], [34, 2, 1, "", "lookup_models"], [34, 3, 1, "", "supported_names"]], "mlonmcu.models.frontend.Frontend": [[34, 4, 1, "", "DEFAULTS"], [34, 4, 1, "", "FEATURES"], [34, 4, 1, "", "OPTIONAL"], [34, 4, 1, "", "REQUIRED"], [34, 2, 1, "", "add_platform_config"], [34, 2, 1, "", "add_platform_defs"], [34, 2, 1, "", "export_artifacts"], [34, 2, 1, "", "generate"], [34, 2, 1, "", "generate_artifacts"], [34, 2, 1, "", "get_platform_config"], [34, 2, 1, "", "get_platform_defs"], [34, 2, 1, "", "lookup_models"], [34, 2, 1, "", "process_features"], [34, 2, 1, "", "process_metadata"], [34, 2, 1, "", "produce_artifacts"], [34, 2, 1, "", "supports_formats"], [34, 3, 1, "", "use_inout_data"]], "mlonmcu.models.frontend.LayerGenFrontend": [[34, 4, 1, "", "DEFAULTS"], [34, 4, 1, "", "FEATURES"], [34, 4, 1, "", "REQUIRED"], [34, 3, 1, "", "fmt"], [34, 2, 1, "", "generate"], [34, 3, 1, "", "layergen_exe"], [34, 2, 1, "", "produce_artifacts"]], "mlonmcu.models.frontend.MathisFrontend": [[34, 4, 1, "", "REQUIRED"], [34, 2, 1, "", "generate"], [34, 2, 1, "", "get_platform_config"], [34, 2, 1, "", "lookup_models"], [34, 3, 1, "", "supported_names"]], "mlonmcu.models.frontend.MibenchFrontend": [[34, 4, 1, "", "REQUIRED"], [34, 2, 1, "", "generate"], [34, 2, 1, "", "get_platform_config"], [34, 2, 1, "", "get_platform_defs"], [34, 2, 1, "", "lookup_models"], [34, 3, 1, "", "supported_names"]], "mlonmcu.models.frontend.PackedFrontend": [[34, 4, 1, "", "DEFAULTS"], [34, 4, 1, "", "FEATURES"], [34, 4, 1, "", "REQUIRED"], [34, 3, 1, "", "check"], [34, 3, 1, "", "fake_pack"], [34, 3, 1, "", "ignore_existing"], [34, 2, 1, "", "produce_artifacts"], [34, 3, 1, "", "use_packed"]], "mlonmcu.models.frontend.PolybenchFrontend": [[34, 4, 1, "", "REQUIRED"], [34, 2, 1, "", "generate"], [34, 2, 1, "", "get_platform_config"], [34, 2, 1, "", "get_platform_defs"], [34, 2, 1, "", "lookup_models"], [34, 3, 1, "", "supported_names"]], "mlonmcu.models.frontend.RelayFrontend": [[34, 4, 1, "", "DEFAULTS"], [34, 4, 1, "", "FEATURES"], [34, 4, 1, "", "REQUIRED"], [34, 2, 1, "", "produce_artifacts"], [34, 3, 1, "", "relayviz_plotter"], [34, 3, 1, "", "tvm_build_dir"], [34, 3, 1, "", "tvm_pythonpath"], [34, 3, 1, "", "visualize_graph"]], "mlonmcu.models.frontend.SimpleFrontend": [[34, 2, 1, "", "produce_artifacts"]], "mlonmcu.models.frontend.TaclebenchFrontend": [[34, 4, 1, "", "REQUIRED"], [34, 2, 1, "", "generate"], [34, 2, 1, "", "get_platform_config"], [34, 2, 1, "", "get_platform_defs"], [34, 2, 1, "", "lookup_models"], [34, 3, 1, "", "supported_names"]], "mlonmcu.models.frontend.TfLiteFrontend": [[34, 4, 1, "", "DEFAULTS"], [34, 4, 1, "", "FEATURES"], [34, 4, 1, "", "OPTIONAL"], [34, 4, 1, "", "REQUIRED"], [34, 3, 1, "", "analyze_enable"], [34, 3, 1, "", "analyze_script"], [34, 2, 1, "", "generate"], [34, 3, 1, "", "pack_script"], [34, 2, 1, "", "produce_artifacts"], [34, 3, 1, "", "split_layers"], [34, 3, 1, "", "visualize_enable"], [34, 3, 1, "", "visualize_script"]], "mlonmcu.models.group": [[34, 1, 1, "", "ModelGroup"]], "mlonmcu.models.lookup": [[34, 5, 1, "", "apply_modelgroups"], [34, 5, 1, "", "find_metadata"], [34, 5, 1, "", "get_model_directories"], [34, 5, 1, "", "list_modelgroups"], [34, 5, 1, "", "list_models"], [34, 5, 1, "", "lookup_models"], [34, 5, 1, "", "lookup_models_and_groups"], [34, 5, 1, "", "map_frontend_to_model"], [34, 5, 1, "", "print_groups"], [34, 5, 1, "", "print_models"], [34, 5, 1, "", "print_paths"], [34, 5, 1, "", "print_summary"]], "mlonmcu.models.metadata": [[34, 5, 1, "", "parse_metadata"]], "mlonmcu.models.model": [[34, 1, 1, "", "CoremarkProgram"], [34, 1, 1, "", "DhrystoneProgram"], [34, 1, 1, "", "EmbenchProgram"], [34, 1, 1, "", "ExampleProgram"], [34, 1, 1, "", "MathisProgram"], [34, 1, 1, "", "MibenchProgram"], [34, 1, 1, "", "Model"], [34, 1, 1, "", "ModelFormat"], [34, 1, 1, "", "ModelFormats"], [34, 1, 1, "", "PolybenchProgram"], [34, 1, 1, "", "Program"], [34, 1, 1, "", "TaclebenchProgram"], [34, 1, 1, "", "Workload"], [34, 5, 1, "", "parse_metadata_from_path"], [34, 5, 1, "", "parse_shape_string"], [34, 5, 1, "", "parse_type_string"]], "mlonmcu.models.model.CoremarkProgram": [[34, 2, 1, "", "get_platform_defs"]], "mlonmcu.models.model.DhrystoneProgram": [[34, 2, 1, "", "get_platform_defs"]], "mlonmcu.models.model.EmbenchProgram": [[34, 2, 1, "", "get_platform_defs"]], "mlonmcu.models.model.ExampleProgram": [[34, 2, 1, "", "get_platform_defs"]], "mlonmcu.models.model.MathisProgram": [[34, 4, 1, "", "DEFAULTS"], [34, 2, 1, "", "get_elem_size"], [34, 2, 1, "", "get_nargs"], [34, 2, 1, "", "get_platform_defs"], [34, 3, 1, "", "size"]], "mlonmcu.models.model.MibenchProgram": [[34, 2, 1, "", "get_platform_defs"]], "mlonmcu.models.model.Model": [[34, 4, 1, "", "DEFAULTS"], [34, 3, 1, "", "input_shapes"], [34, 3, 1, "", "input_types"], [34, 3, 1, "", "inputs_path"], [34, 3, 1, "", "metadata_path"], [34, 3, 1, "", "output_shapes"], [34, 3, 1, "", "output_types"], [34, 3, 1, "", "outputs_path"], [34, 3, 1, "", "skip_check"], [34, 3, 1, "", "support_path"]], "mlonmcu.models.model.ModelFormat": [[34, 4, 1, "", "extensions"], [34, 4, 1, "", "value"]], "mlonmcu.models.model.ModelFormats": [[34, 4, 1, "", "IPYNB"], [34, 4, 1, "", "NONE"], [34, 4, 1, "", "ONNX"], [34, 4, 1, "", "PACKED"], [34, 4, 1, "", "PADDLE"], [34, 4, 1, "", "PB"], [34, 4, 1, "", "RELAY"], [34, 4, 1, "", "TEXT"], [34, 4, 1, "", "TFLITE"], [34, 3, 1, "", "extension"], [34, 3, 1, "", "extensions"], [34, 2, 1, "", "from_extension"]], "mlonmcu.models.model.PolybenchProgram": [[34, 2, 1, "", "get_platform_defs"]], "mlonmcu.models.model.TaclebenchProgram": [[34, 2, 1, "", "get_platform_defs"]], "mlonmcu.models.model.Workload": [[34, 4, 1, "", "DEFAULTS"], [34, 2, 1, "", "add_platform_config"], [34, 2, 1, "", "add_platform_defs"], [34, 2, 1, "", "get_platform_config"], [34, 2, 1, "", "get_platform_defs"]], "mlonmcu.models.options": [[34, 1, 1, "", "BackendModelOptions"], [34, 1, 1, "", "TFLMIModelOptions"], [34, 1, 1, "", "TVMRTModelOptions"], [34, 5, 1, "", "parse_model_options_for_backend"]], "mlonmcu.models.utils": [[34, 5, 1, "", "fill_data_source"], [34, 5, 1, "", "get_data_source"], [34, 5, 1, "", "lookup_data_buffers"], [34, 5, 1, "", "make_hex_array"]], "mlonmcu.platform": [[35, 1, 1, "", "Platform"], [36, 0, 0, "-", "espidf"], [35, 5, 1, "", "get_platforms"], [35, 0, 0, "-", "lookup"], [37, 0, 0, "-", "microtvm"], [38, 0, 0, "-", "mlif"], [35, 0, 0, "-", "platform"], [35, 5, 1, "", "register_platform"], [39, 0, 0, "-", "tvm"], [40, 0, 0, "-", "zephyr"]], "mlonmcu.platform.Platform": [[35, 4, 1, "", "DEFAULTS"], [35, 4, 1, "", "FEATURES"], [35, 4, 1, "", "OPTIONAL"], [35, 4, 1, "", "REQUIRED"], [35, 2, 1, "", "get_supported_backends"], [35, 2, 1, "", "get_supported_targets"], [35, 2, 1, "", "init_directory"], [35, 3, 1, "", "print_outputs"], [35, 2, 1, "", "process_features"], [35, 3, 1, "", "supports_build"], [35, 3, 1, "", "supports_compile"], [35, 3, 1, "", "supports_flash"], [35, 3, 1, "", "supports_monitor"], [35, 3, 1, "", "supports_tune"]], "mlonmcu.platform.espidf": [[36, 1, 1, "", "EspIdfPlatform"], [36, 0, 0, "-", "espidf"], [36, 0, 0, "-", "espidf_target"]], "mlonmcu.platform.espidf.EspIdfPlatform": [[36, 4, 1, "", "DEFAULTS"], [36, 4, 1, "", "FEATURES"], [36, 4, 1, "", "REQUIRED"], [36, 3, 1, "", "baud"], [36, 2, 1, "", "check"], [36, 2, 1, "", "close"], [36, 2, 1, "", "compile"], [36, 2, 1, "", "create_target"], [36, 3, 1, "", "espidf_install_dir"], [36, 3, 1, "", "espidf_src_dir"], [36, 2, 1, "", "flash"], [36, 3, 1, "", "flash_only"], [36, 2, 1, "", "generate"], [36, 2, 1, "", "get_idf_cmake_args"], [36, 2, 1, "", "get_idf_serial_args"], [36, 2, 1, "", "get_supported_targets"], [36, 3, 1, "", "idf_exe"], [36, 2, 1, "", "init_directory"], [36, 2, 1, "", "invoke_idf_exe"], [36, 2, 1, "", "monitor"], [36, 3, 1, "", "port"], [36, 2, 1, "", "prepare"], [36, 3, 1, "", "project_template"], [36, 3, 1, "", "use_idf_monitor"], [36, 3, 1, "", "wait_for_user"]], "mlonmcu.platform.espidf.espidf": [[36, 1, 1, "", "EspIdfPlatform"], [36, 5, 1, "", "get_project_template"]], "mlonmcu.platform.espidf.espidf.EspIdfPlatform": [[36, 4, 1, "", "DEFAULTS"], [36, 4, 1, "", "FEATURES"], [36, 4, 1, "", "REQUIRED"], [36, 3, 1, "", "baud"], [36, 2, 1, "", "check"], [36, 2, 1, "", "close"], [36, 2, 1, "", "compile"], [36, 2, 1, "", "create_target"], [36, 3, 1, "", "espidf_install_dir"], [36, 3, 1, "", "espidf_src_dir"], [36, 2, 1, "", "flash"], [36, 3, 1, "", "flash_only"], [36, 2, 1, "", "generate"], [36, 2, 1, "", "get_idf_cmake_args"], [36, 2, 1, "", "get_idf_serial_args"], [36, 2, 1, "", "get_supported_targets"], [36, 3, 1, "", "idf_exe"], [36, 2, 1, "", "init_directory"], [36, 2, 1, "", "invoke_idf_exe"], [36, 2, 1, "", "monitor"], [36, 3, 1, "", "port"], [36, 2, 1, "", "prepare"], [36, 3, 1, "", "project_template"], [36, 3, 1, "", "use_idf_monitor"], [36, 3, 1, "", "wait_for_user"]], "mlonmcu.platform.espidf.espidf_target": [[36, 1, 1, "", "Esp32C3PerfCount"], [36, 1, 1, "", "Esp32C3Target"], [36, 5, 1, "", "create_espidf_platform_target"], [36, 5, 1, "", "get_espidf_platform_targets"], [36, 5, 1, "", "register_espidf_platform_target"]], "mlonmcu.platform.espidf.espidf_target.Esp32C3PerfCount": [[36, 4, 1, "", "BRANCH"], [36, 4, 1, "", "BRANCH_TAKEN"], [36, 4, 1, "", "CYCLE"], [36, 4, 1, "", "IDLE"], [36, 4, 1, "", "INST"], [36, 4, 1, "", "INST_COMP"], [36, 4, 1, "", "JMP_HAZARD"], [36, 4, 1, "", "JMP_UNCOND"], [36, 4, 1, "", "LD_HAZARD"], [36, 4, 1, "", "LOAD"], [36, 4, 1, "", "STORE"]], "mlonmcu.platform.espidf.espidf_target.Esp32C3Target": [[36, 4, 1, "", "DEFAULTS"], [36, 3, 1, "", "abi"], [36, 2, 1, "", "add_backend_config"], [36, 3, 1, "", "arch"], [36, 3, 1, "", "attr"], [36, 3, 1, "", "count"], [36, 3, 1, "", "extensions"], [36, 3, 1, "", "fpu"], [36, 2, 1, "", "get_arch"], [36, 2, 1, "", "get_backend_config"], [36, 2, 1, "", "get_platform_defs"], [36, 2, 1, "", "get_target_system"], [36, 3, 1, "", "has_fpu"], [36, 3, 1, "", "xlen"]], "mlonmcu.platform.lookup": [[35, 5, 1, "", "get_platform_names"], [35, 5, 1, "", "get_platforms_backends"], [35, 5, 1, "", "get_platforms_targets"], [35, 5, 1, "", "print_backends"], [35, 5, 1, "", "print_platforms"], [35, 5, 1, "", "print_summary"], [35, 5, 1, "", "print_targets"]], "mlonmcu.platform.microtvm": [[37, 1, 1, "", "MicroTvmPlatform"], [37, 0, 0, "-", "microtvm"], [37, 0, 0, "-", "microtvm_arduino_target"], [37, 0, 0, "-", "microtvm_backend"], [37, 0, 0, "-", "microtvm_base_platform"], [37, 0, 0, "-", "microtvm_build_platform"], [37, 0, 0, "-", "microtvm_compile_platform"], [37, 0, 0, "-", "microtvm_corev_ovpsim_target"], [37, 0, 0, "-", "microtvm_espidf_target"], [37, 0, 0, "-", "microtvm_etiss_target"], [37, 0, 0, "-", "microtvm_host_target"], [37, 0, 0, "-", "microtvm_mlonmcu_target"], [37, 0, 0, "-", "microtvm_spike_target"], [37, 0, 0, "-", "microtvm_target"], [37, 0, 0, "-", "microtvm_target_platform"], [37, 0, 0, "-", "microtvm_template_target"], [37, 0, 0, "-", "microtvm_tune_platform"], [37, 0, 0, "-", "microtvm_zephyr_target"]], "mlonmcu.platform.microtvm.MicroTvmPlatform": [[37, 4, 1, "", "DEFAULTS"], [37, 4, 1, "", "FEATURES"], [37, 4, 1, "", "REQUIRED"], [37, 2, 1, "", "create_target"], [37, 2, 1, "", "get_supported_targets"]], "mlonmcu.platform.microtvm.microtvm": [[37, 1, 1, "", "MicroTvmPlatform"]], "mlonmcu.platform.microtvm.microtvm.MicroTvmPlatform": [[37, 4, 1, "", "DEFAULTS"], [37, 4, 1, "", "FEATURES"], [37, 4, 1, "", "REQUIRED"], [37, 2, 1, "", "create_target"], [37, 2, 1, "", "get_supported_targets"]], "mlonmcu.platform.microtvm.microtvm_arduino_target": [[37, 1, 1, "", "ArduinoMicroTvmPlatformTarget"]], "mlonmcu.platform.microtvm.microtvm_arduino_target.ArduinoMicroTvmPlatformTarget": [[37, 4, 1, "", "DEFAULTS"], [37, 4, 1, "", "REQUIRED"], [37, 3, 1, "", "arduino_install_dir"], [37, 2, 1, "", "get_project_options"], [37, 3, 1, "", "port"], [37, 2, 1, "", "update_environment"]], "mlonmcu.platform.microtvm.microtvm_backend": [[37, 5, 1, "", "create_microtvm_platform_backend"], [37, 5, 1, "", "get_microtvm_platform_backends"], [37, 5, 1, "", "register_microtvm_platform_backend"]], "mlonmcu.platform.microtvm.microtvm_base_platform": [[37, 1, 1, "", "MicroTvmBasePlatform"], [37, 5, 1, "", "filter_project_options"], [37, 5, 1, "", "get_project_option_args"], [37, 5, 1, "", "parse_project_options_from_stdout"]], "mlonmcu.platform.microtvm.microtvm_base_platform.MicroTvmBasePlatform": [[37, 4, 1, "", "DEFAULTS"], [37, 4, 1, "", "REQUIRED"], [37, 2, 1, "", "close"], [37, 2, 1, "", "collect_available_project_options"], [37, 2, 1, "", "get_template_args"], [37, 2, 1, "", "init_directory"], [37, 2, 1, "", "invoke_tvmc"], [37, 2, 1, "", "invoke_tvmc_micro"], [37, 3, 1, "", "project_options"], [37, 3, 1, "", "project_template"], [37, 3, 1, "", "tvm_build_dir"], [37, 3, 1, "", "tvm_configs_dir"], [37, 3, 1, "", "tvm_pythonpath"], [37, 3, 1, "", "tvmc_custom_script"]], "mlonmcu.platform.microtvm.microtvm_build_platform": [[37, 1, 1, "", "MicroTvmBuildPlatform"]], "mlonmcu.platform.microtvm.microtvm_build_platform.MicroTvmBuildPlatform": [[37, 2, 1, "", "create_backend"], [37, 2, 1, "", "get_supported_backends"]], "mlonmcu.platform.microtvm.microtvm_compile_platform": [[37, 1, 1, "", "MicroTvmCompilePlatform"]], "mlonmcu.platform.microtvm.microtvm_compile_platform.MicroTvmCompilePlatform": [[37, 2, 1, "", "compile"], [37, 2, 1, "", "generate"], [37, 2, 1, "", "invoke_tvmc_micro_build"], [37, 2, 1, "", "invoke_tvmc_micro_create"], [37, 2, 1, "", "prepare"]], "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target": [[37, 1, 1, "", "CoreVOVPSimMicroTvmPlatformTarget"]], "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget": [[37, 4, 1, "", "DEFAULTS"], [37, 4, 1, "", "FEATURES"], [37, 4, 1, "", "REQUIRED"], [37, 3, 1, "", "abi"], [37, 2, 1, "", "add_backend_config"], [37, 3, 1, "", "attr"], [37, 3, 1, "", "enable_xcorevalu"], [37, 3, 1, "", "enable_xcorevbi"], [37, 3, 1, "", "enable_xcorevbitmanip"], [37, 3, 1, "", "enable_xcorevhwlp"], [37, 3, 1, "", "enable_xcorevmac"], [37, 3, 1, "", "enable_xcorevmem"], [37, 3, 1, "", "enable_xcorevsimd"], [37, 3, 1, "", "etiss_extra_args"], [37, 3, 1, "", "etiss_script"], [37, 3, 1, "", "extensions"], [37, 3, 1, "", "fpu"], [37, 3, 1, "", "gcc_arch"], [37, 2, 1, "", "get_backend_config"], [37, 2, 1, "", "get_project_options"], [37, 3, 1, "", "llvm_arch"], [37, 3, 1, "", "llvm_prefix"], [37, 3, 1, "", "microtvm_ovpsim_src_dir"], [37, 3, 1, "", "riscv_gcc_install_dir"], [37, 3, 1, "", "riscv_gcc_name"], [37, 3, 1, "", "toolchain"], [37, 3, 1, "", "xlen"]], "mlonmcu.platform.microtvm.microtvm_espidf_target": [[37, 1, 1, "", "EspidfMicroTvmPlatformTarget"]], "mlonmcu.platform.microtvm.microtvm_espidf_target.EspidfMicroTvmPlatformTarget": [[37, 4, 1, "", "DEFAULTS"], [37, 4, 1, "", "REQUIRED"], [37, 3, 1, "", "baud"], [37, 3, 1, "", "board"], [37, 3, 1, "", "esp_idf_install_dir"], [37, 3, 1, "", "esp_idf_src_dir"], [37, 2, 1, "", "get_project_options"], [37, 3, 1, "", "microtvm_espidf_template"], [37, 3, 1, "", "port"]], "mlonmcu.platform.microtvm.microtvm_etiss_target": [[37, 1, 1, "", "EtissMicroTvmPlatformTarget"]], "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget": [[37, 4, 1, "", "DEFAULTS"], [37, 4, 1, "", "FEATURES"], [37, 4, 1, "", "REQUIRED"], [37, 3, 1, "", "abi"], [37, 2, 1, "", "add_backend_config"], [37, 3, 1, "", "attr"], [37, 3, 1, "", "cpu_arch"], [37, 3, 1, "", "enable_xcorevalu"], [37, 3, 1, "", "enable_xcorevbi"], [37, 3, 1, "", "enable_xcorevbitmanip"], [37, 3, 1, "", "enable_xcorevhwlp"], [37, 3, 1, "", "enable_xcorevmac"], [37, 3, 1, "", "enable_xcorevmem"], [37, 3, 1, "", "enable_xcorevsimd"], [37, 3, 1, "", "etiss_extra_args"], [37, 3, 1, "", "etiss_script"], [37, 3, 1, "", "extensions"], [37, 3, 1, "", "fpu"], [37, 3, 1, "", "gcc_arch"], [37, 2, 1, "", "get_backend_config"], [37, 2, 1, "", "get_project_options"], [37, 3, 1, "", "llvm_arch"], [37, 3, 1, "", "llvm_prefix"], [37, 3, 1, "", "microtvm_etiss_src_dir"], [37, 3, 1, "", "riscv_gcc_install_dir"], [37, 3, 1, "", "riscv_gcc_name"], [37, 3, 1, "", "toolchain"], [37, 3, 1, "", "xlen"]], "mlonmcu.platform.microtvm.microtvm_host_target": [[37, 1, 1, "", "HostMicroTvmPlatformTarget"]], "mlonmcu.platform.microtvm.microtvm_host_target.HostMicroTvmPlatformTarget": [[37, 4, 1, "", "DEFAULTS"], [37, 4, 1, "", "REQUIRED"], [37, 3, 1, "", "tvm_build_dir"]], "mlonmcu.platform.microtvm.microtvm_mlonmcu_target": [[37, 1, 1, "", "MlonmcuMicroTvmPlatformTarget"]], "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget": [[37, 4, 1, "", "DEFAULTS"], [37, 4, 1, "", "FEATURES"], [37, 4, 1, "", "REQUIRED"], [37, 3, 1, "", "abi"], [37, 2, 1, "", "add_backend_config"], [37, 3, 1, "", "attr"], [37, 3, 1, "", "cpu_arch"], [37, 3, 1, "", "enable_xcorevalu"], [37, 3, 1, "", "enable_xcorevbi"], [37, 3, 1, "", "enable_xcorevbitmanip"], [37, 3, 1, "", "enable_xcorevhwlp"], [37, 3, 1, "", "enable_xcorevmac"], [37, 3, 1, "", "enable_xcorevmem"], [37, 3, 1, "", "enable_xcorevsimd"], [37, 3, 1, "", "etiss_extra_args"], [37, 3, 1, "", "etiss_script"], [37, 3, 1, "", "extensions"], [37, 3, 1, "", "fpu"], [37, 3, 1, "", "gcc_arch"], [37, 2, 1, "", "get_backend_config"], [37, 2, 1, "", "get_project_options"], [37, 3, 1, "", "llvm_arch"], [37, 3, 1, "", "llvm_prefix"], [37, 3, 1, "", "microtvm_etiss_src_dir"], [37, 3, 1, "", "riscv_gcc_install_dir"], [37, 3, 1, "", "riscv_gcc_name"], [37, 3, 1, "", "toolchain"], [37, 3, 1, "", "xlen"]], "mlonmcu.platform.microtvm.microtvm_spike_target": [[37, 1, 1, "", "SpikeMicroTvmPlatformTarget"]], "mlonmcu.platform.microtvm.microtvm_spike_target.SpikeMicroTvmPlatformTarget": [[37, 4, 1, "", "DEFAULTS"], [37, 4, 1, "", "FEATURES"], [37, 4, 1, "", "REQUIRED"], [37, 3, 1, "", "extensions"], [37, 2, 1, "", "get_backend_config"], [37, 2, 1, "", "get_project_options"], [37, 3, 1, "", "llvm_prefix"], [37, 3, 1, "", "microtvm_spike_src_dir"], [37, 3, 1, "", "spike_exe"], [37, 3, 1, "", "spike_pk"], [37, 3, 1, "", "toolchain"]], "mlonmcu.platform.microtvm.microtvm_target": [[37, 5, 1, "", "create_microtvm_platform_target"], [37, 5, 1, "", "get_microtvm_platform_targets"], [37, 5, 1, "", "name2template"], [37, 5, 1, "", "register_microtvm_platform_target"]], "mlonmcu.platform.microtvm.microtvm_target_platform": [[37, 1, 1, "", "MicroTvmTargetPlatform"]], "mlonmcu.platform.microtvm.microtvm_target_platform.MicroTvmTargetPlatform": [[37, 4, 1, "", "DEFAULTS"], [37, 4, 1, "", "FEATURES"], [37, 3, 1, "", "experimental_tvmc_print_time"], [37, 2, 1, "", "flash"], [37, 2, 1, "", "get_tvmc_run_args"], [37, 2, 1, "", "invoke_tvmc_micro_flash"], [37, 2, 1, "", "invoke_tvmc_micro_run"], [37, 2, 1, "", "invoke_tvmc_run"], [37, 2, 1, "", "monitor"], [37, 2, 1, "", "run"], [37, 3, 1, "", "skip_flash"]], "mlonmcu.platform.microtvm.microtvm_template_target": [[37, 1, 1, "", "TemplateMicroTvmPlatformTarget"]], "mlonmcu.platform.microtvm.microtvm_template_target.TemplateMicroTvmPlatformTarget": [[37, 4, 1, "", "REQUIRED"], [37, 2, 1, "", "get_project_options"], [37, 2, 1, "", "update_environment"]], "mlonmcu.platform.microtvm.microtvm_tune_platform": [[37, 1, 1, "", "MicroTvmTunePlatform"]], "mlonmcu.platform.microtvm.microtvm_tune_platform.MicroTvmTunePlatform": [[37, 4, 1, "", "DEFAULTS"], [37, 4, 1, "", "FEATURES"], [37, 4, 1, "", "REQUIRED"], [37, 3, 1, "", "experimental_tvmc_micro_tune"], [37, 2, 1, "", "invoke_tvmc_micro_tune"], [37, 2, 1, "", "invoke_tvmc_tune"]], "mlonmcu.platform.microtvm.microtvm_zephyr_target": [[37, 1, 1, "", "ZephyrMicroTvmPlatformTarget"]], "mlonmcu.platform.microtvm.microtvm_zephyr_target.ZephyrMicroTvmPlatformTarget": [[37, 4, 1, "", "DEFAULTS"], [37, 4, 1, "", "REQUIRED"], [37, 2, 1, "", "get_project_options"], [37, 3, 1, "", "port"], [37, 2, 1, "", "update_environment"], [37, 3, 1, "", "zephyr_install_dir"], [37, 3, 1, "", "zephyr_sdk_dir"]], "mlonmcu.platform.mlif": [[38, 1, 1, "", "MlifPlatform"], [38, 0, 0, "-", "mlif"], [38, 0, 0, "-", "mlif_target"]], "mlonmcu.platform.mlif.MlifPlatform": [[38, 4, 1, "", "DEFAULTS"], [38, 4, 1, "", "FEATURES"], [38, 4, 1, "", "OPTIONAL"], [38, 4, 1, "", "REQUIRED"], [38, 2, 1, "", "close"], [38, 2, 1, "", "compile"], [38, 2, 1, "", "configure"], [38, 2, 1, "", "create_target"], [38, 3, 1, "", "debug_symbols"], [38, 3, 1, "", "fail_on_error"], [38, 3, 1, "", "fuse_ld"], [38, 3, 1, "", "garbage_collect"], [38, 2, 1, "", "gen_data_artifact"], [38, 2, 1, "", "generate"], [38, 2, 1, "", "get_cmake_args"], [38, 2, 1, "", "get_definitions"], [38, 2, 1, "", "get_supported_targets"], [38, 3, 1, "", "goal"], [38, 3, 1, "", "ignore_data"], [38, 2, 1, "", "init_directory"], [38, 3, 1, "", "input_data_path"], [38, 3, 1, "", "llvm_dir"], [38, 3, 1, "", "lto"], [38, 3, 1, "", "mem_only"], [38, 3, 1, "", "mlif_dir"], [38, 3, 1, "", "model_support_dir"], [38, 3, 1, "", "optimize"], [38, 3, 1, "", "output_data_path"], [38, 3, 1, "", "prebuild_lib_dir"], [38, 2, 1, "", "prepare"], [38, 3, 1, "", "skip_check"], [38, 3, 1, "", "slim_cpp"], [38, 3, 1, "", "strip_strings"], [38, 3, 1, "", "template"], [38, 3, 1, "", "toolchain"], [38, 3, 1, "", "validate_outputs"], [38, 3, 1, "", "verbose_makefile"]], "mlonmcu.platform.mlif.mlif": [[38, 1, 1, "", "MlifPlatform"]], "mlonmcu.platform.mlif.mlif.MlifPlatform": [[38, 4, 1, "", "DEFAULTS"], [38, 4, 1, "", "FEATURES"], [38, 4, 1, "", "OPTIONAL"], [38, 4, 1, "", "REQUIRED"], [38, 2, 1, "", "close"], [38, 2, 1, "", "compile"], [38, 2, 1, "", "configure"], [38, 2, 1, "", "create_target"], [38, 3, 1, "", "debug_symbols"], [38, 3, 1, "", "fail_on_error"], [38, 3, 1, "", "fuse_ld"], [38, 3, 1, "", "garbage_collect"], [38, 2, 1, "", "gen_data_artifact"], [38, 2, 1, "", "generate"], [38, 2, 1, "", "get_cmake_args"], [38, 2, 1, "", "get_definitions"], [38, 2, 1, "", "get_supported_targets"], [38, 3, 1, "", "goal"], [38, 3, 1, "", "ignore_data"], [38, 2, 1, "", "init_directory"], [38, 3, 1, "", "input_data_path"], [38, 3, 1, "", "llvm_dir"], [38, 3, 1, "", "lto"], [38, 3, 1, "", "mem_only"], [38, 3, 1, "", "mlif_dir"], [38, 3, 1, "", "model_support_dir"], [38, 3, 1, "", "optimize"], [38, 3, 1, "", "output_data_path"], [38, 3, 1, "", "prebuild_lib_dir"], [38, 2, 1, "", "prepare"], [38, 3, 1, "", "skip_check"], [38, 3, 1, "", "slim_cpp"], [38, 3, 1, "", "strip_strings"], [38, 3, 1, "", "template"], [38, 3, 1, "", "toolchain"], [38, 3, 1, "", "validate_outputs"], [38, 3, 1, "", "verbose_makefile"]], "mlonmcu.platform.mlif.mlif_target": [[38, 1, 1, "", "MlifExitCode"], [38, 5, 1, "", "create_mlif_platform_target"], [38, 5, 1, "", "get_mlif_platform_targets"]], "mlonmcu.platform.mlif.mlif_target.MlifExitCode": [[38, 4, 1, "", "ERROR"], [38, 4, 1, "", "INVALID_SIZE"], [38, 4, 1, "", "OUTPUT_MISSMATCH"], [38, 2, 1, "", "values"]], "mlonmcu.platform.platform": [[35, 1, 1, "", "BuildPlatform"], [35, 1, 1, "", "CompilePlatform"], [35, 1, 1, "", "Platform"], [35, 1, 1, "", "TargetPlatform"], [35, 1, 1, "", "TunePlatform"]], "mlonmcu.platform.platform.BuildPlatform": [[35, 2, 1, "", "export_artifacts"], [35, 3, 1, "", "supports_build"]], "mlonmcu.platform.platform.CompilePlatform": [[35, 4, 1, "", "DEFAULTS"], [35, 4, 1, "", "FEATURES"], [35, 3, 1, "", "debug"], [35, 2, 1, "", "generate"], [35, 2, 1, "", "generate_artifacts"], [35, 2, 1, "", "get_metrics"], [35, 3, 1, "", "num_threads"], [35, 3, 1, "", "supports_compile"]], "mlonmcu.platform.platform.Platform": [[35, 4, 1, "", "DEFAULTS"], [35, 4, 1, "", "FEATURES"], [35, 4, 1, "", "OPTIONAL"], [35, 4, 1, "", "REQUIRED"], [35, 2, 1, "", "get_supported_backends"], [35, 2, 1, "", "get_supported_targets"], [35, 2, 1, "", "init_directory"], [35, 3, 1, "", "print_outputs"], [35, 2, 1, "", "process_features"], [35, 3, 1, "", "supports_build"], [35, 3, 1, "", "supports_compile"], [35, 3, 1, "", "supports_flash"], [35, 3, 1, "", "supports_monitor"], [35, 3, 1, "", "supports_tune"]], "mlonmcu.platform.platform.TargetPlatform": [[35, 2, 1, "", "create_target"], [35, 2, 1, "", "flash"], [35, 2, 1, "", "monitor"], [35, 2, 1, "", "run"], [35, 3, 1, "", "supports_flash"], [35, 3, 1, "", "supports_monitor"]], "mlonmcu.platform.platform.TunePlatform": [[35, 2, 1, "", "export_artifacts"], [35, 3, 1, "", "supports_tune"], [35, 2, 1, "", "tune_model"]], "mlonmcu.platform.tvm": [[39, 1, 1, "", "TvmPlatform"], [39, 0, 0, "-", "tvm"], [39, 0, 0, "-", "tvm_backend"], [39, 0, 0, "-", "tvm_base_platform"], [39, 0, 0, "-", "tvm_build_platform"], [39, 0, 0, "-", "tvm_rpc_platform"], [39, 0, 0, "-", "tvm_target"], [39, 0, 0, "-", "tvm_target_platform"], [39, 0, 0, "-", "tvm_tune_platform"]], "mlonmcu.platform.tvm.TvmPlatform": [[39, 4, 1, "", "DEFAULTS"], [39, 4, 1, "", "FEATURES"], [39, 4, 1, "", "REQUIRED"]], "mlonmcu.platform.tvm.tvm": [[39, 1, 1, "", "TvmPlatform"]], "mlonmcu.platform.tvm.tvm.TvmPlatform": [[39, 4, 1, "", "DEFAULTS"], [39, 4, 1, "", "FEATURES"], [39, 4, 1, "", "REQUIRED"]], "mlonmcu.platform.tvm.tvm_backend": [[39, 5, 1, "", "create_tvm_platform_backend"], [39, 5, 1, "", "get_tvm_platform_backends"], [39, 5, 1, "", "register_tvm_platform_backend"]], "mlonmcu.platform.tvm.tvm_base_platform": [[39, 1, 1, "", "TvmBasePlatform"]], "mlonmcu.platform.tvm.tvm_base_platform.TvmBasePlatform": [[39, 4, 1, "", "DEFAULTS"], [39, 4, 1, "", "FEATURES"], [39, 4, 1, "", "REQUIRED"], [39, 2, 1, "", "close"], [39, 2, 1, "", "init_directory"], [39, 2, 1, "", "invoke_tvmc"], [39, 3, 1, "", "tvm_build_dir"], [39, 3, 1, "", "tvm_configs_dir"], [39, 3, 1, "", "tvm_pythonpath"], [39, 3, 1, "", "tvmc_custom_script"]], "mlonmcu.platform.tvm.tvm_build_platform": [[39, 1, 1, "", "TvmBuildPlatform"]], "mlonmcu.platform.tvm.tvm_build_platform.TvmBuildPlatform": [[39, 2, 1, "", "create_backend"], [39, 2, 1, "", "get_supported_backends"]], "mlonmcu.platform.tvm.tvm_rpc_platform": [[39, 1, 1, "", "TvmRpcPlatform"]], "mlonmcu.platform.tvm.tvm_rpc_platform.TvmRpcPlatform": [[39, 4, 1, "", "DEFAULTS"], [39, 4, 1, "", "FEATURES"], [39, 3, 1, "", "rpc_hostname"], [39, 3, 1, "", "rpc_key"], [39, 3, 1, "", "rpc_port"], [39, 3, 1, "", "use_rpc"]], "mlonmcu.platform.tvm.tvm_target": [[39, 5, 1, "", "create_tvm_platform_target"], [39, 5, 1, "", "name2device"]], "mlonmcu.platform.tvm.tvm_target_platform": [[39, 1, 1, "", "TvmTargetPlatform"]], "mlonmcu.platform.tvm.tvm_target_platform.TvmTargetPlatform": [[39, 4, 1, "", "DEFAULTS"], [39, 4, 1, "", "FEATURES"], [39, 4, 1, "", "REQUIRED"], [39, 3, 1, "", "aggregate"], [39, 2, 1, "", "create_target"], [39, 3, 1, "", "fill_mode"], [39, 2, 1, "", "flash"], [39, 2, 1, "", "get_supported_targets"], [39, 2, 1, "", "get_tvmc_run_args"], [39, 3, 1, "", "ins_file"], [39, 2, 1, "", "invoke_tvmc_run"], [39, 2, 1, "", "monitor"], [39, 3, 1, "", "number"], [39, 3, 1, "", "outs_file"], [39, 3, 1, "", "print_top"], [39, 3, 1, "", "profile"], [39, 3, 1, "", "repeat"], [39, 2, 1, "", "run"], [39, 3, 1, "", "total_time"]], "mlonmcu.platform.tvm.tvm_tune_platform": [[39, 1, 1, "", "TvmTunePlatform"]], "mlonmcu.platform.tvm.tvm_tune_platform.TvmTunePlatform": [[39, 4, 1, "", "DEFAULTS"], [39, 4, 1, "", "FEATURES"], [39, 4, 1, "", "REQUIRED"], [39, 3, 1, "", "enable_wandb"], [39, 3, 1, "", "experimental_tvmc_tune_tasks"], [39, 3, 1, "", "experimental_tvmc_tune_visualize"], [39, 2, 1, "", "get_autoscheduler_tune_args"], [39, 2, 1, "", "get_autotvm_tune_args"], [39, 2, 1, "", "get_metascheduler_tune_args"], [39, 2, 1, "", "get_tune_args"], [39, 2, 1, "", "invoke_tvmc_tune"], [39, 3, 1, "", "min_repeat_ms"], [39, 3, 1, "", "tune_tasks"]], "mlonmcu.platform.zephyr": [[40, 1, 1, "", "ZephyrPlatform"], [40, 0, 0, "-", "zephyr"], [40, 0, 0, "-", "zephyr_target"]], "mlonmcu.platform.zephyr.ZephyrPlatform": [[40, 4, 1, "", "DEFAULTS"], [40, 4, 1, "", "FEATURES"], [40, 4, 1, "", "REQUIRED"], [40, 3, 1, "", "baud"], [40, 3, 1, "", "build_dir"], [40, 2, 1, "", "close"], [40, 2, 1, "", "compile"], [40, 2, 1, "", "create_target"], [40, 2, 1, "", "flash"], [40, 3, 1, "", "flash_only"], [40, 2, 1, "", "generate"], [40, 2, 1, "", "get_serial"], [40, 2, 1, "", "get_supported_targets"], [40, 2, 1, "", "get_west_cmake_args"], [40, 2, 1, "", "init_directory"], [40, 2, 1, "", "invoke_west"], [40, 2, 1, "", "monitor"], [40, 3, 1, "", "optimize"], [40, 3, 1, "", "port"], [40, 2, 1, "", "prepare"], [40, 3, 1, "", "project_template"], [40, 3, 1, "", "wait_for_user"], [40, 3, 1, "", "zephyr_install_dir"], [40, 3, 1, "", "zephyr_sdk_dir"], [40, 3, 1, "", "zephyr_venv_dir"]], "mlonmcu.platform.zephyr.zephyr": [[40, 1, 1, "", "ZephyrPlatform"], [40, 5, 1, "", "get_project_template"]], "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform": [[40, 4, 1, "", "DEFAULTS"], [40, 4, 1, "", "FEATURES"], [40, 4, 1, "", "REQUIRED"], [40, 3, 1, "", "baud"], [40, 3, 1, "", "build_dir"], [40, 2, 1, "", "close"], [40, 2, 1, "", "compile"], [40, 2, 1, "", "create_target"], [40, 2, 1, "", "flash"], [40, 3, 1, "", "flash_only"], [40, 2, 1, "", "generate"], [40, 2, 1, "", "get_serial"], [40, 2, 1, "", "get_supported_targets"], [40, 2, 1, "", "get_west_cmake_args"], [40, 2, 1, "", "init_directory"], [40, 2, 1, "", "invoke_west"], [40, 2, 1, "", "monitor"], [40, 3, 1, "", "optimize"], [40, 3, 1, "", "port"], [40, 2, 1, "", "prepare"], [40, 3, 1, "", "project_template"], [40, 3, 1, "", "wait_for_user"], [40, 3, 1, "", "zephyr_install_dir"], [40, 3, 1, "", "zephyr_sdk_dir"], [40, 3, 1, "", "zephyr_venv_dir"]], "mlonmcu.platform.zephyr.zephyr_target": [[40, 5, 1, "", "create_zephyr_platform_target"]], "mlonmcu.plugins": [[23, 5, 1, "", "process_extensions"]], "mlonmcu.report": [[23, 1, 1, "", "Report"]], "mlonmcu.report.Report": [[23, 2, 1, "", "add"], [23, 3, 1, "", "df"], [23, 2, 1, "", "export"], [23, 2, 1, "", "set"], [23, 2, 1, "", "set_main"], [23, 2, 1, "", "set_post"], [23, 2, 1, "", "set_pre"]], "mlonmcu.session": [[42, 0, 0, "-", "postprocess"], [41, 0, 0, "-", "run"], [41, 0, 0, "-", "session"]], "mlonmcu.session.postprocess": [[42, 0, 0, "-", "postprocess"], [42, 0, 0, "-", "postprocesses"]], "mlonmcu.session.postprocess.postprocess": [[42, 1, 1, "", "Postprocess"], [42, 1, 1, "", "RunPostprocess"], [42, 1, 1, "", "SessionPostprocess"]], "mlonmcu.session.postprocess.postprocess.Postprocess": [[42, 4, 1, "", "DEFAULTS"], [42, 4, 1, "", "FEATURES"], [42, 4, 1, "", "OPTIONAL"], [42, 4, 1, "", "REQUIRED"], [42, 2, 1, "", "process_features"]], "mlonmcu.session.postprocess.postprocess.RunPostprocess": [[42, 2, 1, "", "post_run"]], "mlonmcu.session.postprocess.postprocess.SessionPostprocess": [[42, 2, 1, "", "post_session"]], "mlonmcu.session.postprocess.postprocesses": [[42, 1, 1, "", "AnalyseCoreVCountsPostprocess"], [42, 1, 1, "", "AnalyseDumpPostprocess"], [42, 1, 1, "", "AnalyseInstructionsPostprocess"], [42, 1, 1, "", "Artifact2ColumnPostprocess"], [42, 1, 1, "", "Bytes2kBPostprocess"], [42, 1, 1, "", "CompareRowsPostprocess"], [42, 1, 1, "", "Config2ColumnsPostprocess"], [42, 1, 1, "", "Features2ColumnsPostprocess"], [42, 1, 1, "", "FilterColumnsPostprocess"], [42, 1, 1, "", "MyPostprocess"], [42, 1, 1, "", "PassConfig2ColumnsPostprocess"], [42, 1, 1, "", "RenameColumnsPostprocess"], [42, 1, 1, "", "VisualizePostprocess"], [42, 5, 1, "", "match_rows"]], "mlonmcu.session.postprocess.postprocesses.AnalyseCoreVCountsPostprocess": [[42, 4, 1, "", "DEFAULTS"], [42, 2, 1, "", "post_run"], [42, 3, 1, "", "to_df"], [42, 3, 1, "", "to_file"]], "mlonmcu.session.postprocess.postprocesses.AnalyseDumpPostprocess": [[42, 4, 1, "", "DEFAULTS"], [42, 2, 1, "", "post_run"], [42, 3, 1, "", "to_df"], [42, 3, 1, "", "to_file"]], "mlonmcu.session.postprocess.postprocesses.AnalyseInstructionsPostprocess": [[42, 4, 1, "", "DEFAULTS"], [42, 3, 1, "", "groups"], [42, 2, 1, "", "post_run"], [42, 3, 1, "", "sequences"], [42, 3, 1, "", "to_df"], [42, 3, 1, "", "to_file"], [42, 3, 1, "", "top"]], "mlonmcu.session.postprocess.postprocesses.Artifact2ColumnPostprocess": [[42, 4, 1, "", "DEFAULTS"], [42, 3, 1, "", "file2colname"], [42, 2, 1, "", "post_run"]], "mlonmcu.session.postprocess.postprocesses.Bytes2kBPostprocess": [[42, 2, 1, "", "post_session"]], "mlonmcu.session.postprocess.postprocesses.CompareRowsPostprocess": [[42, 4, 1, "", "DEFAULTS"], [42, 3, 1, "", "baseline"], [42, 3, 1, "", "group_by"], [42, 3, 1, "", "invert"], [42, 3, 1, "", "percent"], [42, 2, 1, "", "post_session"], [42, 3, 1, "", "substract"], [42, 3, 1, "", "to_compare"]], "mlonmcu.session.postprocess.postprocesses.Config2ColumnsPostprocess": [[42, 4, 1, "", "DEFAULTS"], [42, 3, 1, "", "drop"], [42, 3, 1, "", "limit"], [42, 2, 1, "", "post_session"]], "mlonmcu.session.postprocess.postprocesses.Features2ColumnsPostprocess": [[42, 4, 1, "", "DEFAULTS"], [42, 3, 1, "", "drop"], [42, 3, 1, "", "limit"], [42, 2, 1, "", "post_session"]], "mlonmcu.session.postprocess.postprocesses.FilterColumnsPostprocess": [[42, 4, 1, "", "DEFAULTS"], [42, 3, 1, "", "drop"], [42, 3, 1, "", "drop_const"], [42, 3, 1, "", "drop_empty"], [42, 3, 1, "", "drop_nan"], [42, 3, 1, "", "keep"], [42, 2, 1, "", "post_session"]], "mlonmcu.session.postprocess.postprocesses.MyPostprocess": [[42, 4, 1, "", "DEFAULTS"], [42, 2, 1, "", "post_session"]], "mlonmcu.session.postprocess.postprocesses.PassConfig2ColumnsPostprocess": [[42, 2, 1, "", "post_session"]], "mlonmcu.session.postprocess.postprocesses.RenameColumnsPostprocess": [[42, 4, 1, "", "DEFAULTS"], [42, 3, 1, "", "mapping"], [42, 3, 1, "", "merge"], [42, 2, 1, "", "post_session"]], "mlonmcu.session.postprocess.postprocesses.VisualizePostprocess": [[42, 4, 1, "", "DEFAULTS"], [42, 3, 1, "", "format"], [42, 2, 1, "", "post_session"]], "mlonmcu.session.run": [[41, 1, 1, "", "Run"], [41, 1, 1, "", "RunStage"], [41, 5, 1, "", "add_any"]], "mlonmcu.session.run.Run": [[41, 4, 1, "", "DEFAULTS"], [41, 4, 1, "", "FEATURES"], [41, 4, 1, "", "OPTIONAL"], [41, 4, 1, "", "REQUIRED"], [41, 2, 1, "", "add_backend"], [41, 2, 1, "", "add_backend_by_name"], [41, 2, 1, "", "add_feature"], [41, 2, 1, "", "add_feature_by_name"], [41, 2, 1, "", "add_features"], [41, 2, 1, "", "add_features_by_name"], [41, 2, 1, "", "add_framework"], [41, 2, 1, "", "add_frontend"], [41, 2, 1, "", "add_frontend_by_name"], [41, 2, 1, "", "add_frontends"], [41, 2, 1, "", "add_frontends_by_name"], [41, 2, 1, "", "add_model"], [41, 2, 1, "", "add_model_by_name"], [41, 2, 1, "", "add_platform"], [41, 2, 1, "", "add_platform_by_name"], [41, 2, 1, "", "add_platforms"], [41, 2, 1, "", "add_platforms_by_name"], [41, 2, 1, "", "add_postprocess"], [41, 2, 1, "", "add_postprocess_by_name"], [41, 2, 1, "", "add_postprocesses"], [41, 2, 1, "", "add_postprocesses_by_name"], [41, 2, 1, "", "add_target"], [41, 2, 1, "", "add_target_by_name"], [41, 3, 1, "", "artifacts"], [41, 2, 1, "", "build"], [41, 3, 1, "", "build_platform"], [41, 2, 1, "", "compile"], [41, 3, 1, "", "compile_platform"], [41, 2, 1, "", "copy"], [41, 2, 1, "", "export"], [41, 3, 1, "", "export_optional"], [41, 2, 1, "", "export_stage"], [41, 2, 1, "", "from_file"], [41, 3, 1, "", "frontend"], [41, 2, 1, "", "get_all_configs"], [41, 2, 1, "", "get_all_feature_names"], [41, 2, 1, "", "get_all_postprocess_names"], [41, 2, 1, "", "get_all_sub_artifacts"], [41, 2, 1, "", "get_frontend_name"], [41, 2, 1, "", "get_platform_name"], [41, 2, 1, "", "get_reason_text"], [41, 2, 1, "", "get_report"], [41, 2, 1, "", "has_stage"], [41, 2, 1, "", "init_component"], [41, 2, 1, "", "init_directory"], [41, 3, 1, "", "last_stage"], [41, 2, 1, "", "load"], [41, 2, 1, "", "lock"], [41, 3, 1, "", "next_stage"], [41, 2, 1, "", "postprocess"], [41, 3, 1, "", "prefix"], [41, 2, 1, "", "process"], [41, 2, 1, "", "process_features"], [41, 2, 1, "", "run"], [41, 3, 1, "", "stage_subdirs"], [41, 3, 1, "", "target_optimized_layouts"], [41, 3, 1, "", "target_optimized_schedules"], [41, 3, 1, "", "target_platform"], [41, 3, 1, "", "target_to_backend"], [41, 2, 1, "", "toDict"], [41, 2, 1, "", "tune"], [41, 3, 1, "", "tune_enabled"], [41, 3, 1, "", "tune_platform"], [41, 2, 1, "", "unlock"], [41, 2, 1, "", "write_run_file"]], "mlonmcu.session.run.RunStage": [[41, 4, 1, "", "BUILD"], [41, 4, 1, "", "COMPILE"], [41, 4, 1, "", "DONE"], [41, 4, 1, "", "LOAD"], [41, 4, 1, "", "NOP"], [41, 4, 1, "", "POSTPROCESS"], [41, 4, 1, "", "RUN"], [41, 4, 1, "", "TUNE"]], "mlonmcu.session.session": [[41, 1, 1, "", "Session"], [41, 1, 1, "", "SessionStatus"]], "mlonmcu.session.session.Session": [[41, 4, 1, "", "DEFAULTS"], [41, 3, 1, "", "active"], [41, 2, 1, "", "close"], [41, 2, 1, "", "create_run"], [41, 2, 1, "", "discard"], [41, 2, 1, "", "enumerate_runs"], [41, 3, 1, "", "failing"], [41, 2, 1, "", "get_reports"], [41, 2, 1, "", "open"], [41, 3, 1, "", "prefix"], [41, 2, 1, "", "process_runs"], [41, 3, 1, "", "report_fmt"], [41, 2, 1, "", "request_run_idx"], [41, 3, 1, "", "runs_dir"], [41, 2, 1, "", "update_latest_run_symlink"]], "mlonmcu.session.session.SessionStatus": [[41, 4, 1, "", "CLOSED"], [41, 4, 1, "", "CREATED"], [41, 4, 1, "", "ERROR"], [41, 4, 1, "", "OPEN"]], "mlonmcu.setup": [[43, 0, 0, "-", "cache"], [43, 0, 0, "-", "gen_requirements"], [43, 0, 0, "-", "setup"], [43, 0, 0, "-", "task"], [44, 0, 0, "-", "tasks"], [43, 0, 0, "-", "utils"]], "mlonmcu.setup.cache": [[43, 1, 1, "", "TaskCache"], [43, 5, 1, "", "convert_key"]], "mlonmcu.setup.cache.TaskCache": [[43, 2, 1, "", "find_best_match"], [43, 2, 1, "", "read_from_file"], [43, 2, 1, "", "write_to_file"]], "mlonmcu.setup.gen_requirements": [[43, 6, 1, "", "ValidationError"], [43, 5, 1, "", "join_and_write_requirements"], [43, 5, 1, "", "join_requirements"], [43, 5, 1, "", "main"], [43, 5, 1, "", "parse_args"], [43, 5, 1, "", "parse_semver"], [43, 5, 1, "", "semver_to_requirements"], [43, 5, 1, "", "validate_constraints"], [43, 5, 1, "", "validate_or_raise"], [43, 5, 1, "", "validate_requirements_by_piece"]], "mlonmcu.setup.gen_requirements.ValidationError": [[43, 2, 1, "", "format_problems"]], "mlonmcu.setup.setup": [[43, 1, 1, "", "Setup"]], "mlonmcu.setup.setup.Setup": [[43, 4, 1, "", "DEFAULTS"], [43, 4, 1, "", "FEATURES"], [43, 4, 1, "", "OPTIONAL"], [43, 4, 1, "", "REQUIRED"], [43, 2, 1, "", "clean_cache"], [43, 2, 1, "", "clean_dependencies"], [43, 2, 1, "", "generate_requirements"], [43, 2, 1, "", "get_dependency_order"], [43, 2, 1, "", "install_dependencies"], [43, 2, 1, "", "invoke_single_task"], [43, 2, 1, "", "process_features"], [43, 2, 1, "", "setup_progress_bar"], [43, 3, 1, "", "verbose"], [43, 2, 1, "", "visualize"], [43, 2, 1, "", "write_cache_file"], [43, 2, 1, "", "write_env_file"]], "mlonmcu.setup.task": [[43, 1, 1, "", "TaskFactory"], [43, 1, 1, "", "TaskGraph"], [43, 1, 1, "", "TaskType"], [43, 5, 1, "", "get_combs"]], "mlonmcu.setup.task.TaskFactory": [[43, 2, 1, "", "needs"], [43, 2, 1, "", "optional"], [43, 2, 1, "", "param"], [43, 2, 1, "", "provides"], [43, 2, 1, "", "register"], [43, 2, 1, "", "removes"], [43, 2, 1, "", "reset_changes"], [43, 2, 1, "", "validate"]], "mlonmcu.setup.task.TaskGraph": [[43, 2, 1, "", "export_dot"], [43, 2, 1, "", "get_graph"], [43, 2, 1, "", "get_order"]], "mlonmcu.setup.task.TaskType": [[43, 4, 1, "", "BACKEND"], [43, 4, 1, "", "FEATURE"], [43, 4, 1, "", "FRAMEWORK"], [43, 4, 1, "", "FRONTEND"], [43, 4, 1, "", "MISC"], [43, 4, 1, "", "OPT"], [43, 4, 1, "", "PLATFORM"], [43, 4, 1, "", "TARGET"], [43, 4, 1, "", "TOOLCHAIN"]], "mlonmcu.setup.tasks": [[44, 0, 0, "-", "ara"], [44, 0, 0, "-", "arm_gcc"], [44, 0, 0, "-", "benchmarks"], [44, 0, 0, "-", "cmsisnn"], [44, 0, 0, "-", "common"], [44, 0, 0, "-", "corev"], [44, 0, 0, "-", "corstone300"], [44, 0, 0, "-", "cv32e40p"], [44, 0, 0, "-", "dtc"], [44, 0, 0, "-", "espidf"], [44, 0, 0, "-", "etiss"], [44, 5, 1, "", "get_task_factory"], [44, 0, 0, "-", "layergen"], [44, 0, 0, "-", "llvm"], [44, 0, 0, "-", "mlif"], [44, 0, 0, "-", "muriscvnn"], [44, 0, 0, "-", "ovpsim"], [44, 0, 0, "-", "pulp"], [44, 0, 0, "-", "riscv_gcc"], [44, 0, 0, "-", "spike"], [44, 0, 0, "-", "srecord"], [44, 0, 0, "-", "tf"], [44, 0, 0, "-", "tflite"], [44, 0, 0, "-", "tflmc"], [44, 0, 0, "-", "tvm"], [44, 0, 0, "-", "utvmcg"], [44, 0, 0, "-", "verilator"], [44, 0, 0, "-", "vicuna"], [44, 0, 0, "-", "zephyr"]], "mlonmcu.setup.tasks.ara": [[44, 5, 1, "", "clone_ara"]], "mlonmcu.setup.tasks.arm_gcc": [[44, 5, 1, "", "install_arm_gcc"]], "mlonmcu.setup.tasks.benchmarks": [[44, 5, 1, "", "clone_benchmarks"]], "mlonmcu.setup.tasks.cmsisnn": [[44, 5, 1, "", "clone_cmsis"], [44, 5, 1, "", "clone_cmsisnn"], [44, 5, 1, "", "clone_ethosu_platform"]], "mlonmcu.setup.tasks.common": [[44, 5, 1, "", "get_task_factory"]], "mlonmcu.setup.tasks.corev": [[44, 5, 1, "", "clone_corevverif"]], "mlonmcu.setup.tasks.corstone300": [[44, 5, 1, "", "install_corstone300"]], "mlonmcu.setup.tasks.cv32e40p": [[44, 5, 1, "", "build_cv32e40p"], [44, 5, 1, "", "clone_cv32e40p"]], "mlonmcu.setup.tasks.dtc": [[44, 5, 1, "", "build_dtc"], [44, 5, 1, "", "clone_dtc"]], "mlonmcu.setup.tasks.espidf": [[44, 5, 1, "", "clone_espidf"], [44, 5, 1, "", "install_espidf"]], "mlonmcu.setup.tasks.etiss": [[44, 5, 1, "", "build_etiss"], [44, 5, 1, "", "clean_etiss"], [44, 5, 1, "", "clone_etiss"], [44, 5, 1, "", "clone_etiss_accelerator_plugins"], [44, 5, 1, "", "clone_microtvm_etiss"], [44, 5, 1, "", "install_etiss"]], "mlonmcu.setup.tasks.layergen": [[44, 5, 1, "", "clone_layergen"]], "mlonmcu.setup.tasks.llvm": [[44, 5, 1, "", "install_llvm"]], "mlonmcu.setup.tasks.mlif": [[44, 5, 1, "", "clone_mlif"]], "mlonmcu.setup.tasks.muriscvnn": [[44, 5, 1, "", "build_muriscvnn"], [44, 5, 1, "", "clone_muriscvnn"]], "mlonmcu.setup.tasks.ovpsim": [[44, 5, 1, "", "install_corev_ovpsim"]], "mlonmcu.setup.tasks.pulp": [[44, 5, 1, "", "clone_pulp_freertos"], [44, 5, 1, "", "install_gvsoc"], [44, 5, 1, "", "install_pulp_gcc"]], "mlonmcu.setup.tasks.riscv_gcc": [[44, 5, 1, "", "check_multilibs"], [44, 5, 1, "", "install_riscv_gcc"]], "mlonmcu.setup.tasks.spike": [[44, 5, 1, "", "build_spike"], [44, 5, 1, "", "build_spike_pk"], [44, 5, 1, "", "clean_spike"], [44, 5, 1, "", "clone_microtvm_spike"], [44, 5, 1, "", "clone_spike"], [44, 5, 1, "", "clone_spike_pk"]], "mlonmcu.setup.tasks.srecord": [[44, 5, 1, "", "build_srecord"], [44, 5, 1, "", "clone_srecord"]], "mlonmcu.setup.tasks.tf": [[44, 5, 1, "", "build_tensorflow"], [44, 5, 1, "", "clone_tensorflow"], [44, 5, 1, "", "clone_tflite_pack"], [44, 5, 1, "", "install_tflite_pack"]], "mlonmcu.setup.tasks.tflite": [[44, 5, 1, "", "download_tflite_vizualize"]], "mlonmcu.setup.tasks.tflmc": [[44, 5, 1, "", "build_tflite_micro_compiler"], [44, 5, 1, "", "clone_tflite_micro_compiler"]], "mlonmcu.setup.tasks.tvm": [[44, 5, 1, "", "build_tvm"], [44, 5, 1, "", "clone_tvm"], [44, 5, 1, "", "clone_tvm_extensions"], [44, 5, 1, "", "install_tvm"], [44, 5, 1, "", "requires_patch"]], "mlonmcu.setup.tasks.utvmcg": [[44, 5, 1, "", "build_utvm_staticrt_codegen"], [44, 5, 1, "", "clone_utvm_staticrt_codegen"]], "mlonmcu.setup.tasks.verilator": [[44, 5, 1, "", "build_verilator"], [44, 5, 1, "", "clone_verilator"], [44, 5, 1, "", "install_verilator"]], "mlonmcu.setup.tasks.vicuna": [[44, 5, 1, "", "clone_vicuna"]], "mlonmcu.setup.tasks.zephyr": [[44, 5, 1, "", "install_zephyr"]], "mlonmcu.setup.utils": [[43, 5, 1, "", "apply"], [43, 5, 1, "", "clone"], [43, 5, 1, "", "clone_wrapper"], [43, 5, 1, "", "cmake"], [43, 5, 1, "", "copy"], [43, 5, 1, "", "download"], [43, 5, 1, "", "download_and_extract"], [43, 5, 1, "", "exec"], [43, 5, 1, "", "exec_getout"], [43, 5, 1, "", "extract"], [43, 5, 1, "", "is_populated"], [43, 5, 1, "", "make"], [43, 5, 1, "", "makeDirName"], [43, 5, 1, "", "makeFlags"], [43, 5, 1, "", "mkdirs"], [43, 5, 1, "", "move"], [43, 5, 1, "", "patch"], [43, 5, 1, "", "python"], [43, 5, 1, "", "remove"], [43, 5, 1, "", "symlink"]], "mlonmcu.target": [[45, 1, 1, "", "Corstone300Target"], [45, 1, 1, "", "EtissPulpinoTarget"], [45, 1, 1, "", "HostX86Target"], [45, 1, 1, "", "OVPSimTarget"], [45, 1, 1, "", "RiscvQemuTarget"], [45, 1, 1, "", "SpikeTarget"], [45, 1, 1, "", "Target"], [46, 0, 0, "-", "arm"], [45, 0, 0, "-", "bench"], [45, 0, 0, "-", "common"], [45, 0, 0, "-", "elf"], [45, 5, 1, "", "get_targets"], [45, 0, 0, "-", "host_x86"], [45, 0, 0, "-", "metrics"], [45, 5, 1, "", "register_target"], [47, 0, 0, "-", "riscv"], [45, 0, 0, "-", "target"]], "mlonmcu.target.Corstone300Target": [[45, 4, 1, "", "DEFAULTS"], [45, 4, 1, "", "FEATURES"], [45, 4, 1, "", "REQUIRED"], [45, 3, 1, "", "cmsis_dir"], [45, 3, 1, "", "cmsisnn_dir"], [45, 3, 1, "", "enable_dsp"], [45, 3, 1, "", "enable_ethosu"], [45, 3, 1, "", "enable_fpu"], [45, 3, 1, "", "enable_mvei"], [45, 3, 1, "", "ethosu_num_macs"], [45, 3, 1, "", "ethosu_platform_dir"], [45, 2, 1, "", "exec"], [45, 3, 1, "", "extra_args"], [45, 3, 1, "", "fvp_exe"], [45, 3, 1, "", "gcc_prefix"], [45, 2, 1, "", "get_arch"], [45, 2, 1, "", "get_backend_config"], [45, 2, 1, "", "get_default_fvp_args"], [45, 2, 1, "", "get_ethosu_fvp_args"], [45, 2, 1, "", "get_metrics"], [45, 2, 1, "", "get_platform_defs"], [45, 3, 1, "", "model"], [45, 2, 1, "", "parse_stdout"], [45, 3, 1, "", "timeout_sec"]], "mlonmcu.target.EtissPulpinoTarget": [[45, 4, 1, "", "REQUIRED"], [45, 2, 1, "", "get_ini_bool_config"], [45, 2, 1, "", "get_platform_defs"]], "mlonmcu.target.HostX86Target": [[45, 4, 1, "", "DEFAULTS"], [45, 4, 1, "", "FEATURES"], [45, 2, 1, "", "exec"], [45, 3, 1, "", "gdbserver_attach"], [45, 3, 1, "", "gdbserver_enable"], [45, 3, 1, "", "gdbserver_port"], [45, 2, 1, "", "get_arch"]], "mlonmcu.target.OVPSimTarget": [[45, 4, 1, "", "DEFAULTS"], [45, 4, 1, "", "FEATURES"], [45, 4, 1, "", "REQUIRED"], [45, 3, 1, "", "attr"], [45, 3, 1, "", "elen"], [45, 3, 1, "", "embedded_vext"], [45, 3, 1, "", "enable_pext"], [45, 3, 1, "", "enable_vext"], [45, 3, 1, "", "end_to_end_cycles"], [45, 2, 1, "", "exec"], [45, 3, 1, "", "extensions"], [45, 3, 1, "", "gdbserver_attach"], [45, 3, 1, "", "gdbserver_enable"], [45, 3, 1, "", "gdbserver_port"], [45, 2, 1, "", "get_backend_config"], [45, 2, 1, "", "get_default_ovpsim_args"], [45, 2, 1, "", "get_metrics"], [45, 2, 1, "", "get_platform_defs"], [45, 3, 1, "", "ovpsim_exe"], [45, 2, 1, "", "parse_stdout"], [45, 3, 1, "", "pext_spec"], [45, 3, 1, "", "variant"], [45, 3, 1, "", "vext_spec"], [45, 3, 1, "", "vlen"]], "mlonmcu.target.RiscvQemuTarget": [[45, 4, 1, "", "DEFAULTS"], [45, 4, 1, "", "FEATURES"], [45, 4, 1, "", "REQUIRED"], [45, 3, 1, "", "attr"], [45, 3, 1, "", "elen"], [45, 3, 1, "", "embedded_vext"], [45, 3, 1, "", "enable_vext"], [45, 2, 1, "", "exec"], [45, 3, 1, "", "extensions"], [45, 2, 1, "", "get_cpu_str"], [45, 2, 1, "", "get_metrics"], [45, 2, 1, "", "get_platform_defs"], [45, 2, 1, "", "get_qemu_args"], [45, 2, 1, "", "get_target_system"], [45, 2, 1, "", "parse_stdout"], [45, 3, 1, "", "riscv32_qemu_exe"], [45, 3, 1, "", "vext_spec"], [45, 3, 1, "", "vlen"]], "mlonmcu.target.SpikeTarget": [[45, 4, 1, "", "DEFAULTS"], [45, 4, 1, "", "FEATURES"], [45, 4, 1, "", "REQUIRED"], [45, 2, 1, "", "exec"], [45, 3, 1, "", "extensions"], [45, 2, 1, "", "get_backend_config"], [45, 2, 1, "", "get_metrics"], [45, 2, 1, "", "get_platform_defs"], [45, 3, 1, "", "isa"], [45, 2, 1, "", "parse_stdout"], [45, 3, 1, "", "spike_exe"], [45, 3, 1, "", "spike_pk"], [45, 3, 1, "", "spikepk_extra_args"]], "mlonmcu.target.Target": [[45, 4, 1, "", "DEFAULTS"], [45, 4, 1, "", "FEATURES"], [45, 4, 1, "", "OPTIONAL"], [45, 4, 1, "", "REQUIRED"], [45, 2, 1, "", "add_backend_config"], [45, 2, 1, "", "add_platform_config"], [45, 2, 1, "", "add_platform_defs"], [45, 2, 1, "", "exec"], [45, 2, 1, "", "export_artifacts"], [45, 2, 1, "", "generate"], [45, 2, 1, "", "generate_artifacts"], [45, 2, 1, "", "get_arch"], [45, 2, 1, "", "get_backend_config"], [45, 2, 1, "", "get_hardware_details"], [45, 2, 1, "", "get_metrics"], [45, 2, 1, "", "get_platform_config"], [45, 2, 1, "", "get_platform_defs"], [45, 2, 1, "", "get_target_system"], [45, 2, 1, "", "inspect"], [45, 2, 1, "", "parse_exit"], [45, 3, 1, "", "print_outputs"], [45, 2, 1, "", "process_features"], [45, 2, 1, "", "reconfigure"], [45, 3, 1, "", "repeat"]], "mlonmcu.target.arm": [[46, 1, 1, "", "Corstone300Target"], [46, 0, 0, "-", "corstone300"], [46, 0, 0, "-", "util"]], "mlonmcu.target.arm.Corstone300Target": [[46, 4, 1, "", "DEFAULTS"], [46, 4, 1, "", "FEATURES"], [46, 4, 1, "", "REQUIRED"], [46, 3, 1, "", "cmsis_dir"], [46, 3, 1, "", "cmsisnn_dir"], [46, 3, 1, "", "enable_dsp"], [46, 3, 1, "", "enable_ethosu"], [46, 3, 1, "", "enable_fpu"], [46, 3, 1, "", "enable_mvei"], [46, 3, 1, "", "ethosu_num_macs"], [46, 3, 1, "", "ethosu_platform_dir"], [46, 2, 1, "", "exec"], [46, 3, 1, "", "extra_args"], [46, 3, 1, "", "fvp_exe"], [46, 3, 1, "", "gcc_prefix"], [46, 2, 1, "", "get_arch"], [46, 2, 1, "", "get_backend_config"], [46, 2, 1, "", "get_default_fvp_args"], [46, 2, 1, "", "get_ethosu_fvp_args"], [46, 2, 1, "", "get_metrics"], [46, 2, 1, "", "get_platform_defs"], [46, 3, 1, "", "model"], [46, 2, 1, "", "parse_stdout"], [46, 3, 1, "", "timeout_sec"]], "mlonmcu.target.arm.corstone300": [[46, 1, 1, "", "Corstone300Target"]], "mlonmcu.target.arm.corstone300.Corstone300Target": [[46, 4, 1, "", "DEFAULTS"], [46, 4, 1, "", "FEATURES"], [46, 4, 1, "", "REQUIRED"], [46, 3, 1, "", "cmsis_dir"], [46, 3, 1, "", "cmsisnn_dir"], [46, 3, 1, "", "enable_dsp"], [46, 3, 1, "", "enable_ethosu"], [46, 3, 1, "", "enable_fpu"], [46, 3, 1, "", "enable_mvei"], [46, 3, 1, "", "ethosu_num_macs"], [46, 3, 1, "", "ethosu_platform_dir"], [46, 2, 1, "", "exec"], [46, 3, 1, "", "extra_args"], [46, 3, 1, "", "fvp_exe"], [46, 3, 1, "", "gcc_prefix"], [46, 2, 1, "", "get_arch"], [46, 2, 1, "", "get_backend_config"], [46, 2, 1, "", "get_default_fvp_args"], [46, 2, 1, "", "get_ethosu_fvp_args"], [46, 2, 1, "", "get_metrics"], [46, 2, 1, "", "get_platform_defs"], [46, 3, 1, "", "model"], [46, 2, 1, "", "parse_stdout"], [46, 3, 1, "", "timeout_sec"]], "mlonmcu.target.arm.util": [[46, 5, 1, "", "resolve_cpu_features"]], "mlonmcu.target.bench": [[45, 5, 1, "", "add_bench_metrics"], [45, 5, 1, "", "parse_bench_results"]], "mlonmcu.target.common": [[45, 5, 1, "", "add_common_options"], [45, 5, 1, "", "cli"], [45, 5, 1, "", "execute"], [45, 5, 1, "", "init_target_features"]], "mlonmcu.target.elf": [[45, 5, 1, "", "get_results"], [45, 7, 1, "", "logger"], [45, 5, 1, "", "main"], [45, 5, 1, "", "parseElf"], [45, 5, 1, "", "parse_cmdline"], [45, 5, 1, "", "printSz"], [45, 5, 1, "", "print_results"], [45, 5, 1, "", "write_csv"]], "mlonmcu.target.host_x86": [[45, 1, 1, "", "HostX86Target"]], "mlonmcu.target.host_x86.HostX86Target": [[45, 4, 1, "", "DEFAULTS"], [45, 4, 1, "", "FEATURES"], [45, 2, 1, "", "exec"], [45, 3, 1, "", "gdbserver_attach"], [45, 3, 1, "", "gdbserver_enable"], [45, 3, 1, "", "gdbserver_port"], [45, 2, 1, "", "get_arch"]], "mlonmcu.target.metrics": [[45, 1, 1, "", "Metrics"]], "mlonmcu.target.metrics.Metrics": [[45, 2, 1, "", "add"], [45, 2, 1, "", "from_csv"], [45, 2, 1, "", "get"], [45, 2, 1, "", "get_data"], [45, 2, 1, "", "has"], [45, 2, 1, "", "to_csv"]], "mlonmcu.target.riscv": [[47, 1, 1, "", "AraRtlTarget"], [47, 1, 1, "", "AraTarget"], [47, 1, 1, "", "COREVOVPSimTarget"], [47, 1, 1, "", "CV32E40PTarget"], [47, 1, 1, "", "EtissPulpinoTarget"], [47, 1, 1, "", "EtissTarget"], [47, 1, 1, "", "GvsocPulpTarget"], [47, 1, 1, "", "OVPSimTarget"], [47, 1, 1, "", "RiscvQemuTarget"], [47, 1, 1, "", "SpikeTarget"], [47, 1, 1, "", "VicunaTarget"], [47, 0, 0, "-", "ara"], [47, 0, 0, "-", "ara_rtl"], [47, 0, 0, "-", "corev_ovpsim"], [47, 0, 0, "-", "cv32e40p"], [47, 0, 0, "-", "etiss"], [47, 0, 0, "-", "etiss_pulpino"], [47, 0, 0, "-", "gvsoc_pulp"], [47, 0, 0, "-", "ovpsim"], [47, 0, 0, "-", "riscv"], [47, 0, 0, "-", "riscv_bext_target"], [47, 0, 0, "-", "riscv_pext_target"], [47, 0, 0, "-", "riscv_qemu"], [47, 0, 0, "-", "riscv_vext_target"], [47, 0, 0, "-", "spike"], [47, 0, 0, "-", "util"], [47, 0, 0, "-", "vicuna"]], "mlonmcu.target.riscv.AraRtlTarget": [[47, 4, 1, "", "DEFAULTS"], [47, 4, 1, "", "FEATURES"], [47, 4, 1, "", "OPTIONAL"], [47, 4, 1, "", "REQUIRED"], [47, 3, 1, "", "ara_apps_dir"], [47, 3, 1, "", "ara_hardware_dir"], [47, 3, 1, "", "elen"], [47, 3, 1, "", "embedded_vext"], [47, 3, 1, "", "enable_vext"], [47, 2, 1, "", "exec"], [47, 3, 1, "", "extensions"], [47, 2, 1, "", "get_backend_config"], [47, 2, 1, "", "get_metrics"], [47, 2, 1, "", "get_platform_defs"], [47, 2, 1, "", "get_target_system"], [47, 3, 1, "", "limit_cycles"], [47, 3, 1, "", "nr_lanes"], [47, 3, 1, "", "num_threads"], [47, 2, 1, "", "parse_exit"], [47, 2, 1, "", "parse_stdout"], [47, 2, 1, "", "prepare_simulator"], [47, 3, 1, "", "questasim_install_dir"], [47, 3, 1, "", "spike_install_dir"], [47, 3, 1, "", "verilator_install_dir"], [47, 3, 1, "", "vext_spec"], [47, 3, 1, "", "vlen"]], "mlonmcu.target.riscv.AraTarget": [[47, 4, 1, "", "DEFAULTS"], [47, 4, 1, "", "FEATURES"], [47, 4, 1, "", "OPTIONAL"], [47, 4, 1, "", "REQUIRED"], [47, 3, 1, "", "ara_apps_dir"], [47, 3, 1, "", "ara_hardware_dir"], [47, 3, 1, "", "ara_verilator_tb"], [47, 3, 1, "", "elen"], [47, 3, 1, "", "embedded_vext"], [47, 3, 1, "", "enable_vext"], [47, 2, 1, "", "exec"], [47, 3, 1, "", "extensions"], [47, 2, 1, "", "get_backend_config"], [47, 2, 1, "", "get_metrics"], [47, 2, 1, "", "get_platform_defs"], [47, 2, 1, "", "get_target_system"], [47, 3, 1, "", "limit_cycles"], [47, 3, 1, "", "nr_lanes"], [47, 3, 1, "", "num_threads"], [47, 2, 1, "", "parse_exit"], [47, 2, 1, "", "parse_stdout"], [47, 2, 1, "", "prepare_simulator"], [47, 3, 1, "", "verilator_install_dir"], [47, 3, 1, "", "vext_spec"], [47, 3, 1, "", "vlen"]], "mlonmcu.target.riscv.COREVOVPSimTarget": [[47, 4, 1, "", "DEFAULTS"], [47, 4, 1, "", "FEATURES"], [47, 4, 1, "", "REQUIRED"], [47, 3, 1, "", "attr"], [47, 3, 1, "", "enable_xcorevalu"], [47, 3, 1, "", "enable_xcorevbi"], [47, 3, 1, "", "enable_xcorevbitmanip"], [47, 3, 1, "", "enable_xcorevhwlp"], [47, 3, 1, "", "enable_xcorevmac"], [47, 3, 1, "", "enable_xcorevmem"], [47, 3, 1, "", "enable_xcorevsimd"], [47, 3, 1, "", "end_to_end_cycles"], [47, 2, 1, "", "exec"], [47, 3, 1, "", "extensions"], [47, 3, 1, "", "gdbserver_attach"], [47, 3, 1, "", "gdbserver_enable"], [47, 3, 1, "", "gdbserver_port"], [47, 2, 1, "", "get_backend_config"], [47, 2, 1, "", "get_default_ovpsim_args"], [47, 2, 1, "", "get_metrics"], [47, 2, 1, "", "get_platform_defs"], [47, 3, 1, "", "ovpsim_exe"], [47, 2, 1, "", "parse_exit"], [47, 2, 1, "", "parse_stdout"], [47, 3, 1, "", "processor"], [47, 3, 1, "", "variant"]], "mlonmcu.target.riscv.CV32E40PTarget": [[47, 4, 1, "", "DEFAULTS"], [47, 4, 1, "", "FEATURES"], [47, 4, 1, "", "REQUIRED"], [47, 3, 1, "", "attr"], [47, 3, 1, "", "enable_xcorevalu"], [47, 3, 1, "", "enable_xcorevbi"], [47, 3, 1, "", "enable_xcorevbitmanip"], [47, 3, 1, "", "enable_xcorevhwlp"], [47, 3, 1, "", "enable_xcorevmac"], [47, 3, 1, "", "enable_xcorevmem"], [47, 3, 1, "", "enable_xcorevsimd"], [47, 2, 1, "", "exec"], [47, 3, 1, "", "extensions"], [47, 2, 1, "", "get_backend_config"], [47, 2, 1, "", "get_metrics"], [47, 2, 1, "", "get_platform_defs"], [47, 2, 1, "", "get_target_system"], [47, 2, 1, "", "parse_exit"], [47, 2, 1, "", "parse_stdout"], [47, 3, 1, "", "verilator_executable"]], "mlonmcu.target.riscv.EtissPulpinoTarget": [[47, 4, 1, "", "REQUIRED"], [47, 2, 1, "", "get_ini_bool_config"], [47, 2, 1, "", "get_platform_defs"]], "mlonmcu.target.riscv.EtissTarget": [[47, 4, 1, "", "DEFAULTS"], [47, 4, 1, "", "FEATURES"], [47, 4, 1, "", "REQUIRED"], [47, 3, 1, "", "allow_error"], [47, 3, 1, "", "attr"], [47, 3, 1, "", "cpu_arch"], [47, 3, 1, "", "cycle_time_ps"], [47, 3, 1, "", "debug_etiss"], [47, 3, 1, "", "elen"], [47, 3, 1, "", "embedded_vext"], [47, 3, 1, "", "enable_pext"], [47, 3, 1, "", "enable_vext"], [47, 3, 1, "", "enable_xcorevalu"], [47, 3, 1, "", "enable_xcorevbi"], [47, 3, 1, "", "enable_xcorevbitmanip"], [47, 3, 1, "", "enable_xcorevhwlp"], [47, 3, 1, "", "enable_xcorevmac"], [47, 3, 1, "", "enable_xcorevmem"], [47, 3, 1, "", "enable_xcorevsimd"], [47, 3, 1, "", "etiss_dir"], [47, 3, 1, "", "etiss_script"], [47, 3, 1, "", "etiss_src_dir"], [47, 2, 1, "", "exec"], [47, 3, 1, "", "extensions"], [47, 3, 1, "", "extra_bool_config"], [47, 3, 1, "", "extra_int_config"], [47, 3, 1, "", "extra_plugin_config"], [47, 3, 1, "", "extra_string_config"], [47, 3, 1, "", "gdbserver_attach"], [47, 3, 1, "", "gdbserver_enable"], [47, 3, 1, "", "gdbserver_port"], [47, 2, 1, "", "get_backend_config"], [47, 2, 1, "", "get_ini_bool_config"], [47, 2, 1, "", "get_ini_int_config"], [47, 2, 1, "", "get_ini_plugin_config"], [47, 2, 1, "", "get_ini_string_config"], [47, 2, 1, "", "get_metrics"], [47, 2, 1, "", "get_platform_defs"], [47, 2, 1, "", "get_target_system"], [47, 3, 1, "", "jit"], [47, 3, 1, "", "max_block_size"], [47, 2, 1, "", "parse_exit"], [47, 2, 1, "", "parse_stdout"], [47, 3, 1, "", "pext_spec"], [47, 3, 1, "", "plugins"], [47, 3, 1, "", "ram_size"], [47, 3, 1, "", "ram_start"], [47, 3, 1, "", "rom_size"], [47, 3, 1, "", "rom_start"], [47, 3, 1, "", "trace_memory"], [47, 3, 1, "", "verbose"], [47, 3, 1, "", "vext_spec"], [47, 3, 1, "", "vlen"], [47, 2, 1, "", "write_ini"]], "mlonmcu.target.riscv.GvsocPulpTarget": [[47, 4, 1, "", "DEFAULTS"], [47, 4, 1, "", "FEATURES"], [47, 4, 1, "", "REQUIRED"], [47, 3, 1, "", "abi"], [47, 2, 1, "", "exec"], [47, 3, 1, "", "extensions"], [47, 2, 1, "", "get_backend_config"], [47, 2, 1, "", "get_basic_gvsoc_simulating_arg"], [47, 2, 1, "", "get_metrics"], [47, 2, 1, "", "get_platform_defs"], [47, 2, 1, "", "get_target_system"], [47, 3, 1, "", "gvsoc_folder"], [47, 2, 1, "", "gvsoc_preparation_env"], [47, 3, 1, "", "gvsoc_script"], [47, 3, 1, "", "model"], [47, 2, 1, "", "parse_stdout"], [47, 3, 1, "", "pulp_freertos_config_dir"], [47, 3, 1, "", "pulp_freertos_install_dir"], [47, 3, 1, "", "pulp_freertos_support_dir"], [47, 3, 1, "", "xpulp_version"]], "mlonmcu.target.riscv.OVPSimTarget": [[47, 4, 1, "", "DEFAULTS"], [47, 4, 1, "", "FEATURES"], [47, 4, 1, "", "REQUIRED"], [47, 3, 1, "", "attr"], [47, 3, 1, "", "elen"], [47, 3, 1, "", "embedded_vext"], [47, 3, 1, "", "enable_pext"], [47, 3, 1, "", "enable_vext"], [47, 3, 1, "", "end_to_end_cycles"], [47, 2, 1, "", "exec"], [47, 3, 1, "", "extensions"], [47, 3, 1, "", "gdbserver_attach"], [47, 3, 1, "", "gdbserver_enable"], [47, 3, 1, "", "gdbserver_port"], [47, 2, 1, "", "get_backend_config"], [47, 2, 1, "", "get_default_ovpsim_args"], [47, 2, 1, "", "get_metrics"], [47, 2, 1, "", "get_platform_defs"], [47, 3, 1, "", "ovpsim_exe"], [47, 2, 1, "", "parse_stdout"], [47, 3, 1, "", "pext_spec"], [47, 3, 1, "", "variant"], [47, 3, 1, "", "vext_spec"], [47, 3, 1, "", "vlen"]], "mlonmcu.target.riscv.RiscvQemuTarget": [[47, 4, 1, "", "DEFAULTS"], [47, 4, 1, "", "FEATURES"], [47, 4, 1, "", "REQUIRED"], [47, 3, 1, "", "attr"], [47, 3, 1, "", "elen"], [47, 3, 1, "", "embedded_vext"], [47, 3, 1, "", "enable_vext"], [47, 2, 1, "", "exec"], [47, 3, 1, "", "extensions"], [47, 2, 1, "", "get_cpu_str"], [47, 2, 1, "", "get_metrics"], [47, 2, 1, "", "get_platform_defs"], [47, 2, 1, "", "get_qemu_args"], [47, 2, 1, "", "get_target_system"], [47, 2, 1, "", "parse_stdout"], [47, 3, 1, "", "riscv32_qemu_exe"], [47, 3, 1, "", "vext_spec"], [47, 3, 1, "", "vlen"]], "mlonmcu.target.riscv.SpikeTarget": [[47, 4, 1, "", "DEFAULTS"], [47, 4, 1, "", "FEATURES"], [47, 4, 1, "", "REQUIRED"], [47, 2, 1, "", "exec"], [47, 3, 1, "", "extensions"], [47, 2, 1, "", "get_backend_config"], [47, 2, 1, "", "get_metrics"], [47, 2, 1, "", "get_platform_defs"], [47, 3, 1, "", "isa"], [47, 2, 1, "", "parse_stdout"], [47, 3, 1, "", "spike_exe"], [47, 3, 1, "", "spike_pk"], [47, 3, 1, "", "spikepk_extra_args"]], "mlonmcu.target.riscv.VicunaTarget": [[47, 4, 1, "", "DEFAULTS"], [47, 4, 1, "", "FEATURES"], [47, 4, 1, "", "REQUIRED"], [47, 3, 1, "", "core"], [47, 3, 1, "", "dc_line_width"], [47, 3, 1, "", "dc_size"], [47, 2, 1, "", "exec"], [47, 2, 1, "", "get_backend_config"], [47, 2, 1, "", "get_config_args"], [47, 2, 1, "", "get_metrics"], [47, 2, 1, "", "get_platform_defs"], [47, 2, 1, "", "get_target_system"], [47, 3, 1, "", "ic_line_width"], [47, 3, 1, "", "ic_size"], [47, 3, 1, "", "mem_latency"], [47, 3, 1, "", "mem_size"], [47, 3, 1, "", "mem_width"], [47, 2, 1, "", "parse_stdout"], [47, 2, 1, "", "prepare_simulator"], [47, 3, 1, "", "verilator_install_dir"], [47, 3, 1, "", "vicuna_src_dir"], [47, 3, 1, "", "vmem_width"], [47, 3, 1, "", "vport_policy"], [47, 3, 1, "", "vproc_config"], [47, 3, 1, "", "vproc_pipelines"]], "mlonmcu.target.riscv.ara": [[47, 1, 1, "", "AraTarget"]], "mlonmcu.target.riscv.ara.AraTarget": [[47, 4, 1, "", "DEFAULTS"], [47, 4, 1, "", "FEATURES"], [47, 4, 1, "", "OPTIONAL"], [47, 4, 1, "", "REQUIRED"], [47, 3, 1, "", "ara_apps_dir"], [47, 3, 1, "", "ara_hardware_dir"], [47, 3, 1, "", "ara_verilator_tb"], [47, 3, 1, "", "elen"], [47, 3, 1, "", "embedded_vext"], [47, 3, 1, "", "enable_vext"], [47, 2, 1, "", "exec"], [47, 3, 1, "", "extensions"], [47, 2, 1, "", "get_backend_config"], [47, 2, 1, "", "get_metrics"], [47, 2, 1, "", "get_platform_defs"], [47, 2, 1, "", "get_target_system"], [47, 3, 1, "", "limit_cycles"], [47, 3, 1, "", "nr_lanes"], [47, 3, 1, "", "num_threads"], [47, 2, 1, "", "parse_exit"], [47, 2, 1, "", "parse_stdout"], [47, 2, 1, "", "prepare_simulator"], [47, 3, 1, "", "verilator_install_dir"], [47, 3, 1, "", "vext_spec"], [47, 3, 1, "", "vlen"]], "mlonmcu.target.riscv.ara_rtl": [[47, 1, 1, "", "AraRtlTarget"]], "mlonmcu.target.riscv.ara_rtl.AraRtlTarget": [[47, 4, 1, "", "DEFAULTS"], [47, 4, 1, "", "FEATURES"], [47, 4, 1, "", "OPTIONAL"], [47, 4, 1, "", "REQUIRED"], [47, 3, 1, "", "ara_apps_dir"], [47, 3, 1, "", "ara_hardware_dir"], [47, 3, 1, "", "elen"], [47, 3, 1, "", "embedded_vext"], [47, 3, 1, "", "enable_vext"], [47, 2, 1, "", "exec"], [47, 3, 1, "", "extensions"], [47, 2, 1, "", "get_backend_config"], [47, 2, 1, "", "get_metrics"], [47, 2, 1, "", "get_platform_defs"], [47, 2, 1, "", "get_target_system"], [47, 3, 1, "", "limit_cycles"], [47, 3, 1, "", "nr_lanes"], [47, 3, 1, "", "num_threads"], [47, 2, 1, "", "parse_exit"], [47, 2, 1, "", "parse_stdout"], [47, 2, 1, "", "prepare_simulator"], [47, 3, 1, "", "questasim_install_dir"], [47, 3, 1, "", "spike_install_dir"], [47, 3, 1, "", "verilator_install_dir"], [47, 3, 1, "", "vext_spec"], [47, 3, 1, "", "vlen"]], "mlonmcu.target.riscv.corev_ovpsim": [[47, 1, 1, "", "COREVOVPSimTarget"], [47, 5, 1, "", "replace_unsupported"]], "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget": [[47, 4, 1, "", "DEFAULTS"], [47, 4, 1, "", "FEATURES"], [47, 4, 1, "", "REQUIRED"], [47, 3, 1, "", "attr"], [47, 3, 1, "", "enable_xcorevalu"], [47, 3, 1, "", "enable_xcorevbi"], [47, 3, 1, "", "enable_xcorevbitmanip"], [47, 3, 1, "", "enable_xcorevhwlp"], [47, 3, 1, "", "enable_xcorevmac"], [47, 3, 1, "", "enable_xcorevmem"], [47, 3, 1, "", "enable_xcorevsimd"], [47, 3, 1, "", "end_to_end_cycles"], [47, 2, 1, "", "exec"], [47, 3, 1, "", "extensions"], [47, 3, 1, "", "gdbserver_attach"], [47, 3, 1, "", "gdbserver_enable"], [47, 3, 1, "", "gdbserver_port"], [47, 2, 1, "", "get_backend_config"], [47, 2, 1, "", "get_default_ovpsim_args"], [47, 2, 1, "", "get_metrics"], [47, 2, 1, "", "get_platform_defs"], [47, 3, 1, "", "ovpsim_exe"], [47, 2, 1, "", "parse_exit"], [47, 2, 1, "", "parse_stdout"], [47, 3, 1, "", "processor"], [47, 3, 1, "", "variant"]], "mlonmcu.target.riscv.cv32e40p": [[47, 1, 1, "", "CV32E40PTarget"]], "mlonmcu.target.riscv.cv32e40p.CV32E40PTarget": [[47, 4, 1, "", "DEFAULTS"], [47, 4, 1, "", "FEATURES"], [47, 4, 1, "", "REQUIRED"], [47, 3, 1, "", "attr"], [47, 3, 1, "", "enable_xcorevalu"], [47, 3, 1, "", "enable_xcorevbi"], [47, 3, 1, "", "enable_xcorevbitmanip"], [47, 3, 1, "", "enable_xcorevhwlp"], [47, 3, 1, "", "enable_xcorevmac"], [47, 3, 1, "", "enable_xcorevmem"], [47, 3, 1, "", "enable_xcorevsimd"], [47, 2, 1, "", "exec"], [47, 3, 1, "", "extensions"], [47, 2, 1, "", "get_backend_config"], [47, 2, 1, "", "get_metrics"], [47, 2, 1, "", "get_platform_defs"], [47, 2, 1, "", "get_target_system"], [47, 2, 1, "", "parse_exit"], [47, 2, 1, "", "parse_stdout"], [47, 3, 1, "", "verilator_executable"]], "mlonmcu.target.riscv.etiss": [[47, 1, 1, "", "EtissTarget"]], "mlonmcu.target.riscv.etiss.EtissTarget": [[47, 4, 1, "", "DEFAULTS"], [47, 4, 1, "", "FEATURES"], [47, 4, 1, "", "REQUIRED"], [47, 3, 1, "", "allow_error"], [47, 3, 1, "", "attr"], [47, 3, 1, "", "cpu_arch"], [47, 3, 1, "", "cycle_time_ps"], [47, 3, 1, "", "debug_etiss"], [47, 3, 1, "", "elen"], [47, 3, 1, "", "embedded_vext"], [47, 3, 1, "", "enable_pext"], [47, 3, 1, "", "enable_vext"], [47, 3, 1, "", "enable_xcorevalu"], [47, 3, 1, "", "enable_xcorevbi"], [47, 3, 1, "", "enable_xcorevbitmanip"], [47, 3, 1, "", "enable_xcorevhwlp"], [47, 3, 1, "", "enable_xcorevmac"], [47, 3, 1, "", "enable_xcorevmem"], [47, 3, 1, "", "enable_xcorevsimd"], [47, 3, 1, "", "etiss_dir"], [47, 3, 1, "", "etiss_script"], [47, 3, 1, "", "etiss_src_dir"], [47, 2, 1, "", "exec"], [47, 3, 1, "", "extensions"], [47, 3, 1, "", "extra_bool_config"], [47, 3, 1, "", "extra_int_config"], [47, 3, 1, "", "extra_plugin_config"], [47, 3, 1, "", "extra_string_config"], [47, 3, 1, "", "gdbserver_attach"], [47, 3, 1, "", "gdbserver_enable"], [47, 3, 1, "", "gdbserver_port"], [47, 2, 1, "", "get_backend_config"], [47, 2, 1, "", "get_ini_bool_config"], [47, 2, 1, "", "get_ini_int_config"], [47, 2, 1, "", "get_ini_plugin_config"], [47, 2, 1, "", "get_ini_string_config"], [47, 2, 1, "", "get_metrics"], [47, 2, 1, "", "get_platform_defs"], [47, 2, 1, "", "get_target_system"], [47, 3, 1, "", "jit"], [47, 3, 1, "", "max_block_size"], [47, 2, 1, "", "parse_exit"], [47, 2, 1, "", "parse_stdout"], [47, 3, 1, "", "pext_spec"], [47, 3, 1, "", "plugins"], [47, 3, 1, "", "ram_size"], [47, 3, 1, "", "ram_start"], [47, 3, 1, "", "rom_size"], [47, 3, 1, "", "rom_start"], [47, 3, 1, "", "trace_memory"], [47, 3, 1, "", "verbose"], [47, 3, 1, "", "vext_spec"], [47, 3, 1, "", "vlen"], [47, 2, 1, "", "write_ini"]], "mlonmcu.target.riscv.etiss_pulpino": [[47, 1, 1, "", "EtissPulpinoTarget"]], "mlonmcu.target.riscv.etiss_pulpino.EtissPulpinoTarget": [[47, 4, 1, "", "REQUIRED"], [47, 2, 1, "", "get_ini_bool_config"], [47, 2, 1, "", "get_platform_defs"]], "mlonmcu.target.riscv.gvsoc_pulp": [[47, 1, 1, "", "GvsocPulpTarget"]], "mlonmcu.target.riscv.gvsoc_pulp.GvsocPulpTarget": [[47, 4, 1, "", "DEFAULTS"], [47, 4, 1, "", "FEATURES"], [47, 4, 1, "", "REQUIRED"], [47, 3, 1, "", "abi"], [47, 2, 1, "", "exec"], [47, 3, 1, "", "extensions"], [47, 2, 1, "", "get_backend_config"], [47, 2, 1, "", "get_basic_gvsoc_simulating_arg"], [47, 2, 1, "", "get_metrics"], [47, 2, 1, "", "get_platform_defs"], [47, 2, 1, "", "get_target_system"], [47, 3, 1, "", "gvsoc_folder"], [47, 2, 1, "", "gvsoc_preparation_env"], [47, 3, 1, "", "gvsoc_script"], [47, 3, 1, "", "model"], [47, 2, 1, "", "parse_stdout"], [47, 3, 1, "", "pulp_freertos_config_dir"], [47, 3, 1, "", "pulp_freertos_install_dir"], [47, 3, 1, "", "pulp_freertos_support_dir"], [47, 3, 1, "", "xpulp_version"]], "mlonmcu.target.riscv.ovpsim": [[47, 1, 1, "", "OVPSimTarget"], [47, 5, 1, "", "replace_unsupported"]], "mlonmcu.target.riscv.ovpsim.OVPSimTarget": [[47, 4, 1, "", "DEFAULTS"], [47, 4, 1, "", "FEATURES"], [47, 4, 1, "", "REQUIRED"], [47, 3, 1, "", "attr"], [47, 3, 1, "", "elen"], [47, 3, 1, "", "embedded_vext"], [47, 3, 1, "", "enable_pext"], [47, 3, 1, "", "enable_vext"], [47, 3, 1, "", "end_to_end_cycles"], [47, 2, 1, "", "exec"], [47, 3, 1, "", "extensions"], [47, 3, 1, "", "gdbserver_attach"], [47, 3, 1, "", "gdbserver_enable"], [47, 3, 1, "", "gdbserver_port"], [47, 2, 1, "", "get_backend_config"], [47, 2, 1, "", "get_default_ovpsim_args"], [47, 2, 1, "", "get_metrics"], [47, 2, 1, "", "get_platform_defs"], [47, 3, 1, "", "ovpsim_exe"], [47, 2, 1, "", "parse_stdout"], [47, 3, 1, "", "pext_spec"], [47, 3, 1, "", "variant"], [47, 3, 1, "", "vext_spec"], [47, 3, 1, "", "vlen"]], "mlonmcu.target.riscv.riscv": [[47, 1, 1, "", "RISCVTarget"]], "mlonmcu.target.riscv.riscv.RISCVTarget": [[47, 4, 1, "", "DEFAULTS"], [47, 4, 1, "", "FEATURES"], [47, 4, 1, "", "OPTIONAL"], [47, 4, 1, "", "PUPL_GCC_TOOLCHAIN_REQUIRED"], [47, 4, 1, "", "REQUIRED"], [47, 3, 1, "", "abi"], [47, 3, 1, "", "arch"], [47, 3, 1, "", "atomic"], [47, 3, 1, "", "attr"], [47, 3, 1, "", "attrs"], [47, 3, 1, "", "compressed"], [47, 3, 1, "", "cpu"], [47, 3, 1, "", "embedded"], [47, 3, 1, "", "extensions"], [47, 3, 1, "", "extra_args"], [47, 3, 1, "", "fpu"], [47, 3, 1, "", "gcc_arch"], [47, 3, 1, "", "gcc_extensions"], [47, 3, 1, "", "gcc_variant"], [47, 2, 1, "", "get_arch"], [47, 2, 1, "", "get_backend_config"], [47, 2, 1, "", "get_platform_defs"], [47, 2, 1, "", "get_target_system"], [47, 3, 1, "", "has_fpu"], [47, 3, 1, "", "llvm_arch"], [47, 3, 1, "", "llvm_extensions"], [47, 3, 1, "", "multiply"], [47, 3, 1, "", "pulp_gcc_basename"], [47, 3, 1, "", "pulp_gcc_prefix"], [47, 2, 1, "", "reconfigure"], [47, 3, 1, "", "riscv_gcc_basename"], [47, 3, 1, "", "riscv_gcc_prefix"], [47, 3, 1, "", "timeout_sec"], [47, 3, 1, "", "toolchain"], [47, 3, 1, "", "xlen"]], "mlonmcu.target.riscv.riscv_bext_target": [[47, 1, 1, "", "RVBTarget"]], "mlonmcu.target.riscv.riscv_bext_target.RVBTarget": [[47, 4, 1, "", "DEFAULTS"], [47, 4, 1, "", "FEATURES"], [47, 4, 1, "", "REQUIRED"], [47, 3, 1, "", "bext_spec"], [47, 3, 1, "", "bext_zba"], [47, 3, 1, "", "bext_zbb"], [47, 3, 1, "", "bext_zbc"], [47, 3, 1, "", "bext_zbs"], [47, 3, 1, "", "enable_bext"], [47, 3, 1, "", "extensions"], [47, 2, 1, "", "get_platform_defs"]], "mlonmcu.target.riscv.riscv_pext_target": [[47, 1, 1, "", "RVPTarget"]], "mlonmcu.target.riscv.riscv_pext_target.RVPTarget": [[47, 4, 1, "", "DEFAULTS"], [47, 4, 1, "", "FEATURES"], [47, 4, 1, "", "REQUIRED"], [47, 3, 1, "", "enable_pext"], [47, 3, 1, "", "extensions"], [47, 2, 1, "", "get_platform_defs"], [47, 3, 1, "", "pext_spec"]], "mlonmcu.target.riscv.riscv_qemu": [[47, 1, 1, "", "RiscvQemuTarget"]], "mlonmcu.target.riscv.riscv_qemu.RiscvQemuTarget": [[47, 4, 1, "", "DEFAULTS"], [47, 4, 1, "", "FEATURES"], [47, 4, 1, "", "REQUIRED"], [47, 3, 1, "", "attr"], [47, 3, 1, "", "elen"], [47, 3, 1, "", "embedded_vext"], [47, 3, 1, "", "enable_vext"], [47, 2, 1, "", "exec"], [47, 3, 1, "", "extensions"], [47, 2, 1, "", "get_cpu_str"], [47, 2, 1, "", "get_metrics"], [47, 2, 1, "", "get_platform_defs"], [47, 2, 1, "", "get_qemu_args"], [47, 2, 1, "", "get_target_system"], [47, 2, 1, "", "parse_stdout"], [47, 3, 1, "", "riscv32_qemu_exe"], [47, 3, 1, "", "vext_spec"], [47, 3, 1, "", "vlen"]], "mlonmcu.target.riscv.riscv_vext_target": [[47, 1, 1, "", "RVVTarget"]], "mlonmcu.target.riscv.riscv_vext_target.RVVTarget": [[47, 4, 1, "", "DEFAULTS"], [47, 4, 1, "", "FEATURES"], [47, 4, 1, "", "REQUIRED"], [47, 3, 1, "", "attrs"], [47, 3, 1, "", "elen"], [47, 3, 1, "", "embedded_vext"], [47, 3, 1, "", "enable_vext"], [47, 3, 1, "", "extensions"], [47, 2, 1, "", "get_backend_config"], [47, 2, 1, "", "get_platform_defs"], [47, 3, 1, "", "vext_spec"], [47, 3, 1, "", "vlen"]], "mlonmcu.target.riscv.spike": [[47, 1, 1, "", "SpikeTarget"], [47, 5, 1, "", "filter_unsupported_extensions"]], "mlonmcu.target.riscv.spike.SpikeTarget": [[47, 4, 1, "", "DEFAULTS"], [47, 4, 1, "", "FEATURES"], [47, 4, 1, "", "REQUIRED"], [47, 2, 1, "", "exec"], [47, 3, 1, "", "extensions"], [47, 2, 1, "", "get_backend_config"], [47, 2, 1, "", "get_metrics"], [47, 2, 1, "", "get_platform_defs"], [47, 3, 1, "", "isa"], [47, 2, 1, "", "parse_stdout"], [47, 3, 1, "", "spike_exe"], [47, 3, 1, "", "spike_pk"], [47, 3, 1, "", "spikepk_extra_args"]], "mlonmcu.target.riscv.util": [[47, 5, 1, "", "join_extensions"], [47, 5, 1, "", "sort_extensions_canonical"], [47, 5, 1, "", "split_extensions"], [47, 5, 1, "", "update_extensions"], [47, 5, 1, "", "update_extensions_pulp"]], "mlonmcu.target.riscv.vicuna": [[47, 1, 1, "", "VicunaTarget"], [47, 7, 1, "", "logger"]], "mlonmcu.target.riscv.vicuna.VicunaTarget": [[47, 4, 1, "", "DEFAULTS"], [47, 4, 1, "", "FEATURES"], [47, 4, 1, "", "REQUIRED"], [47, 3, 1, "", "core"], [47, 3, 1, "", "dc_line_width"], [47, 3, 1, "", "dc_size"], [47, 2, 1, "", "exec"], [47, 2, 1, "", "get_backend_config"], [47, 2, 1, "", "get_config_args"], [47, 2, 1, "", "get_metrics"], [47, 2, 1, "", "get_platform_defs"], [47, 2, 1, "", "get_target_system"], [47, 3, 1, "", "ic_line_width"], [47, 3, 1, "", "ic_size"], [47, 3, 1, "", "mem_latency"], [47, 3, 1, "", "mem_size"], [47, 3, 1, "", "mem_width"], [47, 2, 1, "", "parse_stdout"], [47, 2, 1, "", "prepare_simulator"], [47, 3, 1, "", "verilator_install_dir"], [47, 3, 1, "", "vicuna_src_dir"], [47, 3, 1, "", "vmem_width"], [47, 3, 1, "", "vport_policy"], [47, 3, 1, "", "vproc_config"], [47, 3, 1, "", "vproc_pipelines"]], "mlonmcu.target.target": [[45, 1, 1, "", "Target"]], "mlonmcu.target.target.Target": [[45, 4, 1, "", "DEFAULTS"], [45, 4, 1, "", "FEATURES"], [45, 4, 1, "", "OPTIONAL"], [45, 4, 1, "", "REQUIRED"], [45, 2, 1, "", "add_backend_config"], [45, 2, 1, "", "add_platform_config"], [45, 2, 1, "", "add_platform_defs"], [45, 2, 1, "", "exec"], [45, 2, 1, "", "export_artifacts"], [45, 2, 1, "", "generate"], [45, 2, 1, "", "generate_artifacts"], [45, 2, 1, "", "get_arch"], [45, 2, 1, "", "get_backend_config"], [45, 2, 1, "", "get_hardware_details"], [45, 2, 1, "", "get_metrics"], [45, 2, 1, "", "get_platform_config"], [45, 2, 1, "", "get_platform_defs"], [45, 2, 1, "", "get_target_system"], [45, 2, 1, "", "inspect"], [45, 2, 1, "", "parse_exit"], [45, 3, 1, "", "print_outputs"], [45, 2, 1, "", "process_features"], [45, 2, 1, "", "reconfigure"], [45, 3, 1, "", "repeat"]], "mlonmcu.testing": [[48, 0, 0, "-", "helpers"], [48, 0, 0, "-", "riscv_toolchain"]], "mlonmcu.testing.riscv_toolchain": [[48, 1, 1, "", "MyRISCVTarget"], [48, 1, 1, "", "MyRVPTarget"], [48, 1, 1, "", "MyRVVTarget"]], "mlonmcu.timeout": [[23, 5, 1, "", "exec_timeout"]], "mlonmcu.utils": [[23, 5, 1, "", "ask_user"], [23, 5, 1, "", "filter_none"], [23, 5, 1, "", "get_base_prefix_compat"], [23, 5, 1, "", "in_virtualenv"], [23, 5, 1, "", "is_power_of_two"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function", "6": "py:exception", "7": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["py", "data", "Python data"]}, "titleterms": {"credit": [0, 7, 51], "develop": [0, 7, 51], "lead": [0, 7], "contributor": [0, 7], "compon": [1, 5, 8, 22], "model": [1, 8, 24, 34], "frontend": [1, 8, 34], "framework": [1, 8, 29, 30, 32], "backend": [1, 8, 29, 31, 33], "platform": [1, 8, 35, 36, 37, 38, 39, 40], "target": [1, 8, 45, 46, 47], "featur": [1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 28, 51], "manag": [1, 3, 8, 16], "depend": [1, 8], "contribut": [2, 15], "type": [2, 15, 28], "report": [2, 15, 23], "bug": [2, 15], "fix": [2, 15], "implement": [2, 6, 15, 50], "write": [2, 5, 15, 22], "document": [2, 15, 17, 20], "submit": [2, 15], "feedback": [2, 15], "get": [2, 15, 51], "start": [2, 15, 51], "pull": [2, 15], "request": [2, 15], "guidelin": [2, 15], "tip": [2, 15], "deploi": [2, 15], "import": [3, 16], "term": [3, 16], "design": [3, 16], "decis": [3, 16], "rfc": [3, 16], "motiv": [3, 4, 16, 18], "goal": [3, 16], "fundament": [3, 16], "configur": [3, 9, 12, 16], "context": [3, 16, 26], "environ": [3, 4, 16, 18, 27], "session": [3, 16, 41, 42], "run": [3, 16, 24, 41], "definit": [3, 16], "artifact": [3, 16, 23], "handl": [3, 16], "abstract": [3, 16], "variou": [3, 16], "level": [3, 16], "yml": [4, 18], "explain": [4, 18], "templat": [4, 18, 27], "creat": [4, 18], "command": [4, 5, 18, 22], "line": [4, 5, 18, 22], "recommend": [4, 18], "python": [4, 18], "api": [4, 18], "us": [4, 18], "registri": [4, 18], "log": [5, 22, 23], "verbos": [5, 22], "output": [5, 22], "debug": [5, 22], "error": [5, 22], "specif": [5, 22], "file": [5, 22], "background": [5, 22], "postprocess": [6, 42, 50], "stage": [6, 50], "exampl": [6, 50], "usag": [6, 9, 10, 11, 12, 13, 14, 50, 51, 52], "custom": [6, 50], "detail": 8, "auto": [9, 12], "vector": [9, 12], "todo": [9, 12], "warn": [9, 12], "compat": [9, 10, 11, 12, 13, 14], "cmsi": [10, 13], "nn": [10, 11, 13, 14], "byoc": [10, 11, 13, 14], "muriscv": [11, 14], "histori": 19, "0": 19, "1": 19, "2021": 19, "11": 19, "12": 19, "welcom": 20, "ml": [20, 51], "mcu": [20, 51], "": 20, "content": [20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "indic": 20, "tabl": 20, "instal": [21, 51], "stabl": 21, "releas": [21, 51], "from": [21, 51], "sourc": 21, "mlonmcu": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "packag": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51], "subpackag": [23, 24, 29, 30, 32, 35, 41, 43, 45], "submodul": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "modul": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "config": [23, 27], "plugin": 23, "timeout": 23, "util": [23, 34, 43, 46, 47], "version": 23, "cli": [24, 25], "build": [24, 51], "cleanup": 24, "common": [24, 44, 45], "compil": 24, "env": 24, "export": 24, "flow": [24, 29, 30, 31, 32, 33], "init": [24, 27], "load": 24, "main": 24, "setup": [24, 43, 44], "tune": 24, "helper": [25, 48], "filter": 25, "pars": 25, "read_write_filelock": 26, "list": 27, "loader": 27, "writer": 27, "tflm": [30, 31], "tflmc": [31, 44], "tflmi": 31, "tvm": [32, 33, 39, 44], "model_info": 33, "python_util": 33, "tuner": 33, "tvmaot": 33, "tvmaotplu": 33, "tvmc_util": 33, "tvmcg": 33, "tvmllvm": 33, "tvmrt": 33, "wrapper": 33, "convert_data": 34, "group": 34, "lookup": [34, 35], "metadata": 34, "option": 34, "espidf": [36, 44], "espidf_target": 36, "microtvm": 37, "microtvm_arduino_target": 37, "microtvm_backend": 37, "microtvm_base_platform": 37, "microtvm_build_platform": 37, "microtvm_compile_platform": 37, "microtvm_corev_ovpsim_target": 37, "microtvm_espidf_target": 37, "microtvm_etiss_target": 37, "microtvm_host_target": 37, "microtvm_mlonmcu_target": 37, "microtvm_spike_target": 37, "microtvm_target": 37, "microtvm_target_platform": 37, "microtvm_template_target": 37, "microtvm_tune_platform": 37, "microtvm_zephyr_target": 37, "mlif": [38, 44], "mlif_target": 38, "tvm_backend": 39, "tvm_base_platform": 39, "tvm_build_platform": 39, "tvm_rpc_platform": 39, "tvm_target": 39, "tvm_target_platform": 39, "tvm_tune_platform": 39, "zephyr": [40, 44], "zephyr_target": 40, "cach": 43, "gen_requir": 43, "task": [43, 44], "ara": [44, 47], "arm_gcc": 44, "benchmark": 44, "cmsisnn": 44, "corev": 44, "corstone300": [44, 46], "cv32e40p": [44, 47], "dtc": 44, "etiss": [44, 47], "layergen": 44, "llvm": 44, "muriscvnn": 44, "ovpsim": [44, 47], "pulp": 44, "riscv_gcc": 44, "spike": [44, 47], "srecord": 44, "tf": 44, "tflite": 44, "utvmcg": 44, "veril": 44, "vicuna": [44, 47], "bench": 45, "elf": 45, "host_x86": 45, "metric": 45, "arm": 46, "riscv": 47, "ara_rtl": 47, "corev_ovpsim": 47, "etiss_pulpino": 47, "gvsoc_pulp": 47, "riscv_bext_target": 47, "riscv_pext_target": 47, "riscv_qemu": 47, "riscv_vext_target": 47, "note": 47, "test": 48, "riscv_toolchain": 48, "prerequisit": 51, "ubuntu": 51, "debian": 51, "pypi": 51, "manual": 51, "docker": 51, "ani": 51, "other": 51, "o": 51}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Credits": [[0, "credits"], [7, "credits"], [51, "credits"]], "Development Lead": [[0, "development-lead"], [7, "development-lead"]], "Contributors": [[0, "contributors"], [7, "contributors"]], "Components": [[1, "components"], [8, "components"]], "Models and Frontends": [[1, "models-and-frontends"], [8, "models-and-frontends"]], "Frameworks and Backends": [[1, "frameworks-and-backends"], [8, "frameworks-and-backends"]], "Platforms and Targets": [[1, "platforms-and-targets"], [8, "platforms-and-targets"]], "Features": [[1, "features"], [8, "features"], [51, "features"]], "Managed Dependencies": [[1, "managed-dependencies"], [8, "managed-dependencies"]], "Contributing": [[2, "contributing"], [15, "contributing"]], "Types of Contributions": [[2, "types-of-contributions"], [15, "types-of-contributions"]], "Report Bugs": [[2, "report-bugs"], [15, "report-bugs"]], "Fix Bugs": [[2, "fix-bugs"], [15, "fix-bugs"]], "Implement Features": [[2, "implement-features"], [15, "implement-features"]], "Write Documentation": [[2, "write-documentation"], [15, "write-documentation"]], "Submit Feedback": [[2, "submit-feedback"], [15, "submit-feedback"]], "Get Started!": [[2, "get-started"], [15, "get-started"]], "Pull Request Guidelines": [[2, "pull-request-guidelines"], [15, "pull-request-guidelines"]], "Tips": [[2, "tips"], [15, "tips"]], "Deploying": [[2, "deploying"], [15, "deploying"]], "Important Terms and Design Decisions (RFC)": [[3, "important-terms-and-design-decisions-rfc"], [16, "important-terms-and-design-decisions-rfc"]], "Motivation and Goals": [[3, "motivation-and-goals"], [16, "motivation-and-goals"]], "Fundamentals": [[3, "fundamentals"], [16, "fundamentals"]], "Features and Configuration": [[3, "features-and-configuration"], [16, "features-and-configuration"]], "Contexts and Environments": [[3, "contexts-and-environments"], [16, "contexts-and-environments"]], "Session Management/Run Definition": [[3, "session-management-run-definition"], [16, "session-management-run-definition"]], "Artifacts Handling": [[3, "artifacts-handling"], [16, "artifacts-handling"]], "Abstraction at Various Levels": [[3, "abstraction-at-various-levels"], [16, "abstraction-at-various-levels"]], "Environments": [[4, "environments"], [18, "environments"]], "Motivation": [[4, "motivation"], [18, "motivation"]], "environment.yml Explained": [[4, "environment-yml-explained"], [18, "environment-yml-explained"]], "Environment Templates": [[4, "environment-templates"], [18, "environment-templates"]], "Creating environments": [[4, "creating-environments"], [18, "creating-environments"]], "Command line (recommended)": [[4, "command-line-recommended"], [18, "command-line-recommended"]], "Python API": [[4, "python-api"], [4, "id1"], [18, "python-api"], [18, "id1"]], "Using environments": [[4, "using-environments"], [18, "using-environments"]], "Command line": [[4, "command-line"], [18, "command-line"]], "Environment registry": [[4, "environment-registry"], [18, "environment-registry"]], "Logging and Verbosity": [[5, "logging-and-verbosity"], [22, "logging-and-verbosity"]], "Command-line output": [[5, "command-line-output"], [22, "command-line-output"]], "Debugging Errors and specific components": [[5, "debugging-errors-and-specific-components"], [22, "debugging-errors-and-specific-components"]], "Writing log files": [[5, "writing-log-files"], [22, "writing-log-files"]], "Background": [[5, "background"], [22, "background"]], "Postprocesses": [[6, "postprocesses"], [50, "postprocesses"]], "Stages": [[6, "stages"], [50, "stages"]], "Examples": [[6, "examples"], [50, "examples"]], "Usage of Postprocesses": [[6, "usage-of-postprocesses"], [50, "usage-of-postprocesses"]], "Implement custom postprocesses": [[6, "implement-custom-postprocesses"], [50, "implement-custom-postprocesses"]], "Components in Detail": [[8, "components-in-detail"]], "Components:": [[8, null]], "Auto-Vectorize Feature": [[9, "auto-vectorize-feature"], [12, "auto-vectorize-feature"]], "Usage": [[9, "usage"], [10, "usage"], [11, "usage"], [12, "usage"], [13, "usage"], [14, "usage"], [51, "usage"], [52, "usage"]], "TODOs:": [[9, "todos"], [12, "todos"]], "Warning": [[9, "warning"], [12, "warning"]], "Configuration": [[9, "configuration"], [12, "configuration"]], "Compatibility": [[9, "compatibility"], [10, "compatibility"], [11, "compatibility"], [12, "compatibility"], [13, "compatibility"], [14, "compatibility"]], "CMSIS-NN BYOC Feature": [[10, "cmsis-nn-byoc-feature"], [13, "cmsis-nn-byoc-feature"]], "muRISCV-NN BYOC Feature": [[11, "muriscv-nn-byoc-feature"], [14, "muriscv-nn-byoc-feature"]], "Documentation": [[17, "documentation"]], "History": [[19, "history"]], "0.1.0 (2021-11-12)": [[19, "id1"]], "Welcome to ML on MCU\u2019s documentation!": [[20, "welcome-to-ml-on-mcu-s-documentation"]], "Contents:": [[20, null]], "Indices and tables": [[20, "indices-and-tables"]], "Installation": [[21, "installation"]], "Stable release": [[21, "stable-release"]], "From sources": [[21, "from-sources"]], "mlonmcu package": [[23, "mlonmcu-package"]], "Subpackages": [[23, "subpackages"], [24, "subpackages"], [29, "subpackages"], [30, "subpackages"], [32, "subpackages"], [35, "subpackages"], [41, "subpackages"], [43, "subpackages"], [45, "subpackages"]], "Submodules": [[23, "submodules"], [24, "submodules"], [25, "submodules"], [26, "submodules"], [27, "submodules"], [28, "submodules"], [29, "submodules"], [30, "submodules"], [31, "submodules"], [32, "submodules"], [33, "submodules"], [34, "submodules"], [35, "submodules"], [36, "submodules"], [37, "submodules"], [38, "submodules"], [39, "submodules"], [40, "submodules"], [41, "submodules"], [42, "submodules"], [43, "submodules"], [44, "submodules"], [45, "submodules"], [46, "submodules"], [47, "submodules"], [48, "submodules"]], "mlonmcu.artifact module": [[23, "module-mlonmcu.artifact"]], "mlonmcu.config module": [[23, "module-mlonmcu.config"]], "mlonmcu.logging module": [[23, "module-mlonmcu.logging"]], "mlonmcu.mlonmcu module": [[23, "module-mlonmcu.mlonmcu"]], "mlonmcu.plugins module": [[23, "module-mlonmcu.plugins"]], "mlonmcu.report module": [[23, "module-mlonmcu.report"]], "mlonmcu.timeout module": [[23, "module-mlonmcu.timeout"]], "mlonmcu.utils module": [[23, "module-mlonmcu.utils"]], "mlonmcu.version module": [[23, "module-mlonmcu.version"]], "Module contents": [[23, "module-mlonmcu"], [24, "module-mlonmcu.cli"], [25, "module-mlonmcu.cli.helper"], [26, "module-mlonmcu.context"], [27, "module-mlonmcu.environment"], [28, "module-mlonmcu.feature"], [29, "module-mlonmcu.flow"], [30, "module-mlonmcu.flow.tflm"], [31, "module-mlonmcu.flow.tflm.backend"], [32, "module-mlonmcu.flow.tvm"], [33, "module-mlonmcu.flow.tvm.backend"], [34, "module-mlonmcu.models"], [35, "module-mlonmcu.platform"], [36, "module-mlonmcu.platform.espidf"], [37, "module-mlonmcu.platform.microtvm"], [38, "module-mlonmcu.platform.mlif"], [39, "module-mlonmcu.platform.tvm"], [40, "module-mlonmcu.platform.zephyr"], [41, "module-mlonmcu.session"], [42, "module-mlonmcu.session.postprocess"], [43, "module-mlonmcu.setup"], [44, "module-mlonmcu.setup.tasks"], [45, "module-mlonmcu.target"], [46, "module-mlonmcu.target.arm"], [47, "module-mlonmcu.target.riscv"], [48, "module-mlonmcu.testing"]], "mlonmcu.cli package": [[24, "mlonmcu-cli-package"]], "mlonmcu.cli.build module": [[24, "module-mlonmcu.cli.build"]], "mlonmcu.cli.cleanup module": [[24, "module-mlonmcu.cli.cleanup"]], "mlonmcu.cli.common module": [[24, "module-mlonmcu.cli.common"]], "mlonmcu.cli.compile module": [[24, "module-mlonmcu.cli.compile"]], "mlonmcu.cli.env module": [[24, "module-mlonmcu.cli.env"]], "mlonmcu.cli.export module": [[24, "module-mlonmcu.cli.export"]], "mlonmcu.cli.flow module": [[24, "module-mlonmcu.cli.flow"]], "mlonmcu.cli.init module": [[24, "module-mlonmcu.cli.init"]], "mlonmcu.cli.load module": [[24, "module-mlonmcu.cli.load"]], "mlonmcu.cli.main module": [[24, "module-mlonmcu.cli.main"]], "mlonmcu.cli.models module": [[24, "module-mlonmcu.cli.models"]], "mlonmcu.cli.run module": [[24, "module-mlonmcu.cli.run"]], "mlonmcu.cli.setup module": [[24, "module-mlonmcu.cli.setup"]], "mlonmcu.cli.tune module": [[24, "module-mlonmcu.cli.tune"]], "mlonmcu.cli.helper package": [[25, "mlonmcu-cli-helper-package"]], "mlonmcu.cli.helper.filter module": [[25, "module-mlonmcu.cli.helper.filter"]], "mlonmcu.cli.helper.parse module": [[25, "module-mlonmcu.cli.helper.parse"]], "mlonmcu.context package": [[26, "mlonmcu-context-package"]], "mlonmcu.context.context module": [[26, "module-mlonmcu.context.context"]], "mlonmcu.context.read_write_filelock module": [[26, "module-mlonmcu.context.read_write_filelock"]], "mlonmcu.environment package": [[27, "mlonmcu-environment-package"]], "mlonmcu.environment.config module": [[27, "module-mlonmcu.environment.config"]], "mlonmcu.environment.environment module": [[27, "module-mlonmcu.environment.environment"]], "mlonmcu.environment.init module": [[27, "module-mlonmcu.environment.init"]], "mlonmcu.environment.list module": [[27, "module-mlonmcu.environment.list"]], "mlonmcu.environment.loader module": [[27, "module-mlonmcu.environment.loader"]], "mlonmcu.environment.templates module": [[27, "module-mlonmcu.environment.templates"]], "mlonmcu.environment.writer module": [[27, "module-mlonmcu.environment.writer"]], "mlonmcu.feature package": [[28, "mlonmcu-feature-package"]], "mlonmcu.feature.feature module": [[28, "module-mlonmcu.feature.feature"]], "mlonmcu.feature.features module": [[28, "module-mlonmcu.feature.features"]], "mlonmcu.feature.type module": [[28, "module-mlonmcu.feature.type"]], "mlonmcu.flow package": [[29, "mlonmcu-flow-package"]], "mlonmcu.flow.backend module": [[29, "module-mlonmcu.flow.backend"]], "mlonmcu.flow.framework module": [[29, "module-mlonmcu.flow.framework"]], "mlonmcu.flow.tflm package": [[30, "mlonmcu-flow-tflm-package"]], "mlonmcu.flow.tflm.framework module": [[30, "module-mlonmcu.flow.tflm.framework"]], "mlonmcu.flow.tflm.backend package": [[31, "mlonmcu-flow-tflm-backend-package"]], "mlonmcu.flow.tflm.backend.backend module": [[31, "module-mlonmcu.flow.tflm.backend.backend"]], "mlonmcu.flow.tflm.backend.tflmc module": [[31, "module-mlonmcu.flow.tflm.backend.tflmc"]], "mlonmcu.flow.tflm.backend.tflmi module": [[31, "module-mlonmcu.flow.tflm.backend.tflmi"]], "mlonmcu.flow.tvm package": [[32, "mlonmcu-flow-tvm-package"]], "mlonmcu.flow.tvm.framework module": [[32, "module-mlonmcu.flow.tvm.framework"]], "mlonmcu.flow.tvm.backend package": [[33, "mlonmcu-flow-tvm-backend-package"]], "mlonmcu.flow.tvm.backend.backend module": [[33, "module-mlonmcu.flow.tvm.backend.backend"]], "mlonmcu.flow.tvm.backend.model_info module": [[33, "module-mlonmcu.flow.tvm.backend.model_info"]], "mlonmcu.flow.tvm.backend.python_utils module": [[33, "module-mlonmcu.flow.tvm.backend.python_utils"]], "mlonmcu.flow.tvm.backend.tuner module": [[33, "module-mlonmcu.flow.tvm.backend.tuner"]], "mlonmcu.flow.tvm.backend.tvmaot module": [[33, "module-mlonmcu.flow.tvm.backend.tvmaot"]], "mlonmcu.flow.tvm.backend.tvmaotplus module": [[33, "module-mlonmcu.flow.tvm.backend.tvmaotplus"]], "mlonmcu.flow.tvm.backend.tvmc_utils module": [[33, "module-mlonmcu.flow.tvm.backend.tvmc_utils"]], "mlonmcu.flow.tvm.backend.tvmcg module": [[33, "module-mlonmcu.flow.tvm.backend.tvmcg"]], "mlonmcu.flow.tvm.backend.tvmllvm module": [[33, "module-mlonmcu.flow.tvm.backend.tvmllvm"]], "mlonmcu.flow.tvm.backend.tvmrt module": [[33, "module-mlonmcu.flow.tvm.backend.tvmrt"]], "mlonmcu.flow.tvm.backend.wrapper module": [[33, "module-mlonmcu.flow.tvm.backend.wrapper"]], "mlonmcu.models package": [[34, "mlonmcu-models-package"]], "mlonmcu.models.convert_data module": [[34, "module-mlonmcu.models.convert_data"]], "mlonmcu.models.frontend module": [[34, "module-mlonmcu.models.frontend"]], "mlonmcu.models.group module": [[34, "module-mlonmcu.models.group"]], "mlonmcu.models.lookup module": [[34, "module-mlonmcu.models.lookup"]], "mlonmcu.models.metadata module": [[34, "module-mlonmcu.models.metadata"]], "mlonmcu.models.model module": [[34, "module-mlonmcu.models.model"]], "mlonmcu.models.options module": [[34, "module-mlonmcu.models.options"]], "mlonmcu.models.utils module": [[34, "module-mlonmcu.models.utils"]], "mlonmcu.platform package": [[35, "mlonmcu-platform-package"]], "mlonmcu.platform.lookup module": [[35, "module-mlonmcu.platform.lookup"]], "mlonmcu.platform.platform module": [[35, "module-mlonmcu.platform.platform"]], "mlonmcu.platform.espidf package": [[36, "mlonmcu-platform-espidf-package"]], "mlonmcu.platform.espidf.espidf module": [[36, "module-mlonmcu.platform.espidf.espidf"]], "mlonmcu.platform.espidf.espidf_target module": [[36, "module-mlonmcu.platform.espidf.espidf_target"]], "mlonmcu.platform.microtvm package": [[37, "mlonmcu-platform-microtvm-package"]], "mlonmcu.platform.microtvm.microtvm module": [[37, "module-mlonmcu.platform.microtvm.microtvm"]], "mlonmcu.platform.microtvm.microtvm_arduino_target module": [[37, "module-mlonmcu.platform.microtvm.microtvm_arduino_target"]], "mlonmcu.platform.microtvm.microtvm_backend module": [[37, "module-mlonmcu.platform.microtvm.microtvm_backend"]], "mlonmcu.platform.microtvm.microtvm_base_platform module": [[37, "module-mlonmcu.platform.microtvm.microtvm_base_platform"]], "mlonmcu.platform.microtvm.microtvm_build_platform module": [[37, "module-mlonmcu.platform.microtvm.microtvm_build_platform"]], "mlonmcu.platform.microtvm.microtvm_compile_platform module": [[37, "module-mlonmcu.platform.microtvm.microtvm_compile_platform"]], "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target module": [[37, "module-mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target"]], "mlonmcu.platform.microtvm.microtvm_espidf_target module": [[37, "module-mlonmcu.platform.microtvm.microtvm_espidf_target"]], "mlonmcu.platform.microtvm.microtvm_etiss_target module": [[37, "module-mlonmcu.platform.microtvm.microtvm_etiss_target"]], "mlonmcu.platform.microtvm.microtvm_host_target module": [[37, "module-mlonmcu.platform.microtvm.microtvm_host_target"]], "mlonmcu.platform.microtvm.microtvm_mlonmcu_target module": [[37, "module-mlonmcu.platform.microtvm.microtvm_mlonmcu_target"]], "mlonmcu.platform.microtvm.microtvm_spike_target module": [[37, "module-mlonmcu.platform.microtvm.microtvm_spike_target"]], "mlonmcu.platform.microtvm.microtvm_target module": [[37, "module-mlonmcu.platform.microtvm.microtvm_target"]], "mlonmcu.platform.microtvm.microtvm_target_platform module": [[37, "module-mlonmcu.platform.microtvm.microtvm_target_platform"]], "mlonmcu.platform.microtvm.microtvm_template_target module": [[37, "module-mlonmcu.platform.microtvm.microtvm_template_target"]], "mlonmcu.platform.microtvm.microtvm_tune_platform module": [[37, "module-mlonmcu.platform.microtvm.microtvm_tune_platform"]], "mlonmcu.platform.microtvm.microtvm_zephyr_target module": [[37, "module-mlonmcu.platform.microtvm.microtvm_zephyr_target"]], "mlonmcu.platform.mlif package": [[38, "mlonmcu-platform-mlif-package"]], "mlonmcu.platform.mlif.mlif module": [[38, "module-mlonmcu.platform.mlif.mlif"]], "mlonmcu.platform.mlif.mlif_target module": [[38, "module-mlonmcu.platform.mlif.mlif_target"]], "mlonmcu.platform.tvm package": [[39, "mlonmcu-platform-tvm-package"]], "mlonmcu.platform.tvm.tvm module": [[39, "module-mlonmcu.platform.tvm.tvm"]], "mlonmcu.platform.tvm.tvm_backend module": [[39, "module-mlonmcu.platform.tvm.tvm_backend"]], "mlonmcu.platform.tvm.tvm_base_platform module": [[39, "module-mlonmcu.platform.tvm.tvm_base_platform"]], "mlonmcu.platform.tvm.tvm_build_platform module": [[39, "module-mlonmcu.platform.tvm.tvm_build_platform"]], "mlonmcu.platform.tvm.tvm_rpc_platform module": [[39, "module-mlonmcu.platform.tvm.tvm_rpc_platform"]], "mlonmcu.platform.tvm.tvm_target module": [[39, "module-mlonmcu.platform.tvm.tvm_target"]], "mlonmcu.platform.tvm.tvm_target_platform module": [[39, "module-mlonmcu.platform.tvm.tvm_target_platform"]], "mlonmcu.platform.tvm.tvm_tune_platform module": [[39, "module-mlonmcu.platform.tvm.tvm_tune_platform"]], "mlonmcu.platform.zephyr package": [[40, "mlonmcu-platform-zephyr-package"]], "mlonmcu.platform.zephyr.zephyr module": [[40, "module-mlonmcu.platform.zephyr.zephyr"]], "mlonmcu.platform.zephyr.zephyr_target module": [[40, "module-mlonmcu.platform.zephyr.zephyr_target"]], "mlonmcu.session package": [[41, "mlonmcu-session-package"]], "mlonmcu.session.run module": [[41, "module-mlonmcu.session.run"]], "mlonmcu.session.session module": [[41, "module-mlonmcu.session.session"]], "mlonmcu.session.postprocess package": [[42, "mlonmcu-session-postprocess-package"]], "mlonmcu.session.postprocess.postprocess module": [[42, "module-mlonmcu.session.postprocess.postprocess"]], "mlonmcu.session.postprocess.postprocesses module": [[42, "module-mlonmcu.session.postprocess.postprocesses"]], "mlonmcu.setup package": [[43, "mlonmcu-setup-package"]], "mlonmcu.setup.cache module": [[43, "module-mlonmcu.setup.cache"]], "mlonmcu.setup.gen_requirements module": [[43, "module-mlonmcu.setup.gen_requirements"]], "mlonmcu.setup.setup module": [[43, "module-mlonmcu.setup.setup"]], "mlonmcu.setup.task module": [[43, "module-mlonmcu.setup.task"]], "mlonmcu.setup.utils module": [[43, "module-mlonmcu.setup.utils"]], "mlonmcu.setup.tasks package": [[44, "mlonmcu-setup-tasks-package"]], "mlonmcu.setup.tasks.ara module": [[44, "module-mlonmcu.setup.tasks.ara"]], "mlonmcu.setup.tasks.arm_gcc module": [[44, "module-mlonmcu.setup.tasks.arm_gcc"]], "mlonmcu.setup.tasks.benchmarks module": [[44, "module-mlonmcu.setup.tasks.benchmarks"]], "mlonmcu.setup.tasks.cmsisnn module": [[44, "module-mlonmcu.setup.tasks.cmsisnn"]], "mlonmcu.setup.tasks.common module": [[44, "module-mlonmcu.setup.tasks.common"]], "mlonmcu.setup.tasks.corev module": [[44, "module-mlonmcu.setup.tasks.corev"]], "mlonmcu.setup.tasks.corstone300 module": [[44, "module-mlonmcu.setup.tasks.corstone300"]], "mlonmcu.setup.tasks.cv32e40p module": [[44, "module-mlonmcu.setup.tasks.cv32e40p"]], "mlonmcu.setup.tasks.dtc module": [[44, "module-mlonmcu.setup.tasks.dtc"]], "mlonmcu.setup.tasks.espidf module": [[44, "module-mlonmcu.setup.tasks.espidf"]], "mlonmcu.setup.tasks.etiss module": [[44, "module-mlonmcu.setup.tasks.etiss"]], "mlonmcu.setup.tasks.layergen module": [[44, "module-mlonmcu.setup.tasks.layergen"]], "mlonmcu.setup.tasks.llvm module": [[44, "module-mlonmcu.setup.tasks.llvm"]], "mlonmcu.setup.tasks.mlif module": [[44, "module-mlonmcu.setup.tasks.mlif"]], "mlonmcu.setup.tasks.muriscvnn module": [[44, "module-mlonmcu.setup.tasks.muriscvnn"]], "mlonmcu.setup.tasks.ovpsim module": [[44, "module-mlonmcu.setup.tasks.ovpsim"]], "mlonmcu.setup.tasks.pulp module": [[44, "module-mlonmcu.setup.tasks.pulp"]], "mlonmcu.setup.tasks.riscv_gcc module": [[44, "module-mlonmcu.setup.tasks.riscv_gcc"]], "mlonmcu.setup.tasks.spike module": [[44, "module-mlonmcu.setup.tasks.spike"]], "mlonmcu.setup.tasks.srecord module": [[44, "module-mlonmcu.setup.tasks.srecord"]], "mlonmcu.setup.tasks.tf module": [[44, "module-mlonmcu.setup.tasks.tf"]], "mlonmcu.setup.tasks.tflite module": [[44, "module-mlonmcu.setup.tasks.tflite"]], "mlonmcu.setup.tasks.tflmc module": [[44, "module-mlonmcu.setup.tasks.tflmc"]], "mlonmcu.setup.tasks.tvm module": [[44, "module-mlonmcu.setup.tasks.tvm"]], "mlonmcu.setup.tasks.utvmcg module": [[44, "module-mlonmcu.setup.tasks.utvmcg"]], "mlonmcu.setup.tasks.verilator module": [[44, "module-mlonmcu.setup.tasks.verilator"]], "mlonmcu.setup.tasks.vicuna module": [[44, "module-mlonmcu.setup.tasks.vicuna"]], "mlonmcu.setup.tasks.zephyr module": [[44, "module-mlonmcu.setup.tasks.zephyr"]], "mlonmcu.target package": [[45, "mlonmcu-target-package"]], "mlonmcu.target.bench module": [[45, "module-mlonmcu.target.bench"]], "mlonmcu.target.common module": [[45, "module-mlonmcu.target.common"]], "mlonmcu.target.elf module": [[45, "module-mlonmcu.target.elf"]], "mlonmcu.target.host_x86 module": [[45, "module-mlonmcu.target.host_x86"]], "mlonmcu.target.metrics module": [[45, "module-mlonmcu.target.metrics"]], "mlonmcu.target.target module": [[45, "module-mlonmcu.target.target"]], "mlonmcu.target.arm package": [[46, "mlonmcu-target-arm-package"]], "mlonmcu.target.arm.corstone300 module": [[46, "module-mlonmcu.target.arm.corstone300"]], "mlonmcu.target.arm.util module": [[46, "module-mlonmcu.target.arm.util"]], "mlonmcu.target.riscv package": [[47, "mlonmcu-target-riscv-package"]], "mlonmcu.target.riscv.ara module": [[47, "module-mlonmcu.target.riscv.ara"]], "mlonmcu.target.riscv.ara_rtl module": [[47, "module-mlonmcu.target.riscv.ara_rtl"]], "mlonmcu.target.riscv.corev_ovpsim module": [[47, "module-mlonmcu.target.riscv.corev_ovpsim"]], "mlonmcu.target.riscv.cv32e40p module": [[47, "module-mlonmcu.target.riscv.cv32e40p"]], "mlonmcu.target.riscv.etiss module": [[47, "module-mlonmcu.target.riscv.etiss"]], "mlonmcu.target.riscv.etiss_pulpino module": [[47, "module-mlonmcu.target.riscv.etiss_pulpino"]], "mlonmcu.target.riscv.gvsoc_pulp module": [[47, "module-mlonmcu.target.riscv.gvsoc_pulp"]], "mlonmcu.target.riscv.ovpsim module": [[47, "module-mlonmcu.target.riscv.ovpsim"]], "mlonmcu.target.riscv.riscv module": [[47, "module-mlonmcu.target.riscv.riscv"]], "mlonmcu.target.riscv.riscv_bext_target module": [[47, "module-mlonmcu.target.riscv.riscv_bext_target"]], "mlonmcu.target.riscv.riscv_pext_target module": [[47, "module-mlonmcu.target.riscv.riscv_pext_target"]], "mlonmcu.target.riscv.riscv_qemu module": [[47, "module-mlonmcu.target.riscv.riscv_qemu"]], "mlonmcu.target.riscv.riscv_vext_target module": [[47, "module-mlonmcu.target.riscv.riscv_vext_target"]], "mlonmcu.target.riscv.spike module": [[47, "module-mlonmcu.target.riscv.spike"]], "mlonmcu.target.riscv.util module": [[47, "module-mlonmcu.target.riscv.util"]], "mlonmcu.target.riscv.vicuna module": [[47, "module-mlonmcu.target.riscv.vicuna"]], "NOTES": [[47, "notes"]], "mlonmcu.testing package": [[48, "mlonmcu-testing-package"]], "mlonmcu.testing.helpers module": [[48, "module-mlonmcu.testing.helpers"]], "mlonmcu.testing.riscv_toolchain module": [[48, "module-mlonmcu.testing.riscv_toolchain"]], "mlonmcu": [[49, "mlonmcu"]], "ML on MCU": [[51, "ml-on-mcu"]], "Getting started": [[51, "getting-started"]], "Prerequisites": [[51, "prerequisites"]], "Ubuntu/Debian": [[51, "ubuntu-debian"]], "Install Release from PyPI": [[51, "install-release-from-pypi"]], "Build Package manually": [[51, "build-package-manually"]], "Docker (Any other OS)": [[51, "docker-any-other-os"]], "Development": [[51, "development"]], "Developers": [[51, "developers"]], "Other": [[51, "other"]]}, "indexentries": {"archive (mlonmcu.artifact.artifactformat attribute)": [[23, "mlonmcu.artifact.ArtifactFormat.ARCHIVE"]], "artifact (class in mlonmcu.artifact)": [[23, "mlonmcu.artifact.Artifact"]], "artifactformat (class in mlonmcu.artifact)": [[23, "mlonmcu.artifact.ArtifactFormat"]], "bin (mlonmcu.artifact.artifactformat attribute)": [[23, "mlonmcu.artifact.ArtifactFormat.BIN"]], "data (mlonmcu.artifact.artifactformat attribute)": [[23, "mlonmcu.artifact.ArtifactFormat.DATA"]], "image (mlonmcu.artifact.artifactformat attribute)": [[23, "mlonmcu.artifact.ArtifactFormat.IMAGE"]], "json (mlonmcu.artifact.artifactformat attribute)": [[23, "mlonmcu.artifact.ArtifactFormat.JSON"]], "mlf (mlonmcu.artifact.artifactformat attribute)": [[23, "mlonmcu.artifact.ArtifactFormat.MLF"]], "model (mlonmcu.artifact.artifactformat attribute)": [[23, "mlonmcu.artifact.ArtifactFormat.MODEL"]], "numpy (mlonmcu.artifact.artifactformat attribute)": [[23, "mlonmcu.artifact.ArtifactFormat.NUMPY"]], "params (mlonmcu.artifact.artifactformat attribute)": [[23, "mlonmcu.artifact.ArtifactFormat.PARAMS"]], "path (mlonmcu.artifact.artifactformat attribute)": [[23, "mlonmcu.artifact.ArtifactFormat.PATH"]], "raw (mlonmcu.artifact.artifactformat attribute)": [[23, "mlonmcu.artifact.ArtifactFormat.RAW"]], "report (class in mlonmcu.report)": [[23, "mlonmcu.report.Report"]], "shared_object (mlonmcu.artifact.artifactformat attribute)": [[23, "mlonmcu.artifact.ArtifactFormat.SHARED_OBJECT"]], "source (mlonmcu.artifact.artifactformat attribute)": [[23, "mlonmcu.artifact.ArtifactFormat.SOURCE"]], "text (mlonmcu.artifact.artifactformat attribute)": [[23, "mlonmcu.artifact.ArtifactFormat.TEXT"]], "unknown (mlonmcu.artifact.artifactformat attribute)": [[23, "mlonmcu.artifact.ArtifactFormat.UNKNOWN"]], "add() (mlonmcu.report.report method)": [[23, "mlonmcu.report.Report.add"]], "ask_user() (in module mlonmcu.utils)": [[23, "mlonmcu.utils.ask_user"]], "df (mlonmcu.report.report property)": [[23, "mlonmcu.report.Report.df"]], "exec_timeout() (in module mlonmcu.timeout)": [[23, "mlonmcu.timeout.exec_timeout"]], "export() (mlonmcu.artifact.artifact method)": [[23, "mlonmcu.artifact.Artifact.export"]], "export() (mlonmcu.report.report method)": [[23, "mlonmcu.report.Report.export"]], "exported (mlonmcu.artifact.artifact property)": [[23, "mlonmcu.artifact.Artifact.exported"]], "filter_config() (in module mlonmcu.config)": [[23, "mlonmcu.config.filter_config"]], "filter_none() (in module mlonmcu.utils)": [[23, "mlonmcu.utils.filter_none"]], "get_base_prefix_compat() (in module mlonmcu.utils)": [[23, "mlonmcu.utils.get_base_prefix_compat"]], "get_formatter() (in module mlonmcu.logging)": [[23, "mlonmcu.logging.get_formatter"]], "get_logger() (in module mlonmcu.logging)": [[23, "mlonmcu.logging.get_logger"]], "in_virtualenv() (in module mlonmcu.utils)": [[23, "mlonmcu.utils.in_virtualenv"]], "is_power_of_two() (in module mlonmcu.utils)": [[23, "mlonmcu.utils.is_power_of_two"]], "lookup_artifacts() (in module mlonmcu.artifact)": [[23, "mlonmcu.artifact.lookup_artifacts"]], "mlonmcu": [[23, "module-mlonmcu"]], "mlonmcu.artifact": [[23, "module-mlonmcu.artifact"]], "mlonmcu.config": [[23, "module-mlonmcu.config"]], "mlonmcu.logging": [[23, "module-mlonmcu.logging"]], "mlonmcu.mlonmcu": [[23, "module-mlonmcu.mlonmcu"]], "mlonmcu.plugins": [[23, "module-mlonmcu.plugins"]], "mlonmcu.report": [[23, "module-mlonmcu.report"]], "mlonmcu.timeout": [[23, "module-mlonmcu.timeout"]], "mlonmcu.utils": [[23, "module-mlonmcu.utils"]], "mlonmcu.version": [[23, "module-mlonmcu.version"]], "module": [[23, "module-mlonmcu"], [23, "module-mlonmcu.artifact"], [23, "module-mlonmcu.config"], [23, "module-mlonmcu.logging"], [23, "module-mlonmcu.mlonmcu"], [23, "module-mlonmcu.plugins"], [23, "module-mlonmcu.report"], [23, "module-mlonmcu.timeout"], [23, "module-mlonmcu.utils"], [23, "module-mlonmcu.version"], [24, "module-mlonmcu.cli"], [24, "module-mlonmcu.cli.build"], [24, "module-mlonmcu.cli.cleanup"], [24, "module-mlonmcu.cli.common"], [24, "module-mlonmcu.cli.compile"], [24, "module-mlonmcu.cli.env"], [24, "module-mlonmcu.cli.export"], [24, "module-mlonmcu.cli.flow"], [24, "module-mlonmcu.cli.init"], [24, "module-mlonmcu.cli.load"], [24, "module-mlonmcu.cli.main"], [24, "module-mlonmcu.cli.models"], [24, "module-mlonmcu.cli.run"], [24, "module-mlonmcu.cli.setup"], [24, "module-mlonmcu.cli.tune"], [25, "module-mlonmcu.cli.helper"], [25, "module-mlonmcu.cli.helper.filter"], [25, "module-mlonmcu.cli.helper.parse"], [26, "module-mlonmcu.context"], [26, "module-mlonmcu.context.context"], [26, "module-mlonmcu.context.read_write_filelock"], [27, "module-mlonmcu.environment"], [27, "module-mlonmcu.environment.config"], [27, "module-mlonmcu.environment.environment"], [27, "module-mlonmcu.environment.init"], [27, "module-mlonmcu.environment.list"], [27, "module-mlonmcu.environment.loader"], [27, "module-mlonmcu.environment.templates"], [27, "module-mlonmcu.environment.writer"], [28, "module-mlonmcu.feature"], [28, "module-mlonmcu.feature.feature"], [28, "module-mlonmcu.feature.features"], [28, "module-mlonmcu.feature.type"], [29, "module-mlonmcu.flow"], [29, "module-mlonmcu.flow.backend"], [29, "module-mlonmcu.flow.framework"], [30, "module-mlonmcu.flow.tflm"], [30, "module-mlonmcu.flow.tflm.framework"], [31, "module-mlonmcu.flow.tflm.backend"], [31, "module-mlonmcu.flow.tflm.backend.backend"], [31, "module-mlonmcu.flow.tflm.backend.tflmc"], [31, "module-mlonmcu.flow.tflm.backend.tflmi"], [32, "module-mlonmcu.flow.tvm"], [32, "module-mlonmcu.flow.tvm.framework"], [33, "module-mlonmcu.flow.tvm.backend"], [33, "module-mlonmcu.flow.tvm.backend.backend"], [33, "module-mlonmcu.flow.tvm.backend.model_info"], [33, "module-mlonmcu.flow.tvm.backend.python_utils"], [33, "module-mlonmcu.flow.tvm.backend.tuner"], [33, "module-mlonmcu.flow.tvm.backend.tvmaot"], [33, "module-mlonmcu.flow.tvm.backend.tvmaotplus"], [33, "module-mlonmcu.flow.tvm.backend.tvmc_utils"], [33, "module-mlonmcu.flow.tvm.backend.tvmcg"], [33, "module-mlonmcu.flow.tvm.backend.tvmllvm"], [33, "module-mlonmcu.flow.tvm.backend.tvmrt"], [33, "module-mlonmcu.flow.tvm.backend.wrapper"], [34, "module-mlonmcu.models"], [34, "module-mlonmcu.models.convert_data"], [34, "module-mlonmcu.models.frontend"], [34, "module-mlonmcu.models.group"], [34, "module-mlonmcu.models.lookup"], [34, "module-mlonmcu.models.metadata"], [34, "module-mlonmcu.models.model"], [34, "module-mlonmcu.models.options"], [34, "module-mlonmcu.models.utils"], [35, "module-mlonmcu.platform"], [35, "module-mlonmcu.platform.lookup"], [35, "module-mlonmcu.platform.platform"], [36, "module-mlonmcu.platform.espidf"], [36, "module-mlonmcu.platform.espidf.espidf"], [36, "module-mlonmcu.platform.espidf.espidf_target"], [37, "module-mlonmcu.platform.microtvm"], [37, "module-mlonmcu.platform.microtvm.microtvm"], [37, "module-mlonmcu.platform.microtvm.microtvm_arduino_target"], [37, "module-mlonmcu.platform.microtvm.microtvm_backend"], [37, "module-mlonmcu.platform.microtvm.microtvm_base_platform"], [37, "module-mlonmcu.platform.microtvm.microtvm_build_platform"], [37, "module-mlonmcu.platform.microtvm.microtvm_compile_platform"], [37, "module-mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target"], [37, "module-mlonmcu.platform.microtvm.microtvm_espidf_target"], [37, "module-mlonmcu.platform.microtvm.microtvm_etiss_target"], [37, "module-mlonmcu.platform.microtvm.microtvm_host_target"], [37, "module-mlonmcu.platform.microtvm.microtvm_mlonmcu_target"], [37, "module-mlonmcu.platform.microtvm.microtvm_spike_target"], [37, "module-mlonmcu.platform.microtvm.microtvm_target"], [37, "module-mlonmcu.platform.microtvm.microtvm_target_platform"], [37, "module-mlonmcu.platform.microtvm.microtvm_template_target"], [37, "module-mlonmcu.platform.microtvm.microtvm_tune_platform"], [37, "module-mlonmcu.platform.microtvm.microtvm_zephyr_target"], [38, "module-mlonmcu.platform.mlif"], [38, "module-mlonmcu.platform.mlif.mlif"], [38, "module-mlonmcu.platform.mlif.mlif_target"], [39, "module-mlonmcu.platform.tvm"], [39, "module-mlonmcu.platform.tvm.tvm"], [39, "module-mlonmcu.platform.tvm.tvm_backend"], [39, "module-mlonmcu.platform.tvm.tvm_base_platform"], [39, "module-mlonmcu.platform.tvm.tvm_build_platform"], [39, "module-mlonmcu.platform.tvm.tvm_rpc_platform"], [39, "module-mlonmcu.platform.tvm.tvm_target"], [39, "module-mlonmcu.platform.tvm.tvm_target_platform"], [39, "module-mlonmcu.platform.tvm.tvm_tune_platform"], [40, "module-mlonmcu.platform.zephyr"], [40, "module-mlonmcu.platform.zephyr.zephyr"], [40, "module-mlonmcu.platform.zephyr.zephyr_target"], [41, "module-mlonmcu.session"], [41, "module-mlonmcu.session.run"], [41, "module-mlonmcu.session.session"], [42, "module-mlonmcu.session.postprocess"], [42, "module-mlonmcu.session.postprocess.postprocess"], [42, "module-mlonmcu.session.postprocess.postprocesses"], [43, "module-mlonmcu.setup"], [43, "module-mlonmcu.setup.cache"], [43, "module-mlonmcu.setup.gen_requirements"], [43, "module-mlonmcu.setup.setup"], [43, "module-mlonmcu.setup.task"], [43, "module-mlonmcu.setup.utils"], [44, "module-mlonmcu.setup.tasks"], [44, "module-mlonmcu.setup.tasks.ara"], [44, "module-mlonmcu.setup.tasks.arm_gcc"], [44, "module-mlonmcu.setup.tasks.benchmarks"], [44, "module-mlonmcu.setup.tasks.cmsisnn"], [44, "module-mlonmcu.setup.tasks.common"], [44, "module-mlonmcu.setup.tasks.corev"], [44, "module-mlonmcu.setup.tasks.corstone300"], [44, "module-mlonmcu.setup.tasks.cv32e40p"], [44, "module-mlonmcu.setup.tasks.dtc"], [44, "module-mlonmcu.setup.tasks.espidf"], [44, "module-mlonmcu.setup.tasks.etiss"], [44, "module-mlonmcu.setup.tasks.layergen"], [44, "module-mlonmcu.setup.tasks.llvm"], [44, "module-mlonmcu.setup.tasks.mlif"], [44, "module-mlonmcu.setup.tasks.muriscvnn"], [44, "module-mlonmcu.setup.tasks.ovpsim"], [44, "module-mlonmcu.setup.tasks.pulp"], [44, "module-mlonmcu.setup.tasks.riscv_gcc"], [44, "module-mlonmcu.setup.tasks.spike"], [44, "module-mlonmcu.setup.tasks.srecord"], [44, "module-mlonmcu.setup.tasks.tf"], [44, "module-mlonmcu.setup.tasks.tflite"], [44, "module-mlonmcu.setup.tasks.tflmc"], [44, "module-mlonmcu.setup.tasks.tvm"], [44, "module-mlonmcu.setup.tasks.utvmcg"], [44, "module-mlonmcu.setup.tasks.verilator"], [44, "module-mlonmcu.setup.tasks.vicuna"], [44, "module-mlonmcu.setup.tasks.zephyr"], [45, "module-mlonmcu.target"], [45, "module-mlonmcu.target.bench"], [45, "module-mlonmcu.target.common"], [45, "module-mlonmcu.target.elf"], [45, "module-mlonmcu.target.host_x86"], [45, "module-mlonmcu.target.metrics"], [45, "module-mlonmcu.target.target"], [46, "module-mlonmcu.target.arm"], [46, "module-mlonmcu.target.arm.corstone300"], [46, "module-mlonmcu.target.arm.util"], [47, "module-mlonmcu.target.riscv"], [47, "module-mlonmcu.target.riscv.ara"], [47, "module-mlonmcu.target.riscv.ara_rtl"], [47, "module-mlonmcu.target.riscv.corev_ovpsim"], [47, "module-mlonmcu.target.riscv.cv32e40p"], [47, "module-mlonmcu.target.riscv.etiss"], [47, "module-mlonmcu.target.riscv.etiss_pulpino"], [47, "module-mlonmcu.target.riscv.gvsoc_pulp"], [47, "module-mlonmcu.target.riscv.ovpsim"], [47, "module-mlonmcu.target.riscv.riscv"], [47, "module-mlonmcu.target.riscv.riscv_bext_target"], [47, "module-mlonmcu.target.riscv.riscv_pext_target"], [47, "module-mlonmcu.target.riscv.riscv_qemu"], [47, "module-mlonmcu.target.riscv.riscv_vext_target"], [47, "module-mlonmcu.target.riscv.spike"], [47, "module-mlonmcu.target.riscv.util"], [47, "module-mlonmcu.target.riscv.vicuna"], [48, "module-mlonmcu.testing"], [48, "module-mlonmcu.testing.helpers"], [48, "module-mlonmcu.testing.riscv_toolchain"]], "print_summary() (mlonmcu.artifact.artifact method)": [[23, "mlonmcu.artifact.Artifact.print_summary"]], "process_extensions() (in module mlonmcu.plugins)": [[23, "mlonmcu.plugins.process_extensions"]], "remove_config_prefix() (in module mlonmcu.config)": [[23, "mlonmcu.config.remove_config_prefix"]], "resolve_required_config() (in module mlonmcu.config)": [[23, "mlonmcu.config.resolve_required_config"]], "set() (mlonmcu.report.report method)": [[23, "mlonmcu.report.Report.set"]], "set_log_file() (in module mlonmcu.logging)": [[23, "mlonmcu.logging.set_log_file"]], "set_log_level() (in module mlonmcu.logging)": [[23, "mlonmcu.logging.set_log_level"]], "set_main() (mlonmcu.report.report method)": [[23, "mlonmcu.report.Report.set_main"]], "set_post() (mlonmcu.report.report method)": [[23, "mlonmcu.report.Report.set_post"]], "set_pre() (mlonmcu.report.report method)": [[23, "mlonmcu.report.Report.set_pre"]], "str2bool() (in module mlonmcu.config)": [[23, "mlonmcu.config.str2bool"]], "str2dict() (in module mlonmcu.config)": [[23, "mlonmcu.config.str2dict"]], "str2list() (in module mlonmcu.config)": [[23, "mlonmcu.config.str2list"]], "validate() (mlonmcu.artifact.artifact method)": [[23, "mlonmcu.artifact.Artifact.validate"]], "environmenthint (class in mlonmcu.cli.env)": [[24, "mlonmcu.cli.env.EnvironmentHint"]], "add_build_options() (in module mlonmcu.cli.build)": [[24, "mlonmcu.cli.build.add_build_options"]], "add_common_options() (in module mlonmcu.cli.common)": [[24, "mlonmcu.cli.common.add_common_options"]], "add_compile_options() (in module mlonmcu.cli.compile)": [[24, "mlonmcu.cli.compile.add_compile_options"]], "add_context_options() (in module mlonmcu.cli.common)": [[24, "mlonmcu.cli.common.add_context_options"]], "add_export_options() (in module mlonmcu.cli.export)": [[24, "mlonmcu.cli.export.add_export_options"]], "add_flow_options() (in module mlonmcu.cli.common)": [[24, "mlonmcu.cli.common.add_flow_options"]], "add_init_options() (in module mlonmcu.cli.init)": [[24, "mlonmcu.cli.init.add_init_options"]], "add_load_options() (in module mlonmcu.cli.load)": [[24, "mlonmcu.cli.load.add_load_options"]], "add_model_options() (in module mlonmcu.cli.common)": [[24, "mlonmcu.cli.common.add_model_options"]], "add_models_options() (in module mlonmcu.cli.models)": [[24, "mlonmcu.cli.models.add_models_options"]], "add_run_options() (in module mlonmcu.cli.run)": [[24, "mlonmcu.cli.run.add_run_options"]], "add_setup_options() (in module mlonmcu.cli.setup)": [[24, "mlonmcu.cli.setup.add_setup_options"]], "check_args() (in module mlonmcu.cli.compile)": [[24, "mlonmcu.cli.compile.check_args"]], "check_args() (in module mlonmcu.cli.run)": [[24, "mlonmcu.cli.run.check_args"]], "get_parser() (in module mlonmcu.cli.build)": [[24, "mlonmcu.cli.build.get_parser"]], "get_parser() (in module mlonmcu.cli.cleanup)": [[24, "mlonmcu.cli.cleanup.get_parser"]], "get_parser() (in module mlonmcu.cli.compile)": [[24, "mlonmcu.cli.compile.get_parser"]], "get_parser() (in module mlonmcu.cli.env)": [[24, "mlonmcu.cli.env.get_parser"]], "get_parser() (in module mlonmcu.cli.export)": [[24, "mlonmcu.cli.export.get_parser"]], "get_parser() (in module mlonmcu.cli.flow)": [[24, "mlonmcu.cli.flow.get_parser"]], "get_parser() (in module mlonmcu.cli.init)": [[24, "mlonmcu.cli.init.get_parser"]], "get_parser() (in module mlonmcu.cli.load)": [[24, "mlonmcu.cli.load.get_parser"]], "get_parser() (in module mlonmcu.cli.models)": [[24, "mlonmcu.cli.models.get_parser"]], "get_parser() (in module mlonmcu.cli.run)": [[24, "mlonmcu.cli.run.get_parser"]], "get_parser() (in module mlonmcu.cli.setup)": [[24, "mlonmcu.cli.setup.get_parser"]], "get_parser() (in module mlonmcu.cli.tune)": [[24, "mlonmcu.cli.tune.get_parser"]], "handle() (in module mlonmcu.cli.build)": [[24, "mlonmcu.cli.build.handle"]], "handle() (in module mlonmcu.cli.cleanup)": [[24, "mlonmcu.cli.cleanup.handle"]], "handle() (in module mlonmcu.cli.compile)": [[24, "mlonmcu.cli.compile.handle"]], "handle() (in module mlonmcu.cli.env)": [[24, "mlonmcu.cli.env.handle"]], "handle() (in module mlonmcu.cli.export)": [[24, "mlonmcu.cli.export.handle"]], "handle() (in module mlonmcu.cli.flow)": [[24, "mlonmcu.cli.flow.handle"]], "handle() (in module mlonmcu.cli.init)": [[24, "mlonmcu.cli.init.handle"]], "handle() (in module mlonmcu.cli.load)": [[24, "mlonmcu.cli.load.handle"]], "handle() (in module mlonmcu.cli.models)": [[24, "mlonmcu.cli.models.handle"]], "handle() (in module mlonmcu.cli.run)": [[24, "mlonmcu.cli.run.handle"]], "handle() (in module mlonmcu.cli.setup)": [[24, "mlonmcu.cli.setup.handle"]], "handle() (in module mlonmcu.cli.tune)": [[24, "mlonmcu.cli.tune.handle"]], "handle_docker() (in module mlonmcu.cli.main)": [[24, "mlonmcu.cli.main.handle_docker"]], "handle_list_targets() (in module mlonmcu.cli.flow)": [[24, "mlonmcu.cli.flow.handle_list_targets"]], "handle_logging_flags() (in module mlonmcu.cli.common)": [[24, "mlonmcu.cli.common.handle_logging_flags"]], "kickoff_runs() (in module mlonmcu.cli.common)": [[24, "mlonmcu.cli.common.kickoff_runs"]], "lookup_user_environments() (in module mlonmcu.cli.env)": [[24, "mlonmcu.cli.env.lookup_user_environments"]], "main() (in module mlonmcu.cli.main)": [[24, "mlonmcu.cli.main.main"]], "mlonmcu.cli": [[24, "module-mlonmcu.cli"]], "mlonmcu.cli.build": [[24, "module-mlonmcu.cli.build"]], "mlonmcu.cli.cleanup": [[24, "module-mlonmcu.cli.cleanup"]], "mlonmcu.cli.common": [[24, "module-mlonmcu.cli.common"]], "mlonmcu.cli.compile": [[24, "module-mlonmcu.cli.compile"]], "mlonmcu.cli.env": [[24, "module-mlonmcu.cli.env"]], "mlonmcu.cli.export": [[24, "module-mlonmcu.cli.export"]], "mlonmcu.cli.flow": [[24, "module-mlonmcu.cli.flow"]], "mlonmcu.cli.init": [[24, "module-mlonmcu.cli.init"]], "mlonmcu.cli.load": [[24, "module-mlonmcu.cli.load"]], "mlonmcu.cli.main": [[24, "module-mlonmcu.cli.main"]], "mlonmcu.cli.models": [[24, "module-mlonmcu.cli.models"]], "mlonmcu.cli.run": [[24, "module-mlonmcu.cli.run"]], "mlonmcu.cli.setup": [[24, "module-mlonmcu.cli.setup"]], "mlonmcu.cli.tune": [[24, "module-mlonmcu.cli.tune"]], "extract_backend_names() (in module mlonmcu.cli.helper.parse)": [[25, "mlonmcu.cli.helper.parse.extract_backend_names"]], "extract_config() (in module mlonmcu.cli.helper.parse)": [[25, "mlonmcu.cli.helper.parse.extract_config"]], "extract_config_and_feature_names() (in module mlonmcu.cli.helper.parse)": [[25, "mlonmcu.cli.helper.parse.extract_config_and_feature_names"]], "extract_feature_names() (in module mlonmcu.cli.helper.parse)": [[25, "mlonmcu.cli.helper.parse.extract_feature_names"]], "extract_frontend_names() (in module mlonmcu.cli.helper.parse)": [[25, "mlonmcu.cli.helper.parse.extract_frontend_names"]], "extract_platform_names() (in module mlonmcu.cli.helper.parse)": [[25, "mlonmcu.cli.helper.parse.extract_platform_names"]], "extract_postprocess_names() (in module mlonmcu.cli.helper.parse)": [[25, "mlonmcu.cli.helper.parse.extract_postprocess_names"]], "extract_target_names() (in module mlonmcu.cli.helper.parse)": [[25, "mlonmcu.cli.helper.parse.extract_target_names"]], "filter_arg() (in module mlonmcu.cli.helper.filter)": [[25, "mlonmcu.cli.helper.filter.filter_arg"]], "mlonmcu.cli.helper": [[25, "module-mlonmcu.cli.helper"]], "mlonmcu.cli.helper.filter": [[25, "module-mlonmcu.cli.helper.filter"]], "mlonmcu.cli.helper.parse": [[25, "module-mlonmcu.cli.helper.parse"]], "parse_var() (in module mlonmcu.cli.helper.parse)": [[25, "mlonmcu.cli.helper.parse.parse_var"]], "parse_vars() (in module mlonmcu.cli.helper.parse)": [[25, "mlonmcu.cli.helper.parse.parse_vars"]], "mlonmcucontext (class in mlonmcu.context)": [[26, "mlonmcu.context.MlonMcuContext"]], "mlonmcucontext (class in mlonmcu.context.context)": [[26, "mlonmcu.context.context.MlonMcuContext"]], "rwlocktimeout": [[26, "mlonmcu.context.read_write_filelock.RWLockTimeout"]], "readfilelock (class in mlonmcu.context.read_write_filelock)": [[26, "mlonmcu.context.read_write_filelock.ReadFileLock"]], "writefilelock (class in mlonmcu.context.read_write_filelock)": [[26, "mlonmcu.context.read_write_filelock.WriteFileLock"]], "acquire() (mlonmcu.context.read_write_filelock.readfilelock method)": [[26, "mlonmcu.context.read_write_filelock.ReadFileLock.acquire"]], "acquire() (mlonmcu.context.read_write_filelock.writefilelock method)": [[26, "mlonmcu.context.read_write_filelock.WriteFileLock.acquire"]], "cleanup() (mlonmcu.context.mlonmcucontext method)": [[26, "mlonmcu.context.MlonMcuContext.cleanup"]], "cleanup() (mlonmcu.context.context.mlonmcucontext method)": [[26, "mlonmcu.context.context.MlonMcuContext.cleanup"]], "cleanup_sessions() (mlonmcu.context.mlonmcucontext method)": [[26, "mlonmcu.context.MlonMcuContext.cleanup_sessions"]], "cleanup_sessions() (mlonmcu.context.context.mlonmcucontext method)": [[26, "mlonmcu.context.context.MlonMcuContext.cleanup_sessions"]], "create_session() (mlonmcu.context.mlonmcucontext method)": [[26, "mlonmcu.context.MlonMcuContext.create_session"]], "create_session() (mlonmcu.context.context.mlonmcucontext method)": [[26, "mlonmcu.context.context.MlonMcuContext.create_session"]], "export() (mlonmcu.context.mlonmcucontext method)": [[26, "mlonmcu.context.MlonMcuContext.export"]], "export() (mlonmcu.context.context.mlonmcucontext method)": [[26, "mlonmcu.context.context.MlonMcuContext.export"]], "get_environment_by_name() (in module mlonmcu.context.context)": [[26, "mlonmcu.context.context.get_environment_by_name"]], "get_environment_by_path() (in module mlonmcu.context.context)": [[26, "mlonmcu.context.context.get_environment_by_path"]], "get_ids() (in module mlonmcu.context.context)": [[26, "mlonmcu.context.context.get_ids"]], "get_session() (mlonmcu.context.mlonmcucontext method)": [[26, "mlonmcu.context.MlonMcuContext.get_session"]], "get_session() (mlonmcu.context.context.mlonmcucontext method)": [[26, "mlonmcu.context.context.MlonMcuContext.get_session"]], "get_sessions_runs_idx() (mlonmcu.context.mlonmcucontext method)": [[26, "mlonmcu.context.MlonMcuContext.get_sessions_runs_idx"]], "get_sessions_runs_idx() (mlonmcu.context.context.mlonmcucontext method)": [[26, "mlonmcu.context.context.MlonMcuContext.get_sessions_runs_idx"]], "is_clean (mlonmcu.context.mlonmcucontext property)": [[26, "mlonmcu.context.MlonMcuContext.is_clean"]], "is_clean (mlonmcu.context.context.mlonmcucontext property)": [[26, "mlonmcu.context.context.MlonMcuContext.is_clean"]], "is_locked (mlonmcu.context.read_write_filelock.readfilelock property)": [[26, "mlonmcu.context.read_write_filelock.ReadFileLock.is_locked"]], "is_locked (mlonmcu.context.read_write_filelock.writefilelock property)": [[26, "mlonmcu.context.read_write_filelock.WriteFileLock.is_locked"]], "load_cache() (mlonmcu.context.mlonmcucontext method)": [[26, "mlonmcu.context.MlonMcuContext.load_cache"]], "load_cache() (mlonmcu.context.context.mlonmcucontext method)": [[26, "mlonmcu.context.context.MlonMcuContext.load_cache"]], "load_extensions() (mlonmcu.context.mlonmcucontext method)": [[26, "mlonmcu.context.MlonMcuContext.load_extensions"]], "load_extensions() (mlonmcu.context.context.mlonmcucontext method)": [[26, "mlonmcu.context.context.MlonMcuContext.load_extensions"]], "load_recent_sessions() (in module mlonmcu.context.context)": [[26, "mlonmcu.context.context.load_recent_sessions"]], "lock (mlonmcu.context.read_write_filelock.rwlocktimeout attribute)": [[26, "mlonmcu.context.read_write_filelock.RWLockTimeout.lock"]], "lookup() (mlonmcu.context.mlonmcucontext method)": [[26, "mlonmcu.context.MlonMcuContext.lookup"]], "lookup() (mlonmcu.context.context.mlonmcucontext method)": [[26, "mlonmcu.context.context.MlonMcuContext.lookup"]], "lookup_environment() (in module mlonmcu.context.context)": [[26, "mlonmcu.context.context.lookup_environment"]], "mlonmcu.context": [[26, "module-mlonmcu.context"]], "mlonmcu.context.context": [[26, "module-mlonmcu.context.context"]], "mlonmcu.context.read_write_filelock": [[26, "module-mlonmcu.context.read_write_filelock"]], "print_summary() (mlonmcu.context.mlonmcucontext method)": [[26, "mlonmcu.context.MlonMcuContext.print_summary"]], "print_summary() (mlonmcu.context.context.mlonmcucontext method)": [[26, "mlonmcu.context.context.MlonMcuContext.print_summary"]], "release() (mlonmcu.context.read_write_filelock.readfilelock method)": [[26, "mlonmcu.context.read_write_filelock.ReadFileLock.release"]], "release() (mlonmcu.context.read_write_filelock.writefilelock method)": [[26, "mlonmcu.context.read_write_filelock.WriteFileLock.release"]], "resolve_environment_file() (in module mlonmcu.context.context)": [[26, "mlonmcu.context.context.resolve_environment_file"]], "setup_logging() (in module mlonmcu.context.context)": [[26, "mlonmcu.context.context.setup_logging"]], "backend (mlonmcu.environment.config.featurekind attribute)": [[27, "mlonmcu.environment.config.FeatureKind.BACKEND"]], "backendconfig (class in mlonmcu.environment.config)": [[27, "mlonmcu.environment.config.BackendConfig"]], "backendfeatureconfig (class in mlonmcu.environment.config)": [[27, "mlonmcu.environment.config.BackendFeatureConfig"]], "baseconfig (class in mlonmcu.environment.config)": [[27, "mlonmcu.environment.config.BaseConfig"]], "defaultenvironment (class in mlonmcu.environment.environment)": [[27, "mlonmcu.environment.environment.DefaultEnvironment"]], "defaultsconfig (class in mlonmcu.environment.config)": [[27, "mlonmcu.environment.config.DefaultsConfig"]], "environment (class in mlonmcu.environment.environment)": [[27, "mlonmcu.environment.environment.Environment"]], "framework (mlonmcu.environment.config.featurekind attribute)": [[27, "mlonmcu.environment.config.FeatureKind.FRAMEWORK"]], "frontend (mlonmcu.environment.config.featurekind attribute)": [[27, "mlonmcu.environment.config.FeatureKind.FRONTEND"]], "featureconfig (class in mlonmcu.environment.config)": [[27, "mlonmcu.environment.config.FeatureConfig"]], "featurekind (class in mlonmcu.environment.config)": [[27, "mlonmcu.environment.config.FeatureKind"]], "frameworkconfig (class in mlonmcu.environment.config)": [[27, "mlonmcu.environment.config.FrameworkConfig"]], "frameworkfeatureconfig (class in mlonmcu.environment.config)": [[27, "mlonmcu.environment.config.FrameworkFeatureConfig"]], "frontendconfig (class in mlonmcu.environment.config)": [[27, "mlonmcu.environment.config.FrontendConfig"]], "frontendfeatureconfig (class in mlonmcu.environment.config)": [[27, "mlonmcu.environment.config.FrontendFeatureConfig"]], "pathconfig (class in mlonmcu.environment.config)": [[27, "mlonmcu.environment.config.PathConfig"]], "platformconfig (class in mlonmcu.environment.config)": [[27, "mlonmcu.environment.config.PlatformConfig"]], "platformfeatureconfig (class in mlonmcu.environment.config)": [[27, "mlonmcu.environment.config.PlatformFeatureConfig"]], "repoconfig (class in mlonmcu.environment.config)": [[27, "mlonmcu.environment.config.RepoConfig"]], "target (mlonmcu.environment.config.featurekind attribute)": [[27, "mlonmcu.environment.config.FeatureKind.TARGET"]], "targetconfig (class in mlonmcu.environment.config)": [[27, "mlonmcu.environment.config.TargetConfig"]], "targetfeatureconfig (class in mlonmcu.environment.config)": [[27, "mlonmcu.environment.config.TargetFeatureConfig"]], "unknown (mlonmcu.environment.config.featurekind attribute)": [[27, "mlonmcu.environment.config.FeatureKind.UNKNOWN"]], "userenvironment (class in mlonmcu.environment.environment)": [[27, "mlonmcu.environment.environment.UserEnvironment"]], "clone_models_repo() (in module mlonmcu.environment.init)": [[27, "mlonmcu.environment.init.clone_models_repo"]], "create_environment_dict() (in module mlonmcu.environment.writer)": [[27, "mlonmcu.environment.writer.create_environment_dict"]], "create_environment_directories() (in module mlonmcu.environment.init)": [[27, "mlonmcu.environment.init.create_environment_directories"]], "create_venv_directory() (in module mlonmcu.environment.init)": [[27, "mlonmcu.environment.init.create_venv_directory"]], "fill_environment_yaml() (in module mlonmcu.environment.templates)": [[27, "mlonmcu.environment.templates.fill_environment_yaml"]], "fill_template() (in module mlonmcu.environment.templates)": [[27, "mlonmcu.environment.templates.fill_template"]], "from_file() (mlonmcu.environment.environment.environment class method)": [[27, "mlonmcu.environment.environment.Environment.from_file"]], "get_alternative_name() (in module mlonmcu.environment.list)": [[27, "mlonmcu.environment.list.get_alternative_name"]], "get_config_dir() (in module mlonmcu.environment.config)": [[27, "mlonmcu.environment.config.get_config_dir"]], "get_default_backends() (mlonmcu.environment.environment.environment method)": [[27, "mlonmcu.environment.environment.Environment.get_default_backends"]], "get_default_frameworks() (mlonmcu.environment.environment.environment method)": [[27, "mlonmcu.environment.environment.Environment.get_default_frameworks"]], "get_default_targets() (mlonmcu.environment.environment.environment method)": [[27, "mlonmcu.environment.environment.Environment.get_default_targets"]], "get_environment_names() (in module mlonmcu.environment.list)": [[27, "mlonmcu.environment.list.get_environment_names"]], "get_environments_dir() (in module mlonmcu.environment.config)": [[27, "mlonmcu.environment.config.get_environments_dir"]], "get_environments_file() (in module mlonmcu.environment.config)": [[27, "mlonmcu.environment.config.get_environments_file"]], "get_environments_map() (in module mlonmcu.environment.list)": [[27, "mlonmcu.environment.list.get_environments_map"]], "get_plugins_dir() (in module mlonmcu.environment.config)": [[27, "mlonmcu.environment.config.get_plugins_dir"]], "get_template_names() (in module mlonmcu.environment.templates)": [[27, "mlonmcu.environment.templates.get_template_names"]], "get_template_text() (in module mlonmcu.environment.templates)": [[27, "mlonmcu.environment.templates.get_template_text"]], "has_backend() (mlonmcu.environment.environment.environment method)": [[27, "mlonmcu.environment.environment.Environment.has_backend"]], "has_feature() (mlonmcu.environment.environment.environment method)": [[27, "mlonmcu.environment.environment.Environment.has_feature"]], "has_framework() (mlonmcu.environment.environment.environment method)": [[27, "mlonmcu.environment.environment.Environment.has_framework"]], "has_frontend() (mlonmcu.environment.environment.environment method)": [[27, "mlonmcu.environment.environment.Environment.has_frontend"]], "has_platform() (mlonmcu.environment.environment.environment method)": [[27, "mlonmcu.environment.environment.Environment.has_platform"]], "has_target() (mlonmcu.environment.environment.environment method)": [[27, "mlonmcu.environment.environment.Environment.has_target"]], "has_toolchain() (mlonmcu.environment.environment.environment method)": [[27, "mlonmcu.environment.environment.Environment.has_toolchain"]], "home (mlonmcu.environment.environment.environment property)": [[27, "mlonmcu.environment.environment.Environment.home"]], "init_config_dir() (in module mlonmcu.environment.config)": [[27, "mlonmcu.environment.config.init_config_dir"]], "initialize_environment() (in module mlonmcu.environment.init)": [[27, "mlonmcu.environment.init.initialize_environment"]], "load_environment_from_file() (in module mlonmcu.environment.loader)": [[27, "mlonmcu.environment.loader.load_environment_from_file"]], "lookup_backend_configs() (mlonmcu.environment.environment.environment method)": [[27, "mlonmcu.environment.environment.Environment.lookup_backend_configs"]], "lookup_backend_feature_configs() (mlonmcu.environment.environment.environment method)": [[27, "mlonmcu.environment.environment.Environment.lookup_backend_feature_configs"]], "lookup_feature_configs() (mlonmcu.environment.environment.environment method)": [[27, "mlonmcu.environment.environment.Environment.lookup_feature_configs"]], "lookup_framework_configs() (mlonmcu.environment.environment.environment method)": [[27, "mlonmcu.environment.environment.Environment.lookup_framework_configs"]], "lookup_framework_feature_configs() (mlonmcu.environment.environment.environment method)": [[27, "mlonmcu.environment.environment.Environment.lookup_framework_feature_configs"]], "lookup_frontend_configs() (mlonmcu.environment.environment.environment method)": [[27, "mlonmcu.environment.environment.Environment.lookup_frontend_configs"]], "lookup_frontend_feature_configs() (mlonmcu.environment.environment.environment method)": [[27, "mlonmcu.environment.environment.Environment.lookup_frontend_feature_configs"]], "lookup_path() (mlonmcu.environment.environment.environment method)": [[27, "mlonmcu.environment.environment.Environment.lookup_path"]], "lookup_platform_configs() (mlonmcu.environment.environment.environment method)": [[27, "mlonmcu.environment.environment.Environment.lookup_platform_configs"]], "lookup_platform_feature_configs() (mlonmcu.environment.environment.environment method)": [[27, "mlonmcu.environment.environment.Environment.lookup_platform_feature_configs"]], "lookup_target_configs() (mlonmcu.environment.environment.environment method)": [[27, "mlonmcu.environment.environment.Environment.lookup_target_configs"]], "lookup_target_feature_configs() (mlonmcu.environment.environment.environment method)": [[27, "mlonmcu.environment.environment.Environment.lookup_target_feature_configs"]], "lookup_var() (mlonmcu.environment.environment.environment method)": [[27, "mlonmcu.environment.environment.Environment.lookup_var"]], "mlonmcu.environment": [[27, "module-mlonmcu.environment"]], "mlonmcu.environment.config": [[27, "module-mlonmcu.environment.config"]], "mlonmcu.environment.environment": [[27, "module-mlonmcu.environment.environment"]], "mlonmcu.environment.init": [[27, "module-mlonmcu.environment.init"]], "mlonmcu.environment.list": [[27, "module-mlonmcu.environment.list"]], "mlonmcu.environment.loader": [[27, "module-mlonmcu.environment.loader"]], "mlonmcu.environment.templates": [[27, "module-mlonmcu.environment.templates"]], "mlonmcu.environment.writer": [[27, "module-mlonmcu.environment.writer"]], "recursive (mlonmcu.environment.config.repoconfig property)": [[27, "mlonmcu.environment.config.RepoConfig.recursive"]], "register_environment() (in module mlonmcu.environment.list)": [[27, "mlonmcu.environment.list.register_environment"]], "single_branch (mlonmcu.environment.config.repoconfig property)": [[27, "mlonmcu.environment.config.RepoConfig.single_branch"]], "submodules (mlonmcu.environment.config.repoconfig property)": [[27, "mlonmcu.environment.config.RepoConfig.submodules"]], "supports_feature() (mlonmcu.environment.environment.environment method)": [[27, "mlonmcu.environment.environment.Environment.supports_feature"]], "to_file() (mlonmcu.environment.environment.environment method)": [[27, "mlonmcu.environment.environment.Environment.to_file"]], "validate_name() (in module mlonmcu.environment.list)": [[27, "mlonmcu.environment.list.validate_name"]], "write_environment_to_file() (in module mlonmcu.environment.writer)": [[27, "mlonmcu.environment.writer.write_environment_to_file"]], "write_environment_yaml_from_template() (in module mlonmcu.environment.templates)": [[27, "mlonmcu.environment.templates.write_environment_yaml_from_template"]], "backend (mlonmcu.feature.type.featuretype attribute)": [[28, "mlonmcu.feature.type.FeatureType.BACKEND"]], "backendfeature (class in mlonmcu.feature.feature)": [[28, "mlonmcu.feature.feature.BackendFeature"]], "defaults (mlonmcu.feature.feature.featurebase attribute)": [[28, "mlonmcu.feature.feature.FeatureBase.DEFAULTS"]], "defaults (mlonmcu.feature.features.hpmcounter attribute)": [[28, "mlonmcu.feature.features.HpmCounter.DEFAULTS"]], "defaults (mlonmcu.feature.features.tvmtunebase attribute)": [[28, "mlonmcu.feature.features.TVMTuneBase.DEFAULTS"]], "framework (mlonmcu.feature.type.featuretype attribute)": [[28, "mlonmcu.feature.type.FeatureType.FRAMEWORK"]], "frontend (mlonmcu.feature.type.featuretype attribute)": [[28, "mlonmcu.feature.type.FeatureType.FRONTEND"]], "feature (class in mlonmcu.feature.feature)": [[28, "mlonmcu.feature.feature.Feature"]], "featurebase (class in mlonmcu.feature.feature)": [[28, "mlonmcu.feature.feature.FeatureBase"]], "featuretype (class in mlonmcu.feature.type)": [[28, "mlonmcu.feature.type.FeatureType"]], "frameworkfeature (class in mlonmcu.feature.feature)": [[28, "mlonmcu.feature.feature.FrameworkFeature"]], "frontendfeature (class in mlonmcu.feature.feature)": [[28, "mlonmcu.feature.feature.FrontendFeature"]], "hpmcounter (class in mlonmcu.feature.features)": [[28, "mlonmcu.feature.features.HpmCounter"]], "optional (mlonmcu.feature.feature.featurebase attribute)": [[28, "mlonmcu.feature.feature.FeatureBase.OPTIONAL"]], "other (mlonmcu.feature.type.featuretype attribute)": [[28, "mlonmcu.feature.type.FeatureType.OTHER"]], "platform (mlonmcu.feature.type.featuretype attribute)": [[28, "mlonmcu.feature.type.FeatureType.PLATFORM"]], "platformfeature (class in mlonmcu.feature.feature)": [[28, "mlonmcu.feature.feature.PlatformFeature"]], "required (mlonmcu.feature.feature.featurebase attribute)": [[28, "mlonmcu.feature.feature.FeatureBase.REQUIRED"]], "run (mlonmcu.feature.type.featuretype attribute)": [[28, "mlonmcu.feature.type.FeatureType.RUN"]], "runfeature (class in mlonmcu.feature.feature)": [[28, "mlonmcu.feature.feature.RunFeature"]], "setup (mlonmcu.feature.type.featuretype attribute)": [[28, "mlonmcu.feature.type.FeatureType.SETUP"]], "setupfeature (class in mlonmcu.feature.feature)": [[28, "mlonmcu.feature.feature.SetupFeature"]], "target (mlonmcu.feature.type.featuretype attribute)": [[28, "mlonmcu.feature.type.FeatureType.TARGET"]], "tvmtunebase (class in mlonmcu.feature.features)": [[28, "mlonmcu.feature.features.TVMTuneBase"]], "targetfeature (class in mlonmcu.feature.feature)": [[28, "mlonmcu.feature.feature.TargetFeature"]], "add_backend_config() (mlonmcu.feature.feature.backendfeature method)": [[28, "mlonmcu.feature.feature.BackendFeature.add_backend_config"]], "add_framework_config() (mlonmcu.feature.feature.frameworkfeature method)": [[28, "mlonmcu.feature.feature.FrameworkFeature.add_framework_config"]], "add_frontend_config() (mlonmcu.feature.feature.frontendfeature method)": [[28, "mlonmcu.feature.feature.FrontendFeature.add_frontend_config"]], "add_platform_config() (mlonmcu.feature.feature.platformfeature method)": [[28, "mlonmcu.feature.feature.PlatformFeature.add_platform_config"]], "add_platform_defs() (mlonmcu.feature.feature.platformfeature method)": [[28, "mlonmcu.feature.feature.PlatformFeature.add_platform_defs"]], "add_required_cache_flags() (mlonmcu.feature.feature.setupfeature method)": [[28, "mlonmcu.feature.feature.SetupFeature.add_required_cache_flags"]], "add_run_config() (mlonmcu.feature.feature.runfeature method)": [[28, "mlonmcu.feature.feature.RunFeature.add_run_config"]], "add_setup_config() (mlonmcu.feature.feature.setupfeature method)": [[28, "mlonmcu.feature.feature.SetupFeature.add_setup_config"]], "add_target_callbacks() (mlonmcu.feature.feature.targetfeature method)": [[28, "mlonmcu.feature.feature.TargetFeature.add_target_callbacks"]], "add_target_config() (mlonmcu.feature.feature.targetfeature method)": [[28, "mlonmcu.feature.feature.TargetFeature.add_target_config"]], "append (mlonmcu.feature.features.tvmtunebase property)": [[28, "mlonmcu.feature.features.TVMTuneBase.append"]], "counter_names (mlonmcu.feature.features.hpmcounter property)": [[28, "mlonmcu.feature.features.HpmCounter.counter_names"]], "early_stopping (mlonmcu.feature.features.tvmtunebase property)": [[28, "mlonmcu.feature.features.TVMTuneBase.early_stopping"]], "enabled (mlonmcu.feature.feature.featurebase property)": [[28, "mlonmcu.feature.feature.FeatureBase.enabled"]], "enabled_counters (mlonmcu.feature.features.hpmcounter property)": [[28, "mlonmcu.feature.features.HpmCounter.enabled_counters"]], "feature_type (mlonmcu.feature.feature.backendfeature attribute)": [[28, "mlonmcu.feature.feature.BackendFeature.feature_type"]], "feature_type (mlonmcu.feature.feature.feature attribute)": [[28, "mlonmcu.feature.feature.Feature.feature_type"]], "feature_type (mlonmcu.feature.feature.featurebase attribute)": [[28, "mlonmcu.feature.feature.FeatureBase.feature_type"]], "feature_type (mlonmcu.feature.feature.frameworkfeature attribute)": [[28, "mlonmcu.feature.feature.FrameworkFeature.feature_type"]], "feature_type (mlonmcu.feature.feature.frontendfeature attribute)": [[28, "mlonmcu.feature.feature.FrontendFeature.feature_type"]], "feature_type (mlonmcu.feature.feature.platformfeature attribute)": [[28, "mlonmcu.feature.feature.PlatformFeature.feature_type"]], "feature_type (mlonmcu.feature.feature.runfeature attribute)": [[28, "mlonmcu.feature.feature.RunFeature.feature_type"]], "feature_type (mlonmcu.feature.feature.setupfeature attribute)": [[28, "mlonmcu.feature.feature.SetupFeature.feature_type"]], "feature_type (mlonmcu.feature.feature.targetfeature attribute)": [[28, "mlonmcu.feature.feature.TargetFeature.feature_type"]], "get_available_feature_names() (in module mlonmcu.feature.features)": [[28, "mlonmcu.feature.features.get_available_feature_names"]], "get_available_features() (in module mlonmcu.feature.features)": [[28, "mlonmcu.feature.features.get_available_features"]], "get_backend_config() (mlonmcu.feature.feature.backendfeature method)": [[28, "mlonmcu.feature.feature.BackendFeature.get_backend_config"]], "get_framework_config() (mlonmcu.feature.feature.frameworkfeature method)": [[28, "mlonmcu.feature.feature.FrameworkFeature.get_framework_config"]], "get_frontend_config() (mlonmcu.feature.feature.frontendfeature method)": [[28, "mlonmcu.feature.feature.FrontendFeature.get_frontend_config"]], "get_matching_features() (in module mlonmcu.feature.features)": [[28, "mlonmcu.feature.features.get_matching_features"]], "get_platform_config() (mlonmcu.feature.feature.platformfeature method)": [[28, "mlonmcu.feature.feature.PlatformFeature.get_platform_config"]], "get_platform_config() (mlonmcu.feature.features.tvmtunebase method)": [[28, "mlonmcu.feature.features.TVMTuneBase.get_platform_config"]], "get_platform_defs() (mlonmcu.feature.feature.platformfeature method)": [[28, "mlonmcu.feature.feature.PlatformFeature.get_platform_defs"]], "get_platform_defs() (mlonmcu.feature.features.hpmcounter method)": [[28, "mlonmcu.feature.features.HpmCounter.get_platform_defs"]], "get_required_cache_flags() (mlonmcu.feature.feature.setupfeature method)": [[28, "mlonmcu.feature.feature.SetupFeature.get_required_cache_flags"]], "get_run_config() (mlonmcu.feature.feature.runfeature method)": [[28, "mlonmcu.feature.feature.RunFeature.get_run_config"]], "get_setup_config() (mlonmcu.feature.feature.setupfeature method)": [[28, "mlonmcu.feature.feature.SetupFeature.get_setup_config"]], "get_target_callbacks() (mlonmcu.feature.feature.targetfeature method)": [[28, "mlonmcu.feature.feature.TargetFeature.get_target_callbacks"]], "get_target_callbacks() (mlonmcu.feature.features.hpmcounter method)": [[28, "mlonmcu.feature.features.HpmCounter.get_target_callbacks"]], "get_target_config() (mlonmcu.feature.feature.targetfeature method)": [[28, "mlonmcu.feature.feature.TargetFeature.get_target_config"]], "max_parallel (mlonmcu.feature.features.tvmtunebase property)": [[28, "mlonmcu.feature.features.TVMTuneBase.max_parallel"]], "mlonmcu.feature": [[28, "module-mlonmcu.feature"]], "mlonmcu.feature.feature": [[28, "module-mlonmcu.feature.feature"]], "mlonmcu.feature.features": [[28, "module-mlonmcu.feature.features"]], "mlonmcu.feature.type": [[28, "module-mlonmcu.feature.type"]], "num_counters (mlonmcu.feature.features.hpmcounter property)": [[28, "mlonmcu.feature.features.HpmCounter.num_counters"]], "num_workers (mlonmcu.feature.features.tvmtunebase property)": [[28, "mlonmcu.feature.features.TVMTuneBase.num_workers"]], "register_feature() (in module mlonmcu.feature.features)": [[28, "mlonmcu.feature.features.register_feature"]], "remove_config_prefix() (mlonmcu.feature.feature.featurebase method)": [[28, "mlonmcu.feature.feature.FeatureBase.remove_config_prefix"]], "results_file (mlonmcu.feature.features.tvmtunebase property)": [[28, "mlonmcu.feature.features.TVMTuneBase.results_file"]], "scope (mlonmcu.feature.feature.featurebase attribute)": [[28, "mlonmcu.feature.feature.FeatureBase.scope"]], "supported_counters (mlonmcu.feature.features.hpmcounter property)": [[28, "mlonmcu.feature.features.HpmCounter.supported_counters"]], "tasks (mlonmcu.feature.features.tvmtunebase property)": [[28, "mlonmcu.feature.features.TVMTuneBase.tasks"]], "timeout (mlonmcu.feature.features.tvmtunebase property)": [[28, "mlonmcu.feature.features.TVMTuneBase.timeout"]], "trials (mlonmcu.feature.features.tvmtunebase property)": [[28, "mlonmcu.feature.features.TVMTuneBase.trials"]], "trials_single (mlonmcu.feature.features.tvmtunebase property)": [[28, "mlonmcu.feature.features.TVMTuneBase.trials_single"]], "types() (mlonmcu.feature.feature.featurebase class method)": [[28, "mlonmcu.feature.feature.FeatureBase.types"]], "update_formats() (mlonmcu.feature.feature.frontendfeature method)": [[28, "mlonmcu.feature.feature.FrontendFeature.update_formats"]], "use_rpc (mlonmcu.feature.features.tvmtunebase property)": [[28, "mlonmcu.feature.features.TVMTuneBase.use_rpc"]], "visualize (mlonmcu.feature.features.tvmtunebase property)": [[28, "mlonmcu.feature.features.TVMTuneBase.visualize"]], "visualize_file (mlonmcu.feature.features.tvmtunebase property)": [[28, "mlonmcu.feature.features.TVMTuneBase.visualize_file"]], "visualize_live (mlonmcu.feature.features.tvmtunebase property)": [[28, "mlonmcu.feature.features.TVMTuneBase.visualize_live"]], "backend (class in mlonmcu.flow.backend)": [[29, "mlonmcu.flow.backend.Backend"]], "defaults (mlonmcu.flow.backend.backend attribute)": [[29, "mlonmcu.flow.backend.Backend.DEFAULTS"]], "defaults (mlonmcu.flow.framework.framework attribute)": [[29, "mlonmcu.flow.framework.Framework.DEFAULTS"]], "features (mlonmcu.flow.backend.backend attribute)": [[29, "mlonmcu.flow.backend.Backend.FEATURES"]], "features (mlonmcu.flow.framework.framework attribute)": [[29, "mlonmcu.flow.framework.Framework.FEATURES"]], "framework (class in mlonmcu.flow.framework)": [[29, "mlonmcu.flow.framework.Framework"]], "optional (mlonmcu.flow.backend.backend attribute)": [[29, "mlonmcu.flow.backend.Backend.OPTIONAL"]], "optional (mlonmcu.flow.framework.framework attribute)": [[29, "mlonmcu.flow.framework.Framework.OPTIONAL"]], "required (mlonmcu.flow.backend.backend attribute)": [[29, "mlonmcu.flow.backend.Backend.REQUIRED"]], "required (mlonmcu.flow.framework.framework attribute)": [[29, "mlonmcu.flow.framework.Framework.REQUIRED"]], "add_platform_config() (mlonmcu.flow.backend.backend method)": [[29, "mlonmcu.flow.backend.Backend.add_platform_config"]], "add_platform_config() (mlonmcu.flow.framework.framework method)": [[29, "mlonmcu.flow.framework.Framework.add_platform_config"]], "add_platform_defs() (mlonmcu.flow.backend.backend method)": [[29, "mlonmcu.flow.backend.Backend.add_platform_defs"]], "add_platform_defs() (mlonmcu.flow.framework.framework method)": [[29, "mlonmcu.flow.framework.Framework.add_platform_defs"]], "export_artifacts() (mlonmcu.flow.backend.backend method)": [[29, "mlonmcu.flow.backend.Backend.export_artifacts"]], "generate() (mlonmcu.flow.backend.backend method)": [[29, "mlonmcu.flow.backend.Backend.generate"]], "generate_artifacts() (mlonmcu.flow.backend.backend method)": [[29, "mlonmcu.flow.backend.Backend.generate_artifacts"]], "get_available_backend_names() (in module mlonmcu.flow)": [[29, "mlonmcu.flow.get_available_backend_names"]], "get_parser() (in module mlonmcu.flow.backend)": [[29, "mlonmcu.flow.backend.get_parser"]], "get_platform_config() (mlonmcu.flow.backend.backend method)": [[29, "mlonmcu.flow.backend.Backend.get_platform_config"]], "get_platform_config() (mlonmcu.flow.framework.framework method)": [[29, "mlonmcu.flow.framework.Framework.get_platform_config"]], "get_platform_defs() (mlonmcu.flow.backend.backend method)": [[29, "mlonmcu.flow.backend.Backend.get_platform_defs"]], "get_platform_defs() (mlonmcu.flow.framework.framework method)": [[29, "mlonmcu.flow.framework.Framework.get_platform_defs"]], "has_tuner (mlonmcu.flow.backend.backend property)": [[29, "mlonmcu.flow.backend.Backend.has_tuner"]], "init_backend_features() (in module mlonmcu.flow.backend)": [[29, "mlonmcu.flow.backend.init_backend_features"]], "load_model() (mlonmcu.flow.backend.backend method)": [[29, "mlonmcu.flow.backend.Backend.load_model"]], "main() (in module mlonmcu.flow.backend)": [[29, "mlonmcu.flow.backend.main"]], "mlonmcu.flow": [[29, "module-mlonmcu.flow"]], "mlonmcu.flow.backend": [[29, "module-mlonmcu.flow.backend"]], "mlonmcu.flow.framework": [[29, "module-mlonmcu.flow.framework"]], "name (mlonmcu.flow.backend.backend attribute)": [[29, "mlonmcu.flow.backend.Backend.name"]], "name (mlonmcu.flow.framework.framework attribute)": [[29, "mlonmcu.flow.framework.Framework.name"]], "needs_target (mlonmcu.flow.backend.backend property)": [[29, "mlonmcu.flow.backend.Backend.needs_target"]], "process_features() (mlonmcu.flow.backend.backend method)": [[29, "mlonmcu.flow.backend.Backend.process_features"]], "process_features() (mlonmcu.flow.framework.framework method)": [[29, "mlonmcu.flow.framework.Framework.process_features"]], "registry (mlonmcu.flow.framework.framework attribute)": [[29, "mlonmcu.flow.framework.Framework.registry"]], "remove_config_prefix() (mlonmcu.flow.framework.framework method)": [[29, "mlonmcu.flow.framework.Framework.remove_config_prefix"]], "set_tuning_records() (mlonmcu.flow.backend.backend method)": [[29, "mlonmcu.flow.backend.Backend.set_tuning_records"]], "supports_model() (mlonmcu.flow.backend.backend method)": [[29, "mlonmcu.flow.backend.Backend.supports_model"]], "defaults (mlonmcu.flow.tflm.tflmbackend attribute)": [[30, "mlonmcu.flow.tflm.TFLMBackend.DEFAULTS"]], "defaults (mlonmcu.flow.tflm.tflmcbackend attribute)": [[30, "mlonmcu.flow.tflm.TFLMCBackend.DEFAULTS"]], "defaults (mlonmcu.flow.tflm.tflmibackend attribute)": [[30, "mlonmcu.flow.tflm.TFLMIBackend.DEFAULTS"]], "defaults (mlonmcu.flow.tflm.framework.tflmframework attribute)": [[30, "mlonmcu.flow.tflm.framework.TFLMFramework.DEFAULTS"]], "features (mlonmcu.flow.tflm.tflmbackend attribute)": [[30, "mlonmcu.flow.tflm.TFLMBackend.FEATURES"]], "features (mlonmcu.flow.tflm.tflmcbackend attribute)": [[30, "mlonmcu.flow.tflm.TFLMCBackend.FEATURES"]], "features (mlonmcu.flow.tflm.tflmibackend attribute)": [[30, "mlonmcu.flow.tflm.TFLMIBackend.FEATURES"]], "features (mlonmcu.flow.tflm.framework.tflmframework attribute)": [[30, "mlonmcu.flow.tflm.framework.TFLMFramework.FEATURES"]], "required (mlonmcu.flow.tflm.tflmbackend attribute)": [[30, "mlonmcu.flow.tflm.TFLMBackend.REQUIRED"]], "required (mlonmcu.flow.tflm.tflmcbackend attribute)": [[30, "mlonmcu.flow.tflm.TFLMCBackend.REQUIRED"]], "required (mlonmcu.flow.tflm.framework.tflmframework attribute)": [[30, "mlonmcu.flow.tflm.framework.TFLMFramework.REQUIRED"]], "tflmbackend (class in mlonmcu.flow.tflm)": [[30, "mlonmcu.flow.tflm.TFLMBackend"]], "tflmcbackend (class in mlonmcu.flow.tflm)": [[30, "mlonmcu.flow.tflm.TFLMCBackend"]], "tflmframework (class in mlonmcu.flow.tflm.framework)": [[30, "mlonmcu.flow.tflm.framework.TFLMFramework"]], "tflmibackend (class in mlonmcu.flow.tflm)": [[30, "mlonmcu.flow.tflm.TFLMIBackend"]], "arena_size (mlonmcu.flow.tflm.tflmibackend property)": [[30, "mlonmcu.flow.tflm.TFLMIBackend.arena_size"]], "backends (mlonmcu.flow.tflm.framework.tflmframework attribute)": [[30, "mlonmcu.flow.tflm.framework.TFLMFramework.backends"]], "custom_ops (mlonmcu.flow.tflm.tflmibackend property)": [[30, "mlonmcu.flow.tflm.TFLMIBackend.custom_ops"]], "debug_arena (mlonmcu.flow.tflm.tflmibackend property)": [[30, "mlonmcu.flow.tflm.TFLMIBackend.debug_arena"]], "generate() (mlonmcu.flow.tflm.tflmcbackend method)": [[30, "mlonmcu.flow.tflm.TFLMCBackend.generate"]], "generate() (mlonmcu.flow.tflm.tflmibackend method)": [[30, "mlonmcu.flow.tflm.TFLMIBackend.generate"]], "generate_header() (mlonmcu.flow.tflm.tflmcbackend method)": [[30, "mlonmcu.flow.tflm.TFLMCBackend.generate_header"]], "get_platform_defs() (mlonmcu.flow.tflm.framework.tflmframework method)": [[30, "mlonmcu.flow.tflm.framework.TFLMFramework.get_platform_defs"]], "legacy (mlonmcu.flow.tflm.tflmibackend property)": [[30, "mlonmcu.flow.tflm.TFLMIBackend.legacy"]], "load_model() (mlonmcu.flow.tflm.tflmbackend method)": [[30, "mlonmcu.flow.tflm.TFLMBackend.load_model"]], "mlonmcu.flow.tflm": [[30, "module-mlonmcu.flow.tflm"]], "mlonmcu.flow.tflm.framework": [[30, "module-mlonmcu.flow.tflm.framework"]], "name (mlonmcu.flow.tflm.tflmbackend attribute)": [[30, "mlonmcu.flow.tflm.TFLMBackend.name"]], "name (mlonmcu.flow.tflm.tflmcbackend attribute)": [[30, "mlonmcu.flow.tflm.TFLMCBackend.name"]], "name (mlonmcu.flow.tflm.tflmibackend attribute)": [[30, "mlonmcu.flow.tflm.TFLMIBackend.name"]], "name (mlonmcu.flow.tflm.framework.tflmframework attribute)": [[30, "mlonmcu.flow.tflm.framework.TFLMFramework.name"]], "ops (mlonmcu.flow.tflm.tflmibackend property)": [[30, "mlonmcu.flow.tflm.TFLMIBackend.ops"]], "ops_resolver (mlonmcu.flow.tflm.tflmibackend property)": [[30, "mlonmcu.flow.tflm.TFLMIBackend.ops_resolver"]], "optimized_kernel (mlonmcu.flow.tflm.framework.tflmframework property)": [[30, "mlonmcu.flow.tflm.framework.TFLMFramework.optimized_kernel"]], "optimized_kernel_inc_dirs (mlonmcu.flow.tflm.framework.tflmframework property)": [[30, "mlonmcu.flow.tflm.framework.TFLMFramework.optimized_kernel_inc_dirs"]], "optimized_kernel_libs (mlonmcu.flow.tflm.framework.tflmframework property)": [[30, "mlonmcu.flow.tflm.framework.TFLMFramework.optimized_kernel_libs"]], "print_outputs (mlonmcu.flow.tflm.tflmcbackend property)": [[30, "mlonmcu.flow.tflm.TFLMCBackend.print_outputs"]], "registrations (mlonmcu.flow.tflm.tflmibackend property)": [[30, "mlonmcu.flow.tflm.TFLMIBackend.registrations"]], "registry (mlonmcu.flow.tflm.tflmbackend attribute)": [[30, "mlonmcu.flow.tflm.TFLMBackend.registry"]], "reporter (mlonmcu.flow.tflm.tflmibackend property)": [[30, "mlonmcu.flow.tflm.TFLMIBackend.reporter"]], "tf_src (mlonmcu.flow.tflm.framework.tflmframework property)": [[30, "mlonmcu.flow.tflm.framework.TFLMFramework.tf_src"]], "defaults (mlonmcu.flow.tflm.backend.tflmbackend attribute)": [[31, "mlonmcu.flow.tflm.backend.TFLMBackend.DEFAULTS"]], "defaults (mlonmcu.flow.tflm.backend.tflmcbackend attribute)": [[31, "mlonmcu.flow.tflm.backend.TFLMCBackend.DEFAULTS"]], "defaults (mlonmcu.flow.tflm.backend.tflmibackend attribute)": [[31, "mlonmcu.flow.tflm.backend.TFLMIBackend.DEFAULTS"]], "defaults (mlonmcu.flow.tflm.backend.backend.tflmbackend attribute)": [[31, "mlonmcu.flow.tflm.backend.backend.TFLMBackend.DEFAULTS"]], "defaults (mlonmcu.flow.tflm.backend.tflmc.tflmcbackend attribute)": [[31, "mlonmcu.flow.tflm.backend.tflmc.TFLMCBackend.DEFAULTS"]], "defaults (mlonmcu.flow.tflm.backend.tflmi.tflmibackend attribute)": [[31, "mlonmcu.flow.tflm.backend.tflmi.TFLMIBackend.DEFAULTS"]], "features (mlonmcu.flow.tflm.backend.tflmbackend attribute)": [[31, "mlonmcu.flow.tflm.backend.TFLMBackend.FEATURES"]], "features (mlonmcu.flow.tflm.backend.tflmcbackend attribute)": [[31, "mlonmcu.flow.tflm.backend.TFLMCBackend.FEATURES"]], "features (mlonmcu.flow.tflm.backend.tflmibackend attribute)": [[31, "mlonmcu.flow.tflm.backend.TFLMIBackend.FEATURES"]], "features (mlonmcu.flow.tflm.backend.backend.tflmbackend attribute)": [[31, "mlonmcu.flow.tflm.backend.backend.TFLMBackend.FEATURES"]], "features (mlonmcu.flow.tflm.backend.tflmc.tflmcbackend attribute)": [[31, "mlonmcu.flow.tflm.backend.tflmc.TFLMCBackend.FEATURES"]], "features (mlonmcu.flow.tflm.backend.tflmi.tflmibackend attribute)": [[31, "mlonmcu.flow.tflm.backend.tflmi.TFLMIBackend.FEATURES"]], "required (mlonmcu.flow.tflm.backend.tflmbackend attribute)": [[31, "mlonmcu.flow.tflm.backend.TFLMBackend.REQUIRED"]], "required (mlonmcu.flow.tflm.backend.tflmcbackend attribute)": [[31, "mlonmcu.flow.tflm.backend.TFLMCBackend.REQUIRED"]], "required (mlonmcu.flow.tflm.backend.backend.tflmbackend attribute)": [[31, "mlonmcu.flow.tflm.backend.backend.TFLMBackend.REQUIRED"]], "required (mlonmcu.flow.tflm.backend.tflmc.tflmcbackend attribute)": [[31, "mlonmcu.flow.tflm.backend.tflmc.TFLMCBackend.REQUIRED"]], "tflmbackend (class in mlonmcu.flow.tflm.backend)": [[31, "mlonmcu.flow.tflm.backend.TFLMBackend"]], "tflmbackend (class in mlonmcu.flow.tflm.backend.backend)": [[31, "mlonmcu.flow.tflm.backend.backend.TFLMBackend"]], "tflmcbackend (class in mlonmcu.flow.tflm.backend)": [[31, "mlonmcu.flow.tflm.backend.TFLMCBackend"]], "tflmcbackend (class in mlonmcu.flow.tflm.backend.tflmc)": [[31, "mlonmcu.flow.tflm.backend.tflmc.TFLMCBackend"]], "tflmibackend (class in mlonmcu.flow.tflm.backend)": [[31, "mlonmcu.flow.tflm.backend.TFLMIBackend"]], "tflmibackend (class in mlonmcu.flow.tflm.backend.tflmi)": [[31, "mlonmcu.flow.tflm.backend.tflmi.TFLMIBackend"]], "tflmicodegen (class in mlonmcu.flow.tflm.backend.tflmi)": [[31, "mlonmcu.flow.tflm.backend.tflmi.TFLMICodegen"]], "arena_size (mlonmcu.flow.tflm.backend.tflmibackend property)": [[31, "mlonmcu.flow.tflm.backend.TFLMIBackend.arena_size"]], "arena_size (mlonmcu.flow.tflm.backend.tflmi.tflmibackend property)": [[31, "mlonmcu.flow.tflm.backend.tflmi.TFLMIBackend.arena_size"]], "custom_ops (mlonmcu.flow.tflm.backend.tflmibackend property)": [[31, "mlonmcu.flow.tflm.backend.TFLMIBackend.custom_ops"]], "custom_ops (mlonmcu.flow.tflm.backend.tflmi.tflmibackend property)": [[31, "mlonmcu.flow.tflm.backend.tflmi.TFLMIBackend.custom_ops"]], "debug_arena (mlonmcu.flow.tflm.backend.tflmibackend property)": [[31, "mlonmcu.flow.tflm.backend.TFLMIBackend.debug_arena"]], "debug_arena (mlonmcu.flow.tflm.backend.tflmi.tflmibackend property)": [[31, "mlonmcu.flow.tflm.backend.tflmi.TFLMIBackend.debug_arena"]], "generate() (mlonmcu.flow.tflm.backend.tflmcbackend method)": [[31, "mlonmcu.flow.tflm.backend.TFLMCBackend.generate"]], "generate() (mlonmcu.flow.tflm.backend.tflmibackend method)": [[31, "mlonmcu.flow.tflm.backend.TFLMIBackend.generate"]], "generate() (mlonmcu.flow.tflm.backend.tflmc.tflmcbackend method)": [[31, "mlonmcu.flow.tflm.backend.tflmc.TFLMCBackend.generate"]], "generate() (mlonmcu.flow.tflm.backend.tflmi.tflmibackend method)": [[31, "mlonmcu.flow.tflm.backend.tflmi.TFLMIBackend.generate"]], "generate_header() (mlonmcu.flow.tflm.backend.tflmcbackend method)": [[31, "mlonmcu.flow.tflm.backend.TFLMCBackend.generate_header"]], "generate_header() (mlonmcu.flow.tflm.backend.tflmc.tflmcbackend method)": [[31, "mlonmcu.flow.tflm.backend.tflmc.TFLMCBackend.generate_header"]], "generate_header() (mlonmcu.flow.tflm.backend.tflmi.tflmicodegen method)": [[31, "mlonmcu.flow.tflm.backend.tflmi.TFLMICodegen.generate_header"]], "generate_wrapper() (mlonmcu.flow.tflm.backend.tflmi.tflmicodegen method)": [[31, "mlonmcu.flow.tflm.backend.tflmi.TFLMICodegen.generate_wrapper"]], "legacy (mlonmcu.flow.tflm.backend.tflmibackend property)": [[31, "mlonmcu.flow.tflm.backend.TFLMIBackend.legacy"]], "legacy (mlonmcu.flow.tflm.backend.tflmi.tflmibackend property)": [[31, "mlonmcu.flow.tflm.backend.tflmi.TFLMIBackend.legacy"]], "load_model() (mlonmcu.flow.tflm.backend.tflmbackend method)": [[31, "mlonmcu.flow.tflm.backend.TFLMBackend.load_model"]], "load_model() (mlonmcu.flow.tflm.backend.backend.tflmbackend method)": [[31, "mlonmcu.flow.tflm.backend.backend.TFLMBackend.load_model"]], "makecustomopprototypes() (mlonmcu.flow.tflm.backend.tflmi.tflmicodegen method)": [[31, "mlonmcu.flow.tflm.backend.tflmi.TFLMICodegen.makeCustomOpPrototypes"]], "make_hex_array() (in module mlonmcu.flow.tflm.backend.tflmi)": [[31, "mlonmcu.flow.tflm.backend.tflmi.make_hex_array"]], "make_op_registrations() (mlonmcu.flow.tflm.backend.tflmi.tflmicodegen method)": [[31, "mlonmcu.flow.tflm.backend.tflmi.TFLMICodegen.make_op_registrations"]], "mlonmcu.flow.tflm.backend": [[31, "module-mlonmcu.flow.tflm.backend"]], "mlonmcu.flow.tflm.backend.backend": [[31, "module-mlonmcu.flow.tflm.backend.backend"]], "mlonmcu.flow.tflm.backend.tflmc": [[31, "module-mlonmcu.flow.tflm.backend.tflmc"]], "mlonmcu.flow.tflm.backend.tflmi": [[31, "module-mlonmcu.flow.tflm.backend.tflmi"]], "name (mlonmcu.flow.tflm.backend.tflmbackend attribute)": [[31, "mlonmcu.flow.tflm.backend.TFLMBackend.name"]], "name (mlonmcu.flow.tflm.backend.tflmcbackend attribute)": [[31, "mlonmcu.flow.tflm.backend.TFLMCBackend.name"]], "name (mlonmcu.flow.tflm.backend.tflmibackend attribute)": [[31, "mlonmcu.flow.tflm.backend.TFLMIBackend.name"]], "name (mlonmcu.flow.tflm.backend.backend.tflmbackend attribute)": [[31, "mlonmcu.flow.tflm.backend.backend.TFLMBackend.name"]], "name (mlonmcu.flow.tflm.backend.tflmc.tflmcbackend attribute)": [[31, "mlonmcu.flow.tflm.backend.tflmc.TFLMCBackend.name"]], "name (mlonmcu.flow.tflm.backend.tflmi.tflmibackend attribute)": [[31, "mlonmcu.flow.tflm.backend.tflmi.TFLMIBackend.name"]], "ops (mlonmcu.flow.tflm.backend.tflmibackend property)": [[31, "mlonmcu.flow.tflm.backend.TFLMIBackend.ops"]], "ops (mlonmcu.flow.tflm.backend.tflmi.tflmibackend property)": [[31, "mlonmcu.flow.tflm.backend.tflmi.TFLMIBackend.ops"]], "ops_resolver (mlonmcu.flow.tflm.backend.tflmibackend property)": [[31, "mlonmcu.flow.tflm.backend.TFLMIBackend.ops_resolver"]], "ops_resolver (mlonmcu.flow.tflm.backend.tflmi.tflmibackend property)": [[31, "mlonmcu.flow.tflm.backend.tflmi.TFLMIBackend.ops_resolver"]], "print_outputs (mlonmcu.flow.tflm.backend.tflmcbackend property)": [[31, "mlonmcu.flow.tflm.backend.TFLMCBackend.print_outputs"]], "print_outputs (mlonmcu.flow.tflm.backend.tflmc.tflmcbackend property)": [[31, "mlonmcu.flow.tflm.backend.tflmc.TFLMCBackend.print_outputs"]], "registrations (mlonmcu.flow.tflm.backend.tflmibackend property)": [[31, "mlonmcu.flow.tflm.backend.TFLMIBackend.registrations"]], "registrations (mlonmcu.flow.tflm.backend.tflmi.tflmibackend property)": [[31, "mlonmcu.flow.tflm.backend.tflmi.TFLMIBackend.registrations"]], "registry (mlonmcu.flow.tflm.backend.tflmbackend attribute)": [[31, "mlonmcu.flow.tflm.backend.TFLMBackend.registry"]], "registry (mlonmcu.flow.tflm.backend.backend.tflmbackend attribute)": [[31, "mlonmcu.flow.tflm.backend.backend.TFLMBackend.registry"]], "reporter (mlonmcu.flow.tflm.backend.tflmibackend property)": [[31, "mlonmcu.flow.tflm.backend.TFLMIBackend.reporter"]], "reporter (mlonmcu.flow.tflm.backend.tflmi.tflmibackend property)": [[31, "mlonmcu.flow.tflm.backend.tflmi.TFLMIBackend.reporter"]], "defaults (mlonmcu.flow.tvm.tvmaotbackend attribute)": [[32, "mlonmcu.flow.tvm.TVMAOTBackend.DEFAULTS"]], "defaults (mlonmcu.flow.tvm.tvmaotplusbackend attribute)": [[32, "mlonmcu.flow.tvm.TVMAOTPlusBackend.DEFAULTS"]], "defaults (mlonmcu.flow.tvm.tvmrtbackend attribute)": [[32, "mlonmcu.flow.tvm.TVMRTBackend.DEFAULTS"]], "defaults (mlonmcu.flow.tvm.framework.tvmframework attribute)": [[32, "mlonmcu.flow.tvm.framework.TVMFramework.DEFAULTS"]], "features (mlonmcu.flow.tvm.tvmaotbackend attribute)": [[32, "mlonmcu.flow.tvm.TVMAOTBackend.FEATURES"]], "features (mlonmcu.flow.tvm.tvmrtbackend attribute)": [[32, "mlonmcu.flow.tvm.TVMRTBackend.FEATURES"]], "features (mlonmcu.flow.tvm.framework.tvmframework attribute)": [[32, "mlonmcu.flow.tvm.framework.TVMFramework.FEATURES"]], "required (mlonmcu.flow.tvm.tvmcgbackend attribute)": [[32, "mlonmcu.flow.tvm.TVMCGBackend.REQUIRED"]], "required (mlonmcu.flow.tvm.framework.tvmframework attribute)": [[32, "mlonmcu.flow.tvm.framework.TVMFramework.REQUIRED"]], "tvmaotbackend (class in mlonmcu.flow.tvm)": [[32, "mlonmcu.flow.tvm.TVMAOTBackend"]], "tvmaotplusbackend (class in mlonmcu.flow.tvm)": [[32, "mlonmcu.flow.tvm.TVMAOTPlusBackend"]], "tvmcgbackend (class in mlonmcu.flow.tvm)": [[32, "mlonmcu.flow.tvm.TVMCGBackend"]], "tvmframework (class in mlonmcu.flow.tvm.framework)": [[32, "mlonmcu.flow.tvm.framework.TVMFramework"]], "tvmrtbackend (class in mlonmcu.flow.tvm)": [[32, "mlonmcu.flow.tvm.TVMRTBackend"]], "alignment_bytes (mlonmcu.flow.tvm.tvmaotbackend property)": [[32, "mlonmcu.flow.tvm.TVMAOTBackend.alignment_bytes"]], "arena_size (mlonmcu.flow.tvm.tvmaotbackend property)": [[32, "mlonmcu.flow.tvm.TVMAOTBackend.arena_size"]], "arena_size (mlonmcu.flow.tvm.tvmrtbackend property)": [[32, "mlonmcu.flow.tvm.TVMRTBackend.arena_size"]], "crt_config_dir (mlonmcu.flow.tvm.framework.tvmframework property)": [[32, "mlonmcu.flow.tvm.framework.TVMFramework.crt_config_dir"]], "debug_arena (mlonmcu.flow.tvm.tvmaotbackend property)": [[32, "mlonmcu.flow.tvm.TVMAOTBackend.debug_arena"]], "debug_arena (mlonmcu.flow.tvm.tvmrtbackend property)": [[32, "mlonmcu.flow.tvm.TVMRTBackend.debug_arena"]], "extra_incs (mlonmcu.flow.tvm.framework.tvmframework property)": [[32, "mlonmcu.flow.tvm.framework.TVMFramework.extra_incs"]], "extra_libs (mlonmcu.flow.tvm.framework.tvmframework property)": [[32, "mlonmcu.flow.tvm.framework.TVMFramework.extra_libs"]], "generate() (mlonmcu.flow.tvm.tvmaotbackend method)": [[32, "mlonmcu.flow.tvm.TVMAOTBackend.generate"]], "generate() (mlonmcu.flow.tvm.tvmcgbackend method)": [[32, "mlonmcu.flow.tvm.TVMCGBackend.generate"]], "generate() (mlonmcu.flow.tvm.tvmrtbackend method)": [[32, "mlonmcu.flow.tvm.TVMRTBackend.generate"]], "get_crt_config_dir() (in module mlonmcu.flow.tvm.framework)": [[32, "mlonmcu.flow.tvm.framework.get_crt_config_dir"]], "get_max_workspace_size_from_metadata() (mlonmcu.flow.tvm.tvmcgbackend method)": [[32, "mlonmcu.flow.tvm.TVMCGBackend.get_max_workspace_size_from_metadata"]], "get_platform_defs() (mlonmcu.flow.tvm.framework.tvmframework method)": [[32, "mlonmcu.flow.tvm.framework.TVMFramework.get_platform_defs"]], "get_tvmc_compile_args() (mlonmcu.flow.tvm.tvmaotbackend method)": [[32, "mlonmcu.flow.tvm.TVMAOTBackend.get_tvmc_compile_args"]], "get_tvmc_compile_args() (mlonmcu.flow.tvm.tvmrtbackend method)": [[32, "mlonmcu.flow.tvm.TVMRTBackend.get_tvmc_compile_args"]], "get_workspace_size_from_metadata() (mlonmcu.flow.tvm.tvmaotbackend method)": [[32, "mlonmcu.flow.tvm.TVMAOTBackend.get_workspace_size_from_metadata"]], "mlonmcu.flow.tvm": [[32, "module-mlonmcu.flow.tvm"]], "mlonmcu.flow.tvm.framework": [[32, "module-mlonmcu.flow.tvm.framework"]], "name (mlonmcu.flow.tvm.tvmaotbackend attribute)": [[32, "mlonmcu.flow.tvm.TVMAOTBackend.name"]], "name (mlonmcu.flow.tvm.tvmaotplusbackend attribute)": [[32, "mlonmcu.flow.tvm.TVMAOTPlusBackend.name"]], "name (mlonmcu.flow.tvm.tvmcgbackend attribute)": [[32, "mlonmcu.flow.tvm.TVMCGBackend.name"]], "name (mlonmcu.flow.tvm.tvmrtbackend attribute)": [[32, "mlonmcu.flow.tvm.TVMRTBackend.name"]], "name (mlonmcu.flow.tvm.framework.tvmframework attribute)": [[32, "mlonmcu.flow.tvm.framework.TVMFramework.name"]], "tvm_src (mlonmcu.flow.tvm.framework.tvmframework property)": [[32, "mlonmcu.flow.tvm.framework.TVMFramework.tvm_src"]], "unpacked_api (mlonmcu.flow.tvm.tvmaotbackend property)": [[32, "mlonmcu.flow.tvm.TVMAOTBackend.unpacked_api"]], "defaults (mlonmcu.flow.tvm.backend.tvmaotbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.TVMAOTBackend.DEFAULTS"]], "defaults (mlonmcu.flow.tvm.backend.tvmaotplusbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.TVMAOTPlusBackend.DEFAULTS"]], "defaults (mlonmcu.flow.tvm.backend.tvmbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.DEFAULTS"]], "defaults (mlonmcu.flow.tvm.backend.tvmllvmbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.TVMLLVMBackend.DEFAULTS"]], "defaults (mlonmcu.flow.tvm.backend.tvmrtbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.TVMRTBackend.DEFAULTS"]], "defaults (mlonmcu.flow.tvm.backend.backend.tvmbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.DEFAULTS"]], "defaults (mlonmcu.flow.tvm.backend.tvmaot.tvmaotbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.tvmaot.TVMAOTBackend.DEFAULTS"]], "defaults (mlonmcu.flow.tvm.backend.tvmaotplus.tvmaotplusbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.tvmaotplus.TVMAOTPlusBackend.DEFAULTS"]], "defaults (mlonmcu.flow.tvm.backend.tvmllvm.tvmllvmbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.tvmllvm.TVMLLVMBackend.DEFAULTS"]], "defaults (mlonmcu.flow.tvm.backend.tvmrt.tvmrtbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.tvmrt.TVMRTBackend.DEFAULTS"]], "features (mlonmcu.flow.tvm.backend.tvmaotbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.TVMAOTBackend.FEATURES"]], "features (mlonmcu.flow.tvm.backend.tvmbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.FEATURES"]], "features (mlonmcu.flow.tvm.backend.tvmllvmbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.TVMLLVMBackend.FEATURES"]], "features (mlonmcu.flow.tvm.backend.tvmrtbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.TVMRTBackend.FEATURES"]], "features (mlonmcu.flow.tvm.backend.backend.tvmbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.FEATURES"]], "features (mlonmcu.flow.tvm.backend.tvmaot.tvmaotbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.tvmaot.TVMAOTBackend.FEATURES"]], "features (mlonmcu.flow.tvm.backend.tvmllvm.tvmllvmbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.tvmllvm.TVMLLVMBackend.FEATURES"]], "features (mlonmcu.flow.tvm.backend.tvmrt.tvmrtbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.tvmrt.TVMRTBackend.FEATURES"]], "modelinfo (class in mlonmcu.flow.tvm.backend.model_info)": [[33, "mlonmcu.flow.tvm.backend.model_info.ModelInfo"]], "onnxmodelinfo (class in mlonmcu.flow.tvm.backend.model_info)": [[33, "mlonmcu.flow.tvm.backend.model_info.ONNXModelInfo"]], "optional (mlonmcu.flow.tvm.backend.tvmbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.OPTIONAL"]], "optional (mlonmcu.flow.tvm.backend.backend.tvmbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.OPTIONAL"]], "pbmodelinfo (class in mlonmcu.flow.tvm.backend.model_info)": [[33, "mlonmcu.flow.tvm.backend.model_info.PBModelInfo"]], "paddlemodelinfo (class in mlonmcu.flow.tvm.backend.model_info)": [[33, "mlonmcu.flow.tvm.backend.model_info.PaddleModelInfo"]], "required (mlonmcu.flow.tvm.backend.tvmbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.REQUIRED"]], "required (mlonmcu.flow.tvm.backend.tvmcgbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.TVMCGBackend.REQUIRED"]], "required (mlonmcu.flow.tvm.backend.backend.tvmbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.REQUIRED"]], "required (mlonmcu.flow.tvm.backend.tvmcg.tvmcgbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.tvmcg.TVMCGBackend.REQUIRED"]], "relaymodelinfo (class in mlonmcu.flow.tvm.backend.model_info)": [[33, "mlonmcu.flow.tvm.backend.model_info.RelayModelInfo"]], "relaytensorinfo (class in mlonmcu.flow.tvm.backend.model_info)": [[33, "mlonmcu.flow.tvm.backend.model_info.RelayTensorInfo"]], "tvmaotbackend (class in mlonmcu.flow.tvm.backend)": [[33, "mlonmcu.flow.tvm.backend.TVMAOTBackend"]], "tvmaotbackend (class in mlonmcu.flow.tvm.backend.tvmaot)": [[33, "mlonmcu.flow.tvm.backend.tvmaot.TVMAOTBackend"]], "tvmaotplusbackend (class in mlonmcu.flow.tvm.backend)": [[33, "mlonmcu.flow.tvm.backend.TVMAOTPlusBackend"]], "tvmaotplusbackend (class in mlonmcu.flow.tvm.backend.tvmaotplus)": [[33, "mlonmcu.flow.tvm.backend.tvmaotplus.TVMAOTPlusBackend"]], "tvmbackend (class in mlonmcu.flow.tvm.backend)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend"]], "tvmbackend (class in mlonmcu.flow.tvm.backend.backend)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend"]], "tvmcgbackend (class in mlonmcu.flow.tvm.backend)": [[33, "mlonmcu.flow.tvm.backend.TVMCGBackend"]], "tvmcgbackend (class in mlonmcu.flow.tvm.backend.tvmcg)": [[33, "mlonmcu.flow.tvm.backend.tvmcg.TVMCGBackend"]], "tvmllvmbackend (class in mlonmcu.flow.tvm.backend)": [[33, "mlonmcu.flow.tvm.backend.TVMLLVMBackend"]], "tvmllvmbackend (class in mlonmcu.flow.tvm.backend.tvmllvm)": [[33, "mlonmcu.flow.tvm.backend.tvmllvm.TVMLLVMBackend"]], "tvmrtbackend (class in mlonmcu.flow.tvm.backend)": [[33, "mlonmcu.flow.tvm.backend.TVMRTBackend"]], "tvmrtbackend (class in mlonmcu.flow.tvm.backend.tvmrt)": [[33, "mlonmcu.flow.tvm.backend.tvmrt.TVMRTBackend"]], "tensorinfo (class in mlonmcu.flow.tvm.backend.model_info)": [[33, "mlonmcu.flow.tvm.backend.model_info.TensorInfo"]], "tflitemodelinfo (class in mlonmcu.flow.tvm.backend.model_info)": [[33, "mlonmcu.flow.tvm.backend.model_info.TfLiteModelInfo"]], "tflitetensorinfo (class in mlonmcu.flow.tvm.backend.model_info)": [[33, "mlonmcu.flow.tvm.backend.model_info.TfLiteTensorInfo"]], "alignment_bytes (mlonmcu.flow.tvm.backend.tvmaotbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMAOTBackend.alignment_bytes"]], "alignment_bytes (mlonmcu.flow.tvm.backend.tvmaot.tvmaotbackend property)": [[33, "mlonmcu.flow.tvm.backend.tvmaot.TVMAOTBackend.alignment_bytes"]], "arena_size (mlonmcu.flow.tvm.backend.tvmaotbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMAOTBackend.arena_size"]], "arena_size (mlonmcu.flow.tvm.backend.tvmllvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMLLVMBackend.arena_size"]], "arena_size (mlonmcu.flow.tvm.backend.tvmrtbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMRTBackend.arena_size"]], "arena_size (mlonmcu.flow.tvm.backend.tvmaot.tvmaotbackend property)": [[33, "mlonmcu.flow.tvm.backend.tvmaot.TVMAOTBackend.arena_size"]], "arena_size (mlonmcu.flow.tvm.backend.tvmllvm.tvmllvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.tvmllvm.TVMLLVMBackend.arena_size"]], "arena_size (mlonmcu.flow.tvm.backend.tvmrt.tvmrtbackend property)": [[33, "mlonmcu.flow.tvm.backend.tvmrt.TVMRTBackend.arena_size"]], "calc_pages() (in module mlonmcu.flow.tvm.backend.wrapper)": [[33, "mlonmcu.flow.tvm.backend.wrapper.calc_pages"]], "check_allowed() (in module mlonmcu.flow.tvm.backend.tvmc_utils)": [[33, "mlonmcu.flow.tvm.backend.tvmc_utils.check_allowed"]], "custom_unroll (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.custom_unroll"]], "custom_unroll (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.custom_unroll"]], "debug_arena (mlonmcu.flow.tvm.backend.tvmaotbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMAOTBackend.debug_arena"]], "debug_arena (mlonmcu.flow.tvm.backend.tvmllvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMLLVMBackend.debug_arena"]], "debug_arena (mlonmcu.flow.tvm.backend.tvmrtbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMRTBackend.debug_arena"]], "debug_arena (mlonmcu.flow.tvm.backend.tvmaot.tvmaotbackend property)": [[33, "mlonmcu.flow.tvm.backend.tvmaot.TVMAOTBackend.debug_arena"]], "debug_arena (mlonmcu.flow.tvm.backend.tvmllvm.tvmllvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.tvmllvm.TVMLLVMBackend.debug_arena"]], "debug_arena (mlonmcu.flow.tvm.backend.tvmrt.tvmrtbackend property)": [[33, "mlonmcu.flow.tvm.backend.tvmrt.TVMRTBackend.debug_arena"]], "desired_layout (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.desired_layout"]], "desired_layout (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.desired_layout"]], "desired_layout_map (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.desired_layout_map"]], "desired_layout_map (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.desired_layout_map"]], "desired_layout_ops (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.desired_layout_ops"]], "desired_layout_ops (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.desired_layout_ops"]], "disable_vectorize (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.disable_vectorize"]], "disable_vectorize (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.disable_vectorize"]], "disabled_passes (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.disabled_passes"]], "disabled_passes (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.disabled_passes"]], "dump (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.dump"]], "dump (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.dump"]], "extra_target_details (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.extra_target_details"]], "extra_target_details (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.extra_target_details"]], "extra_targets (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.extra_targets"]], "extra_targets (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.extra_targets"]], "fill() (in module mlonmcu.flow.tvm.backend.wrapper)": [[33, "mlonmcu.flow.tvm.backend.wrapper.fill"]], "gen_extra_target_details_args() (in module mlonmcu.flow.tvm.backend.tvmc_utils)": [[33, "mlonmcu.flow.tvm.backend.tvmc_utils.gen_extra_target_details_args"]], "gen_target_details_args() (in module mlonmcu.flow.tvm.backend.tvmc_utils)": [[33, "mlonmcu.flow.tvm.backend.tvmc_utils.gen_target_details_args"]], "generate() (mlonmcu.flow.tvm.backend.tvmaotbackend method)": [[33, "mlonmcu.flow.tvm.backend.TVMAOTBackend.generate"]], "generate() (mlonmcu.flow.tvm.backend.tvmbackend method)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.generate"]], "generate() (mlonmcu.flow.tvm.backend.tvmcgbackend method)": [[33, "mlonmcu.flow.tvm.backend.TVMCGBackend.generate"]], "generate() (mlonmcu.flow.tvm.backend.tvmllvmbackend method)": [[33, "mlonmcu.flow.tvm.backend.TVMLLVMBackend.generate"]], "generate() (mlonmcu.flow.tvm.backend.tvmrtbackend method)": [[33, "mlonmcu.flow.tvm.backend.TVMRTBackend.generate"]], "generate() (mlonmcu.flow.tvm.backend.backend.tvmbackend method)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.generate"]], "generate() (mlonmcu.flow.tvm.backend.tvmaot.tvmaotbackend method)": [[33, "mlonmcu.flow.tvm.backend.tvmaot.TVMAOTBackend.generate"]], "generate() (mlonmcu.flow.tvm.backend.tvmcg.tvmcgbackend method)": [[33, "mlonmcu.flow.tvm.backend.tvmcg.TVMCGBackend.generate"]], "generate() (mlonmcu.flow.tvm.backend.tvmllvm.tvmllvmbackend method)": [[33, "mlonmcu.flow.tvm.backend.tvmllvm.TVMLLVMBackend.generate"]], "generate() (mlonmcu.flow.tvm.backend.tvmrt.tvmrtbackend method)": [[33, "mlonmcu.flow.tvm.backend.tvmrt.TVMRTBackend.generate"]], "generate_aot_includes() (in module mlonmcu.flow.tvm.backend.wrapper)": [[33, "mlonmcu.flow.tvm.backend.wrapper.generate_aot_includes"]], "generate_common_includes() (in module mlonmcu.flow.tvm.backend.wrapper)": [[33, "mlonmcu.flow.tvm.backend.wrapper.generate_common_includes"]], "generate_graph_includes() (in module mlonmcu.flow.tvm.backend.wrapper)": [[33, "mlonmcu.flow.tvm.backend.wrapper.generate_graph_includes"]], "generate_header() (in module mlonmcu.flow.tvm.backend.wrapper)": [[33, "mlonmcu.flow.tvm.backend.wrapper.generate_header"]], "generate_tvmaot_wrapper() (in module mlonmcu.flow.tvm.backend.wrapper)": [[33, "mlonmcu.flow.tvm.backend.wrapper.generate_tvmaot_wrapper"]], "generate_tvmrt_wrapper() (in module mlonmcu.flow.tvm.backend.wrapper)": [[33, "mlonmcu.flow.tvm.backend.wrapper.generate_tvmrt_wrapper"]], "generate_wrapper (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.generate_wrapper"]], "generate_wrapper (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.generate_wrapper"]], "generate_wrapper_header() (in module mlonmcu.flow.tvm.backend.wrapper)": [[33, "mlonmcu.flow.tvm.backend.wrapper.generate_wrapper_header"]], "getsizes() (in module mlonmcu.flow.tvm.backend.wrapper)": [[33, "mlonmcu.flow.tvm.backend.wrapper.getSizes"]], "get_autoscheduler_defaults() (in module mlonmcu.flow.tvm.backend.tuner)": [[33, "mlonmcu.flow.tvm.backend.tuner.get_autoscheduler_defaults"]], "get_autotuning_defaults() (in module mlonmcu.flow.tvm.backend.tuner)": [[33, "mlonmcu.flow.tvm.backend.tuner.get_autotuning_defaults"]], "get_autotvm_defaults() (in module mlonmcu.flow.tvm.backend.tuner)": [[33, "mlonmcu.flow.tvm.backend.tuner.get_autotvm_defaults"]], "get_bench_tvmc_args() (in module mlonmcu.flow.tvm.backend.tvmc_utils)": [[33, "mlonmcu.flow.tvm.backend.tvmc_utils.get_bench_tvmc_args"]], "get_data_tvmc_args() (in module mlonmcu.flow.tvm.backend.tvmc_utils)": [[33, "mlonmcu.flow.tvm.backend.tvmc_utils.get_data_tvmc_args"]], "get_desired_layout_args() (in module mlonmcu.flow.tvm.backend.tvmc_utils)": [[33, "mlonmcu.flow.tvm.backend.tvmc_utils.get_desired_layout_args"]], "get_disabled_pass_tvmc_args() (in module mlonmcu.flow.tvm.backend.tvmc_utils)": [[33, "mlonmcu.flow.tvm.backend.tvmc_utils.get_disabled_pass_tvmc_args"]], "get_fallback_model_info() (in module mlonmcu.flow.tvm.backend.model_info)": [[33, "mlonmcu.flow.tvm.backend.model_info.get_fallback_model_info"]], "get_graph_and_params_from_mlf() (mlonmcu.flow.tvm.backend.tvmbackend method)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.get_graph_and_params_from_mlf"]], "get_graph_and_params_from_mlf() (mlonmcu.flow.tvm.backend.tvmllvmbackend method)": [[33, "mlonmcu.flow.tvm.backend.TVMLLVMBackend.get_graph_and_params_from_mlf"]], "get_graph_and_params_from_mlf() (mlonmcu.flow.tvm.backend.backend.tvmbackend method)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.get_graph_and_params_from_mlf"]], "get_graph_and_params_from_mlf() (mlonmcu.flow.tvm.backend.tvmllvm.tvmllvmbackend method)": [[33, "mlonmcu.flow.tvm.backend.tvmllvm.TVMLLVMBackend.get_graph_and_params_from_mlf"]], "get_input_shapes_tvmc_args() (in module mlonmcu.flow.tvm.backend.tvmc_utils)": [[33, "mlonmcu.flow.tvm.backend.tvmc_utils.get_input_shapes_tvmc_args"]], "get_max_workspace_size_from_metadata() (mlonmcu.flow.tvm.backend.tvmcgbackend method)": [[33, "mlonmcu.flow.tvm.backend.TVMCGBackend.get_max_workspace_size_from_metadata"]], "get_max_workspace_size_from_metadata() (mlonmcu.flow.tvm.backend.tvmcg.tvmcgbackend method)": [[33, "mlonmcu.flow.tvm.backend.tvmcg.TVMCGBackend.get_max_workspace_size_from_metadata"]], "get_metascheduler_defaults() (in module mlonmcu.flow.tvm.backend.tuner)": [[33, "mlonmcu.flow.tvm.backend.tuner.get_metascheduler_defaults"]], "get_model_format() (in module mlonmcu.flow.tvm.backend.model_info)": [[33, "mlonmcu.flow.tvm.backend.model_info.get_model_format"]], "get_model_info() (in module mlonmcu.flow.tvm.backend.model_info)": [[33, "mlonmcu.flow.tvm.backend.model_info.get_model_info"]], "get_onnx_model_info() (in module mlonmcu.flow.tvm.backend.model_info)": [[33, "mlonmcu.flow.tvm.backend.model_info.get_onnx_model_info"]], "get_paddle_model_info() (in module mlonmcu.flow.tvm.backend.model_info)": [[33, "mlonmcu.flow.tvm.backend.model_info.get_paddle_model_info"]], "get_pass_config_tvmc_args() (in module mlonmcu.flow.tvm.backend.tvmc_utils)": [[33, "mlonmcu.flow.tvm.backend.tvmc_utils.get_pass_config_tvmc_args"]], "get_pb_model_info() (in module mlonmcu.flow.tvm.backend.model_info)": [[33, "mlonmcu.flow.tvm.backend.model_info.get_pb_model_info"]], "get_relay_model_info() (in module mlonmcu.flow.tvm.backend.model_info)": [[33, "mlonmcu.flow.tvm.backend.model_info.get_relay_model_info"]], "get_rpc_tvmc_args() (in module mlonmcu.flow.tvm.backend.tvmc_utils)": [[33, "mlonmcu.flow.tvm.backend.tvmc_utils.get_rpc_tvmc_args"]], "get_runtime_executor_tvmc_args() (in module mlonmcu.flow.tvm.backend.tvmc_utils)": [[33, "mlonmcu.flow.tvm.backend.tvmc_utils.get_runtime_executor_tvmc_args"]], "get_supported_formats() (in module mlonmcu.flow.tvm.backend.model_info)": [[33, "mlonmcu.flow.tvm.backend.model_info.get_supported_formats"]], "get_target_details() (mlonmcu.flow.tvm.backend.tvmbackend method)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.get_target_details"]], "get_target_details() (mlonmcu.flow.tvm.backend.backend.tvmbackend method)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.get_target_details"]], "get_target_tvmc_args() (in module mlonmcu.flow.tvm.backend.tvmc_utils)": [[33, "mlonmcu.flow.tvm.backend.tvmc_utils.get_target_tvmc_args"]], "get_tfgraph_inout() (in module mlonmcu.flow.tvm.backend.model_info)": [[33, "mlonmcu.flow.tvm.backend.model_info.get_tfgraph_inout"]], "get_tflite_model_info() (in module mlonmcu.flow.tvm.backend.model_info)": [[33, "mlonmcu.flow.tvm.backend.model_info.get_tflite_model_info"]], "get_tuning_records() (mlonmcu.flow.tvm.backend.tvmbackend method)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.get_tuning_records"]], "get_tuning_records() (mlonmcu.flow.tvm.backend.backend.tvmbackend method)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.get_tuning_records"]], "get_tuning_records_tvmc_args() (in module mlonmcu.flow.tvm.backend.tvmc_utils)": [[33, "mlonmcu.flow.tvm.backend.tvmc_utils.get_tuning_records_tvmc_args"]], "get_tvmaot_tvmc_args() (in module mlonmcu.flow.tvm.backend.tvmc_utils)": [[33, "mlonmcu.flow.tvm.backend.tvmc_utils.get_tvmaot_tvmc_args"]], "get_tvmc_compile_args() (mlonmcu.flow.tvm.backend.tvmaotbackend method)": [[33, "mlonmcu.flow.tvm.backend.TVMAOTBackend.get_tvmc_compile_args"]], "get_tvmc_compile_args() (mlonmcu.flow.tvm.backend.tvmbackend method)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.get_tvmc_compile_args"]], "get_tvmc_compile_args() (mlonmcu.flow.tvm.backend.tvmllvmbackend method)": [[33, "mlonmcu.flow.tvm.backend.TVMLLVMBackend.get_tvmc_compile_args"]], "get_tvmc_compile_args() (mlonmcu.flow.tvm.backend.tvmrtbackend method)": [[33, "mlonmcu.flow.tvm.backend.TVMRTBackend.get_tvmc_compile_args"]], "get_tvmc_compile_args() (mlonmcu.flow.tvm.backend.backend.tvmbackend method)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.get_tvmc_compile_args"]], "get_tvmc_compile_args() (mlonmcu.flow.tvm.backend.tvmaot.tvmaotbackend method)": [[33, "mlonmcu.flow.tvm.backend.tvmaot.TVMAOTBackend.get_tvmc_compile_args"]], "get_tvmc_compile_args() (mlonmcu.flow.tvm.backend.tvmllvm.tvmllvmbackend method)": [[33, "mlonmcu.flow.tvm.backend.tvmllvm.TVMLLVMBackend.get_tvmc_compile_args"]], "get_tvmc_compile_args() (mlonmcu.flow.tvm.backend.tvmrt.tvmrtbackend method)": [[33, "mlonmcu.flow.tvm.backend.tvmrt.TVMRTBackend.get_tvmc_compile_args"]], "get_tvmrt_tvmc_args() (in module mlonmcu.flow.tvm.backend.tvmc_utils)": [[33, "mlonmcu.flow.tvm.backend.tvmc_utils.get_tvmrt_tvmc_args"]], "get_workspace_size_from_metadata() (mlonmcu.flow.tvm.backend.tvmaotbackend method)": [[33, "mlonmcu.flow.tvm.backend.TVMAOTBackend.get_workspace_size_from_metadata"]], "get_workspace_size_from_metadata() (mlonmcu.flow.tvm.backend.tvmaot.tvmaotbackend method)": [[33, "mlonmcu.flow.tvm.backend.tvmaot.TVMAOTBackend.get_workspace_size_from_metadata"]], "has_ins (mlonmcu.flow.tvm.backend.model_info.modelinfo property)": [[33, "mlonmcu.flow.tvm.backend.model_info.ModelInfo.has_ins"]], "has_outs (mlonmcu.flow.tvm.backend.model_info.modelinfo property)": [[33, "mlonmcu.flow.tvm.backend.model_info.ModelInfo.has_outs"]], "invoke_tvmc() (mlonmcu.flow.tvm.backend.tvmbackend method)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.invoke_tvmc"]], "invoke_tvmc() (mlonmcu.flow.tvm.backend.backend.tvmbackend method)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.invoke_tvmc"]], "invoke_tvmc_compile() (mlonmcu.flow.tvm.backend.tvmbackend method)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.invoke_tvmc_compile"]], "invoke_tvmc_compile() (mlonmcu.flow.tvm.backend.backend.tvmbackend method)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.invoke_tvmc_compile"]], "load_model() (mlonmcu.flow.tvm.backend.tvmbackend method)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.load_model"]], "load_model() (mlonmcu.flow.tvm.backend.backend.tvmbackend method)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.load_model"]], "mlonmcu.flow.tvm.backend": [[33, "module-mlonmcu.flow.tvm.backend"]], "mlonmcu.flow.tvm.backend.backend": [[33, "module-mlonmcu.flow.tvm.backend.backend"]], "mlonmcu.flow.tvm.backend.model_info": [[33, "module-mlonmcu.flow.tvm.backend.model_info"]], "mlonmcu.flow.tvm.backend.python_utils": [[33, "module-mlonmcu.flow.tvm.backend.python_utils"]], "mlonmcu.flow.tvm.backend.tuner": [[33, "module-mlonmcu.flow.tvm.backend.tuner"]], "mlonmcu.flow.tvm.backend.tvmaot": [[33, "module-mlonmcu.flow.tvm.backend.tvmaot"]], "mlonmcu.flow.tvm.backend.tvmaotplus": [[33, "module-mlonmcu.flow.tvm.backend.tvmaotplus"]], "mlonmcu.flow.tvm.backend.tvmc_utils": [[33, "module-mlonmcu.flow.tvm.backend.tvmc_utils"]], "mlonmcu.flow.tvm.backend.tvmcg": [[33, "module-mlonmcu.flow.tvm.backend.tvmcg"]], "mlonmcu.flow.tvm.backend.tvmllvm": [[33, "module-mlonmcu.flow.tvm.backend.tvmllvm"]], "mlonmcu.flow.tvm.backend.tvmrt": [[33, "module-mlonmcu.flow.tvm.backend.tvmrt"]], "mlonmcu.flow.tvm.backend.wrapper": [[33, "module-mlonmcu.flow.tvm.backend.wrapper"]], "name (mlonmcu.flow.tvm.backend.tvmaotbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.TVMAOTBackend.name"]], "name (mlonmcu.flow.tvm.backend.tvmaotplusbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.TVMAOTPlusBackend.name"]], "name (mlonmcu.flow.tvm.backend.tvmbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.name"]], "name (mlonmcu.flow.tvm.backend.tvmcgbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.TVMCGBackend.name"]], "name (mlonmcu.flow.tvm.backend.tvmllvmbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.TVMLLVMBackend.name"]], "name (mlonmcu.flow.tvm.backend.tvmrtbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.TVMRTBackend.name"]], "name (mlonmcu.flow.tvm.backend.backend.tvmbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.name"]], "name (mlonmcu.flow.tvm.backend.tvmaot.tvmaotbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.tvmaot.TVMAOTBackend.name"]], "name (mlonmcu.flow.tvm.backend.tvmaotplus.tvmaotplusbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.tvmaotplus.TVMAOTPlusBackend.name"]], "name (mlonmcu.flow.tvm.backend.tvmcg.tvmcgbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.tvmcg.TVMCGBackend.name"]], "name (mlonmcu.flow.tvm.backend.tvmllvm.tvmllvmbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.tvmllvm.TVMLLVMBackend.name"]], "name (mlonmcu.flow.tvm.backend.tvmrt.tvmrtbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.tvmrt.TVMRTBackend.name"]], "needs_target (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.needs_target"]], "needs_target (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.needs_target"]], "num_threads() (mlonmcu.flow.tvm.backend.tvmbackend method)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.num_threads"]], "num_threads() (mlonmcu.flow.tvm.backend.backend.tvmbackend method)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.num_threads"]], "opt_level (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.opt_level"]], "opt_level (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.opt_level"]], "parse_relay_main() (in module mlonmcu.flow.tvm.backend.model_info)": [[33, "mlonmcu.flow.tvm.backend.model_info.parse_relay_main"]], "pass_config (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.pass_config"]], "pass_config (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.pass_config"]], "prepare_python_environment() (in module mlonmcu.flow.tvm.backend.python_utils)": [[33, "mlonmcu.flow.tvm.backend.python_utils.prepare_python_environment"]], "print_outputs (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.print_outputs"]], "print_outputs (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.print_outputs"]], "refresh_model_info (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.refresh_model_info"]], "refresh_model_info (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.refresh_model_info"]], "registry (mlonmcu.flow.tvm.backend.tvmbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.registry"]], "registry (mlonmcu.flow.tvm.backend.backend.tvmbackend attribute)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.registry"]], "relay_debug (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.relay_debug"]], "relay_debug (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.relay_debug"]], "set_tuning_records() (mlonmcu.flow.tvm.backend.tvmbackend method)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.set_tuning_records"]], "set_tuning_records() (mlonmcu.flow.tvm.backend.backend.tvmbackend method)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.set_tuning_records"]], "shape_from_str() (in module mlonmcu.flow.tvm.backend.model_info)": [[33, "mlonmcu.flow.tvm.backend.model_info.shape_from_str"]], "size (mlonmcu.flow.tvm.backend.model_info.tensorinfo property)": [[33, "mlonmcu.flow.tvm.backend.model_info.TensorInfo.size"]], "target_device (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.target_device"]], "target_device (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.target_device"]], "target_keys (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.target_keys"]], "target_keys (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.target_keys"]], "target_mabi (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.target_mabi"]], "target_mabi (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.target_mabi"]], "target_march (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.target_march"]], "target_march (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.target_march"]], "target_mattr (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.target_mattr"]], "target_mattr (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.target_mattr"]], "target_mcpu (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.target_mcpu"]], "target_mcpu (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.target_mcpu"]], "target_model (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.target_model"]], "target_model (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.target_model"]], "target_mtriple (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.target_mtriple"]], "target_mtriple (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.target_mtriple"]], "target_num_cores (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.target_num_cores"]], "target_num_cores (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.target_num_cores"]], "tophub_url (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.tophub_url"]], "tophub_url (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.tophub_url"]], "tvm_build_dir (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.tvm_build_dir"]], "tvm_build_dir (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.tvm_build_dir"]], "tvm_configs_dir (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.tvm_configs_dir"]], "tvm_configs_dir (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.tvm_configs_dir"]], "tvm_pythonpath (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.tvm_pythonpath"]], "tvm_pythonpath (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.tvm_pythonpath"]], "tvmc_custom_script (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.tvmc_custom_script"]], "tvmc_custom_script (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.tvmc_custom_script"]], "tvmc_extra_args (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.tvmc_extra_args"]], "tvmc_extra_args (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.tvmc_extra_args"]], "unpacked_api (mlonmcu.flow.tvm.backend.tvmaotbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMAOTBackend.unpacked_api"]], "unpacked_api (mlonmcu.flow.tvm.backend.tvmaot.tvmaotbackend property)": [[33, "mlonmcu.flow.tvm.backend.tvmaot.TVMAOTBackend.unpacked_api"]], "use_tlcpack (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.use_tlcpack"]], "use_tlcpack (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.use_tlcpack"]], "use_tuning_results (mlonmcu.flow.tvm.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.TVMBackend.use_tuning_results"]], "use_tuning_results (mlonmcu.flow.tvm.backend.backend.tvmbackend property)": [[33, "mlonmcu.flow.tvm.backend.backend.TVMBackend.use_tuning_results"]], "write_tvmaot_wrapper() (in module mlonmcu.flow.tvm.backend.wrapper)": [[33, "mlonmcu.flow.tvm.backend.wrapper.write_tvmaot_wrapper"]], "write_tvmrt_wrapper() (in module mlonmcu.flow.tvm.backend.wrapper)": [[33, "mlonmcu.flow.tvm.backend.wrapper.write_tvmrt_wrapper"]], "backendmodeloptions (class in mlonmcu.models.options)": [[34, "mlonmcu.models.options.BackendModelOptions"]], "coremarkfrontend (class in mlonmcu.models.frontend)": [[34, "mlonmcu.models.frontend.CoremarkFrontend"]], "coremarkprogram (class in mlonmcu.models.model)": [[34, "mlonmcu.models.model.CoremarkProgram"]], "defaults (mlonmcu.models.layergenfrontend attribute)": [[34, "mlonmcu.models.LayerGenFrontend.DEFAULTS"]], "defaults (mlonmcu.models.packedfrontend attribute)": [[34, "mlonmcu.models.PackedFrontend.DEFAULTS"]], "defaults (mlonmcu.models.tflitefrontend attribute)": [[34, "mlonmcu.models.TfLiteFrontend.DEFAULTS"]], "defaults (mlonmcu.models.frontend.frontend attribute)": [[34, "mlonmcu.models.frontend.Frontend.DEFAULTS"]], "defaults (mlonmcu.models.frontend.layergenfrontend attribute)": [[34, "mlonmcu.models.frontend.LayerGenFrontend.DEFAULTS"]], "defaults (mlonmcu.models.frontend.packedfrontend attribute)": [[34, "mlonmcu.models.frontend.PackedFrontend.DEFAULTS"]], "defaults (mlonmcu.models.frontend.relayfrontend attribute)": [[34, "mlonmcu.models.frontend.RelayFrontend.DEFAULTS"]], "defaults (mlonmcu.models.frontend.tflitefrontend attribute)": [[34, "mlonmcu.models.frontend.TfLiteFrontend.DEFAULTS"]], "defaults (mlonmcu.models.model.mathisprogram attribute)": [[34, "mlonmcu.models.model.MathisProgram.DEFAULTS"]], "defaults (mlonmcu.models.model.model attribute)": [[34, "mlonmcu.models.model.Model.DEFAULTS"]], "defaults (mlonmcu.models.model.workload attribute)": [[34, "mlonmcu.models.model.Workload.DEFAULTS"]], "dhrystonefrontend (class in mlonmcu.models.frontend)": [[34, "mlonmcu.models.frontend.DhrystoneFrontend"]], "dhrystoneprogram (class in mlonmcu.models.model)": [[34, "mlonmcu.models.model.DhrystoneProgram"]], "embenchfrontend (class in mlonmcu.models.frontend)": [[34, "mlonmcu.models.frontend.EmbenchFrontend"]], "embenchprogram (class in mlonmcu.models.model)": [[34, "mlonmcu.models.model.EmbenchProgram"]], "examplefrontend (class in mlonmcu.models.frontend)": [[34, "mlonmcu.models.frontend.ExampleFrontend"]], "exampleprogram (class in mlonmcu.models.model)": [[34, "mlonmcu.models.model.ExampleProgram"]], "features (mlonmcu.models.layergenfrontend attribute)": [[34, "mlonmcu.models.LayerGenFrontend.FEATURES"]], "features (mlonmcu.models.packedfrontend attribute)": [[34, "mlonmcu.models.PackedFrontend.FEATURES"]], "features (mlonmcu.models.tflitefrontend attribute)": [[34, "mlonmcu.models.TfLiteFrontend.FEATURES"]], "features (mlonmcu.models.frontend.frontend attribute)": [[34, "mlonmcu.models.frontend.Frontend.FEATURES"]], "features (mlonmcu.models.frontend.layergenfrontend attribute)": [[34, "mlonmcu.models.frontend.LayerGenFrontend.FEATURES"]], "features (mlonmcu.models.frontend.packedfrontend attribute)": [[34, "mlonmcu.models.frontend.PackedFrontend.FEATURES"]], "features (mlonmcu.models.frontend.relayfrontend attribute)": [[34, "mlonmcu.models.frontend.RelayFrontend.FEATURES"]], "features (mlonmcu.models.frontend.tflitefrontend attribute)": [[34, "mlonmcu.models.frontend.TfLiteFrontend.FEATURES"]], "frontend (class in mlonmcu.models.frontend)": [[34, "mlonmcu.models.frontend.Frontend"]], "ipynb (mlonmcu.models.model.modelformats attribute)": [[34, "mlonmcu.models.model.ModelFormats.IPYNB"]], "layergenfrontend (class in mlonmcu.models)": [[34, "mlonmcu.models.LayerGenFrontend"]], "layergenfrontend (class in mlonmcu.models.frontend)": [[34, "mlonmcu.models.frontend.LayerGenFrontend"]], "mathisfrontend (class in mlonmcu.models.frontend)": [[34, "mlonmcu.models.frontend.MathisFrontend"]], "mathisprogram (class in mlonmcu.models.model)": [[34, "mlonmcu.models.model.MathisProgram"]], "mibenchfrontend (class in mlonmcu.models.frontend)": [[34, "mlonmcu.models.frontend.MibenchFrontend"]], "mibenchprogram (class in mlonmcu.models.model)": [[34, "mlonmcu.models.model.MibenchProgram"]], "model (class in mlonmcu.models.model)": [[34, "mlonmcu.models.model.Model"]], "modelformat (class in mlonmcu.models.model)": [[34, "mlonmcu.models.model.ModelFormat"]], "modelformats (class in mlonmcu.models.model)": [[34, "mlonmcu.models.model.ModelFormats"]], "modelgroup (class in mlonmcu.models.group)": [[34, "mlonmcu.models.group.ModelGroup"]], "none (mlonmcu.models.model.modelformats attribute)": [[34, "mlonmcu.models.model.ModelFormats.NONE"]], "onnx (mlonmcu.models.model.modelformats attribute)": [[34, "mlonmcu.models.model.ModelFormats.ONNX"]], "onnxfrontend (class in mlonmcu.models)": [[34, "mlonmcu.models.ONNXFrontend"]], "onnxfrontend (class in mlonmcu.models.frontend)": [[34, "mlonmcu.models.frontend.ONNXFrontend"]], "optional (mlonmcu.models.tflitefrontend attribute)": [[34, "mlonmcu.models.TfLiteFrontend.OPTIONAL"]], "optional (mlonmcu.models.frontend.frontend attribute)": [[34, "mlonmcu.models.frontend.Frontend.OPTIONAL"]], "optional (mlonmcu.models.frontend.tflitefrontend attribute)": [[34, "mlonmcu.models.frontend.TfLiteFrontend.OPTIONAL"]], "packed (mlonmcu.models.model.modelformats attribute)": [[34, "mlonmcu.models.model.ModelFormats.PACKED"]], "paddle (mlonmcu.models.model.modelformats attribute)": [[34, "mlonmcu.models.model.ModelFormats.PADDLE"]], "pb (mlonmcu.models.model.modelformats attribute)": [[34, "mlonmcu.models.model.ModelFormats.PB"]], "pbfrontend (class in mlonmcu.models)": [[34, "mlonmcu.models.PBFrontend"]], "pbfrontend (class in mlonmcu.models.frontend)": [[34, "mlonmcu.models.frontend.PBFrontend"]], "packedfrontend (class in mlonmcu.models)": [[34, "mlonmcu.models.PackedFrontend"]], "packedfrontend (class in mlonmcu.models.frontend)": [[34, "mlonmcu.models.frontend.PackedFrontend"]], "paddlefrontend (class in mlonmcu.models.frontend)": [[34, "mlonmcu.models.frontend.PaddleFrontend"]], "polybenchfrontend (class in mlonmcu.models.frontend)": [[34, "mlonmcu.models.frontend.PolybenchFrontend"]], "polybenchprogram (class in mlonmcu.models.model)": [[34, "mlonmcu.models.model.PolybenchProgram"]], "program (class in mlonmcu.models.model)": [[34, "mlonmcu.models.model.Program"]], "relay (mlonmcu.models.model.modelformats attribute)": [[34, "mlonmcu.models.model.ModelFormats.RELAY"]], "required (mlonmcu.models.layergenfrontend attribute)": [[34, "mlonmcu.models.LayerGenFrontend.REQUIRED"]], "required (mlonmcu.models.packedfrontend attribute)": [[34, "mlonmcu.models.PackedFrontend.REQUIRED"]], "required (mlonmcu.models.tflitefrontend attribute)": [[34, "mlonmcu.models.TfLiteFrontend.REQUIRED"]], "required (mlonmcu.models.frontend.coremarkfrontend attribute)": [[34, "mlonmcu.models.frontend.CoremarkFrontend.REQUIRED"]], "required (mlonmcu.models.frontend.dhrystonefrontend attribute)": [[34, "mlonmcu.models.frontend.DhrystoneFrontend.REQUIRED"]], "required (mlonmcu.models.frontend.embenchfrontend attribute)": [[34, "mlonmcu.models.frontend.EmbenchFrontend.REQUIRED"]], "required (mlonmcu.models.frontend.frontend attribute)": [[34, "mlonmcu.models.frontend.Frontend.REQUIRED"]], "required (mlonmcu.models.frontend.layergenfrontend attribute)": [[34, "mlonmcu.models.frontend.LayerGenFrontend.REQUIRED"]], "required (mlonmcu.models.frontend.mathisfrontend attribute)": [[34, "mlonmcu.models.frontend.MathisFrontend.REQUIRED"]], "required (mlonmcu.models.frontend.mibenchfrontend attribute)": [[34, "mlonmcu.models.frontend.MibenchFrontend.REQUIRED"]], "required (mlonmcu.models.frontend.packedfrontend attribute)": [[34, "mlonmcu.models.frontend.PackedFrontend.REQUIRED"]], "required (mlonmcu.models.frontend.polybenchfrontend attribute)": [[34, "mlonmcu.models.frontend.PolybenchFrontend.REQUIRED"]], "required (mlonmcu.models.frontend.relayfrontend attribute)": [[34, "mlonmcu.models.frontend.RelayFrontend.REQUIRED"]], "required (mlonmcu.models.frontend.taclebenchfrontend attribute)": [[34, "mlonmcu.models.frontend.TaclebenchFrontend.REQUIRED"]], "required (mlonmcu.models.frontend.tflitefrontend attribute)": [[34, "mlonmcu.models.frontend.TfLiteFrontend.REQUIRED"]], "relayfrontend (class in mlonmcu.models.frontend)": [[34, "mlonmcu.models.frontend.RelayFrontend"]], "simplefrontend (class in mlonmcu.models.frontend)": [[34, "mlonmcu.models.frontend.SimpleFrontend"]], "text (mlonmcu.models.model.modelformats attribute)": [[34, "mlonmcu.models.model.ModelFormats.TEXT"]], "tflite (mlonmcu.models.model.modelformats attribute)": [[34, "mlonmcu.models.model.ModelFormats.TFLITE"]], "tflmimodeloptions (class in mlonmcu.models.options)": [[34, "mlonmcu.models.options.TFLMIModelOptions"]], "tvmrtmodeloptions (class in mlonmcu.models.options)": [[34, "mlonmcu.models.options.TVMRTModelOptions"]], "taclebenchfrontend (class in mlonmcu.models.frontend)": [[34, "mlonmcu.models.frontend.TaclebenchFrontend"]], "taclebenchprogram (class in mlonmcu.models.model)": [[34, "mlonmcu.models.model.TaclebenchProgram"]], "tflitefrontend (class in mlonmcu.models)": [[34, "mlonmcu.models.TfLiteFrontend"]], "tflitefrontend (class in mlonmcu.models.frontend)": [[34, "mlonmcu.models.frontend.TfLiteFrontend"]], "workload (class in mlonmcu.models.model)": [[34, "mlonmcu.models.model.Workload"]], "add_platform_config() (mlonmcu.models.frontend.frontend method)": [[34, "mlonmcu.models.frontend.Frontend.add_platform_config"]], "add_platform_config() (mlonmcu.models.model.workload method)": [[34, "mlonmcu.models.model.Workload.add_platform_config"]], "add_platform_defs() (mlonmcu.models.frontend.frontend method)": [[34, "mlonmcu.models.frontend.Frontend.add_platform_defs"]], "add_platform_defs() (mlonmcu.models.model.workload method)": [[34, "mlonmcu.models.model.Workload.add_platform_defs"]], "analyze_enable (mlonmcu.models.tflitefrontend property)": [[34, "mlonmcu.models.TfLiteFrontend.analyze_enable"]], "analyze_enable (mlonmcu.models.frontend.tflitefrontend property)": [[34, "mlonmcu.models.frontend.TfLiteFrontend.analyze_enable"]], "analyze_script (mlonmcu.models.tflitefrontend property)": [[34, "mlonmcu.models.TfLiteFrontend.analyze_script"]], "analyze_script (mlonmcu.models.frontend.tflitefrontend property)": [[34, "mlonmcu.models.frontend.TfLiteFrontend.analyze_script"]], "apply_modelgroups() (in module mlonmcu.models.lookup)": [[34, "mlonmcu.models.lookup.apply_modelgroups"]], "check (mlonmcu.models.packedfrontend property)": [[34, "mlonmcu.models.PackedFrontend.check"]], "check (mlonmcu.models.frontend.packedfrontend property)": [[34, "mlonmcu.models.frontend.PackedFrontend.check"]], "convert() (in module mlonmcu.models.convert_data)": [[34, "mlonmcu.models.convert_data.convert"]], "export_artifacts() (mlonmcu.models.frontend.frontend method)": [[34, "mlonmcu.models.frontend.Frontend.export_artifacts"]], "extension (mlonmcu.models.model.modelformats property)": [[34, "mlonmcu.models.model.ModelFormats.extension"]], "extensions (mlonmcu.models.model.modelformat attribute)": [[34, "mlonmcu.models.model.ModelFormat.extensions"]], "extensions (mlonmcu.models.model.modelformats property)": [[34, "mlonmcu.models.model.ModelFormats.extensions"]], "fake_pack (mlonmcu.models.packedfrontend property)": [[34, "mlonmcu.models.PackedFrontend.fake_pack"]], "fake_pack (mlonmcu.models.frontend.packedfrontend property)": [[34, "mlonmcu.models.frontend.PackedFrontend.fake_pack"]], "fill_data_source() (in module mlonmcu.models.utils)": [[34, "mlonmcu.models.utils.fill_data_source"]], "find_metadata() (in module mlonmcu.models.lookup)": [[34, "mlonmcu.models.lookup.find_metadata"]], "fmt (mlonmcu.models.layergenfrontend property)": [[34, "mlonmcu.models.LayerGenFrontend.fmt"]], "fmt (mlonmcu.models.frontend.layergenfrontend property)": [[34, "mlonmcu.models.frontend.LayerGenFrontend.fmt"]], "from_extension() (mlonmcu.models.model.modelformats class method)": [[34, "mlonmcu.models.model.ModelFormats.from_extension"]], "generate() (mlonmcu.models.layergenfrontend method)": [[34, "mlonmcu.models.LayerGenFrontend.generate"]], "generate() (mlonmcu.models.tflitefrontend method)": [[34, "mlonmcu.models.TfLiteFrontend.generate"]], "generate() (mlonmcu.models.frontend.coremarkfrontend method)": [[34, "mlonmcu.models.frontend.CoremarkFrontend.generate"]], "generate() (mlonmcu.models.frontend.dhrystonefrontend method)": [[34, "mlonmcu.models.frontend.DhrystoneFrontend.generate"]], "generate() (mlonmcu.models.frontend.embenchfrontend method)": [[34, "mlonmcu.models.frontend.EmbenchFrontend.generate"]], "generate() (mlonmcu.models.frontend.examplefrontend method)": [[34, "mlonmcu.models.frontend.ExampleFrontend.generate"]], "generate() (mlonmcu.models.frontend.frontend method)": [[34, "mlonmcu.models.frontend.Frontend.generate"]], "generate() (mlonmcu.models.frontend.layergenfrontend method)": [[34, "mlonmcu.models.frontend.LayerGenFrontend.generate"]], "generate() (mlonmcu.models.frontend.mathisfrontend method)": [[34, "mlonmcu.models.frontend.MathisFrontend.generate"]], "generate() (mlonmcu.models.frontend.mibenchfrontend method)": [[34, "mlonmcu.models.frontend.MibenchFrontend.generate"]], "generate() (mlonmcu.models.frontend.polybenchfrontend method)": [[34, "mlonmcu.models.frontend.PolybenchFrontend.generate"]], "generate() (mlonmcu.models.frontend.taclebenchfrontend method)": [[34, "mlonmcu.models.frontend.TaclebenchFrontend.generate"]], "generate() (mlonmcu.models.frontend.tflitefrontend method)": [[34, "mlonmcu.models.frontend.TfLiteFrontend.generate"]], "generate_artifacts() (mlonmcu.models.frontend.frontend method)": [[34, "mlonmcu.models.frontend.Frontend.generate_artifacts"]], "get_data_source() (in module mlonmcu.models.utils)": [[34, "mlonmcu.models.utils.get_data_source"]], "get_elem_size() (mlonmcu.models.model.mathisprogram method)": [[34, "mlonmcu.models.model.MathisProgram.get_elem_size"]], "get_model_directories() (in module mlonmcu.models.lookup)": [[34, "mlonmcu.models.lookup.get_model_directories"]], "get_nargs() (mlonmcu.models.model.mathisprogram method)": [[34, "mlonmcu.models.model.MathisProgram.get_nargs"]], "get_platform_config() (mlonmcu.models.frontend.coremarkfrontend method)": [[34, "mlonmcu.models.frontend.CoremarkFrontend.get_platform_config"]], "get_platform_config() (mlonmcu.models.frontend.dhrystonefrontend method)": [[34, "mlonmcu.models.frontend.DhrystoneFrontend.get_platform_config"]], "get_platform_config() (mlonmcu.models.frontend.embenchfrontend method)": [[34, "mlonmcu.models.frontend.EmbenchFrontend.get_platform_config"]], "get_platform_config() (mlonmcu.models.frontend.examplefrontend method)": [[34, "mlonmcu.models.frontend.ExampleFrontend.get_platform_config"]], "get_platform_config() (mlonmcu.models.frontend.frontend method)": [[34, "mlonmcu.models.frontend.Frontend.get_platform_config"]], "get_platform_config() (mlonmcu.models.frontend.mathisfrontend method)": [[34, "mlonmcu.models.frontend.MathisFrontend.get_platform_config"]], "get_platform_config() (mlonmcu.models.frontend.mibenchfrontend method)": [[34, "mlonmcu.models.frontend.MibenchFrontend.get_platform_config"]], "get_platform_config() (mlonmcu.models.frontend.polybenchfrontend method)": [[34, "mlonmcu.models.frontend.PolybenchFrontend.get_platform_config"]], "get_platform_config() (mlonmcu.models.frontend.taclebenchfrontend method)": [[34, "mlonmcu.models.frontend.TaclebenchFrontend.get_platform_config"]], "get_platform_config() (mlonmcu.models.model.workload method)": [[34, "mlonmcu.models.model.Workload.get_platform_config"]], "get_platform_defs() (mlonmcu.models.frontend.embenchfrontend method)": [[34, "mlonmcu.models.frontend.EmbenchFrontend.get_platform_defs"]], "get_platform_defs() (mlonmcu.models.frontend.frontend method)": [[34, "mlonmcu.models.frontend.Frontend.get_platform_defs"]], "get_platform_defs() (mlonmcu.models.frontend.mibenchfrontend method)": [[34, "mlonmcu.models.frontend.MibenchFrontend.get_platform_defs"]], "get_platform_defs() (mlonmcu.models.frontend.polybenchfrontend method)": [[34, "mlonmcu.models.frontend.PolybenchFrontend.get_platform_defs"]], "get_platform_defs() (mlonmcu.models.frontend.taclebenchfrontend method)": [[34, "mlonmcu.models.frontend.TaclebenchFrontend.get_platform_defs"]], "get_platform_defs() (mlonmcu.models.model.coremarkprogram method)": [[34, "mlonmcu.models.model.CoremarkProgram.get_platform_defs"]], "get_platform_defs() (mlonmcu.models.model.dhrystoneprogram method)": [[34, "mlonmcu.models.model.DhrystoneProgram.get_platform_defs"]], "get_platform_defs() (mlonmcu.models.model.embenchprogram method)": [[34, "mlonmcu.models.model.EmbenchProgram.get_platform_defs"]], "get_platform_defs() (mlonmcu.models.model.exampleprogram method)": [[34, "mlonmcu.models.model.ExampleProgram.get_platform_defs"]], "get_platform_defs() (mlonmcu.models.model.mathisprogram method)": [[34, "mlonmcu.models.model.MathisProgram.get_platform_defs"]], "get_platform_defs() (mlonmcu.models.model.mibenchprogram method)": [[34, "mlonmcu.models.model.MibenchProgram.get_platform_defs"]], "get_platform_defs() (mlonmcu.models.model.polybenchprogram method)": [[34, "mlonmcu.models.model.PolybenchProgram.get_platform_defs"]], "get_platform_defs() (mlonmcu.models.model.taclebenchprogram method)": [[34, "mlonmcu.models.model.TaclebenchProgram.get_platform_defs"]], "get_platform_defs() (mlonmcu.models.model.workload method)": [[34, "mlonmcu.models.model.Workload.get_platform_defs"]], "ignore_existing (mlonmcu.models.packedfrontend property)": [[34, "mlonmcu.models.PackedFrontend.ignore_existing"]], "ignore_existing (mlonmcu.models.frontend.packedfrontend property)": [[34, "mlonmcu.models.frontend.PackedFrontend.ignore_existing"]], "input_shapes (mlonmcu.models.model.model property)": [[34, "mlonmcu.models.model.Model.input_shapes"]], "input_types (mlonmcu.models.model.model property)": [[34, "mlonmcu.models.model.Model.input_types"]], "inputs_path (mlonmcu.models.model.model property)": [[34, "mlonmcu.models.model.Model.inputs_path"]], "layergen_exe (mlonmcu.models.layergenfrontend property)": [[34, "mlonmcu.models.LayerGenFrontend.layergen_exe"]], "layergen_exe (mlonmcu.models.frontend.layergenfrontend property)": [[34, "mlonmcu.models.frontend.LayerGenFrontend.layergen_exe"]], "list_modelgroups() (in module mlonmcu.models.lookup)": [[34, "mlonmcu.models.lookup.list_modelgroups"]], "list_models() (in module mlonmcu.models.lookup)": [[34, "mlonmcu.models.lookup.list_models"]], "lookup_data_buffers() (in module mlonmcu.models.utils)": [[34, "mlonmcu.models.utils.lookup_data_buffers"]], "lookup_models() (in module mlonmcu.models.lookup)": [[34, "mlonmcu.models.lookup.lookup_models"]], "lookup_models() (mlonmcu.models.frontend.coremarkfrontend method)": [[34, "mlonmcu.models.frontend.CoremarkFrontend.lookup_models"]], "lookup_models() (mlonmcu.models.frontend.dhrystonefrontend method)": [[34, "mlonmcu.models.frontend.DhrystoneFrontend.lookup_models"]], "lookup_models() (mlonmcu.models.frontend.embenchfrontend method)": [[34, "mlonmcu.models.frontend.EmbenchFrontend.lookup_models"]], "lookup_models() (mlonmcu.models.frontend.examplefrontend method)": [[34, "mlonmcu.models.frontend.ExampleFrontend.lookup_models"]], "lookup_models() (mlonmcu.models.frontend.frontend method)": [[34, "mlonmcu.models.frontend.Frontend.lookup_models"]], "lookup_models() (mlonmcu.models.frontend.mathisfrontend method)": [[34, "mlonmcu.models.frontend.MathisFrontend.lookup_models"]], "lookup_models() (mlonmcu.models.frontend.mibenchfrontend method)": [[34, "mlonmcu.models.frontend.MibenchFrontend.lookup_models"]], "lookup_models() (mlonmcu.models.frontend.polybenchfrontend method)": [[34, "mlonmcu.models.frontend.PolybenchFrontend.lookup_models"]], "lookup_models() (mlonmcu.models.frontend.taclebenchfrontend method)": [[34, "mlonmcu.models.frontend.TaclebenchFrontend.lookup_models"]], "lookup_models_and_groups() (in module mlonmcu.models.lookup)": [[34, "mlonmcu.models.lookup.lookup_models_and_groups"]], "main() (in module mlonmcu.models.convert_data)": [[34, "mlonmcu.models.convert_data.main"]], "make_hex_array() (in module mlonmcu.models.utils)": [[34, "mlonmcu.models.utils.make_hex_array"]], "map_frontend_to_model() (in module mlonmcu.models.lookup)": [[34, "mlonmcu.models.lookup.map_frontend_to_model"]], "metadata_path (mlonmcu.models.model.model property)": [[34, "mlonmcu.models.model.Model.metadata_path"]], "mlonmcu.models": [[34, "module-mlonmcu.models"]], "mlonmcu.models.convert_data": [[34, "module-mlonmcu.models.convert_data"]], "mlonmcu.models.frontend": [[34, "module-mlonmcu.models.frontend"]], "mlonmcu.models.group": [[34, "module-mlonmcu.models.group"]], "mlonmcu.models.lookup": [[34, "module-mlonmcu.models.lookup"]], "mlonmcu.models.metadata": [[34, "module-mlonmcu.models.metadata"]], "mlonmcu.models.model": [[34, "module-mlonmcu.models.model"]], "mlonmcu.models.options": [[34, "module-mlonmcu.models.options"]], "mlonmcu.models.utils": [[34, "module-mlonmcu.models.utils"]], "output_shapes (mlonmcu.models.model.model property)": [[34, "mlonmcu.models.model.Model.output_shapes"]], "output_types (mlonmcu.models.model.model property)": [[34, "mlonmcu.models.model.Model.output_types"]], "outputs_path (mlonmcu.models.model.model property)": [[34, "mlonmcu.models.model.Model.outputs_path"]], "pack_script (mlonmcu.models.tflitefrontend property)": [[34, "mlonmcu.models.TfLiteFrontend.pack_script"]], "pack_script (mlonmcu.models.frontend.tflitefrontend property)": [[34, "mlonmcu.models.frontend.TfLiteFrontend.pack_script"]], "parse_metadata() (in module mlonmcu.models.metadata)": [[34, "mlonmcu.models.metadata.parse_metadata"]], "parse_metadata_from_path() (in module mlonmcu.models.model)": [[34, "mlonmcu.models.model.parse_metadata_from_path"]], "parse_model_options_for_backend() (in module mlonmcu.models.options)": [[34, "mlonmcu.models.options.parse_model_options_for_backend"]], "parse_shape_string() (in module mlonmcu.models.model)": [[34, "mlonmcu.models.model.parse_shape_string"]], "parse_type_string() (in module mlonmcu.models.model)": [[34, "mlonmcu.models.model.parse_type_string"]], "print_groups() (in module mlonmcu.models.lookup)": [[34, "mlonmcu.models.lookup.print_groups"]], "print_models() (in module mlonmcu.models.lookup)": [[34, "mlonmcu.models.lookup.print_models"]], "print_paths() (in module mlonmcu.models.lookup)": [[34, "mlonmcu.models.lookup.print_paths"]], "print_summary() (in module mlonmcu.models)": [[34, "mlonmcu.models.print_summary"]], "print_summary() (in module mlonmcu.models.lookup)": [[34, "mlonmcu.models.lookup.print_summary"]], "process_features() (mlonmcu.models.frontend.frontend method)": [[34, "mlonmcu.models.frontend.Frontend.process_features"]], "process_metadata() (mlonmcu.models.frontend.frontend method)": [[34, "mlonmcu.models.frontend.Frontend.process_metadata"]], "produce_artifacts() (mlonmcu.models.layergenfrontend method)": [[34, "mlonmcu.models.LayerGenFrontend.produce_artifacts"]], "produce_artifacts() (mlonmcu.models.packedfrontend method)": [[34, "mlonmcu.models.PackedFrontend.produce_artifacts"]], "produce_artifacts() (mlonmcu.models.tflitefrontend method)": [[34, "mlonmcu.models.TfLiteFrontend.produce_artifacts"]], "produce_artifacts() (mlonmcu.models.frontend.frontend method)": [[34, "mlonmcu.models.frontend.Frontend.produce_artifacts"]], "produce_artifacts() (mlonmcu.models.frontend.layergenfrontend method)": [[34, "mlonmcu.models.frontend.LayerGenFrontend.produce_artifacts"]], "produce_artifacts() (mlonmcu.models.frontend.packedfrontend method)": [[34, "mlonmcu.models.frontend.PackedFrontend.produce_artifacts"]], "produce_artifacts() (mlonmcu.models.frontend.relayfrontend method)": [[34, "mlonmcu.models.frontend.RelayFrontend.produce_artifacts"]], "produce_artifacts() (mlonmcu.models.frontend.simplefrontend method)": [[34, "mlonmcu.models.frontend.SimpleFrontend.produce_artifacts"]], "produce_artifacts() (mlonmcu.models.frontend.tflitefrontend method)": [[34, "mlonmcu.models.frontend.TfLiteFrontend.produce_artifacts"]], "relayviz_plotter (mlonmcu.models.frontend.relayfrontend property)": [[34, "mlonmcu.models.frontend.RelayFrontend.relayviz_plotter"]], "size (mlonmcu.models.model.mathisprogram property)": [[34, "mlonmcu.models.model.MathisProgram.size"]], "skip_check (mlonmcu.models.model.model property)": [[34, "mlonmcu.models.model.Model.skip_check"]], "split_layers (mlonmcu.models.tflitefrontend property)": [[34, "mlonmcu.models.TfLiteFrontend.split_layers"]], "split_layers (mlonmcu.models.frontend.tflitefrontend property)": [[34, "mlonmcu.models.frontend.TfLiteFrontend.split_layers"]], "support_path (mlonmcu.models.model.model property)": [[34, "mlonmcu.models.model.Model.support_path"]], "supported_names (mlonmcu.models.frontend.coremarkfrontend property)": [[34, "mlonmcu.models.frontend.CoremarkFrontend.supported_names"]], "supported_names (mlonmcu.models.frontend.dhrystonefrontend property)": [[34, "mlonmcu.models.frontend.DhrystoneFrontend.supported_names"]], "supported_names (mlonmcu.models.frontend.embenchfrontend property)": [[34, "mlonmcu.models.frontend.EmbenchFrontend.supported_names"]], "supported_names (mlonmcu.models.frontend.examplefrontend property)": [[34, "mlonmcu.models.frontend.ExampleFrontend.supported_names"]], "supported_names (mlonmcu.models.frontend.mathisfrontend property)": [[34, "mlonmcu.models.frontend.MathisFrontend.supported_names"]], "supported_names (mlonmcu.models.frontend.mibenchfrontend property)": [[34, "mlonmcu.models.frontend.MibenchFrontend.supported_names"]], "supported_names (mlonmcu.models.frontend.polybenchfrontend property)": [[34, "mlonmcu.models.frontend.PolybenchFrontend.supported_names"]], "supported_names (mlonmcu.models.frontend.taclebenchfrontend property)": [[34, "mlonmcu.models.frontend.TaclebenchFrontend.supported_names"]], "supports_formats() (mlonmcu.models.frontend.frontend method)": [[34, "mlonmcu.models.frontend.Frontend.supports_formats"]], "tvm_build_dir (mlonmcu.models.frontend.relayfrontend property)": [[34, "mlonmcu.models.frontend.RelayFrontend.tvm_build_dir"]], "tvm_pythonpath (mlonmcu.models.frontend.relayfrontend property)": [[34, "mlonmcu.models.frontend.RelayFrontend.tvm_pythonpath"]], "use_inout_data (mlonmcu.models.frontend.frontend property)": [[34, "mlonmcu.models.frontend.Frontend.use_inout_data"]], "use_packed (mlonmcu.models.packedfrontend property)": [[34, "mlonmcu.models.PackedFrontend.use_packed"]], "use_packed (mlonmcu.models.frontend.packedfrontend property)": [[34, "mlonmcu.models.frontend.PackedFrontend.use_packed"]], "value (mlonmcu.models.model.modelformat attribute)": [[34, "mlonmcu.models.model.ModelFormat.value"]], "visualize_enable (mlonmcu.models.tflitefrontend property)": [[34, "mlonmcu.models.TfLiteFrontend.visualize_enable"]], "visualize_enable (mlonmcu.models.frontend.tflitefrontend property)": [[34, "mlonmcu.models.frontend.TfLiteFrontend.visualize_enable"]], "visualize_graph (mlonmcu.models.frontend.relayfrontend property)": [[34, "mlonmcu.models.frontend.RelayFrontend.visualize_graph"]], "visualize_script (mlonmcu.models.tflitefrontend property)": [[34, "mlonmcu.models.TfLiteFrontend.visualize_script"]], "visualize_script (mlonmcu.models.frontend.tflitefrontend property)": [[34, "mlonmcu.models.frontend.TfLiteFrontend.visualize_script"]], "write_file() (in module mlonmcu.models.convert_data)": [[34, "mlonmcu.models.convert_data.write_file"]], "buildplatform (class in mlonmcu.platform.platform)": [[35, "mlonmcu.platform.platform.BuildPlatform"]], "compileplatform (class in mlonmcu.platform.platform)": [[35, "mlonmcu.platform.platform.CompilePlatform"]], "defaults (mlonmcu.platform.platform attribute)": [[35, "mlonmcu.platform.Platform.DEFAULTS"]], "defaults (mlonmcu.platform.platform.compileplatform attribute)": [[35, "mlonmcu.platform.platform.CompilePlatform.DEFAULTS"]], "defaults (mlonmcu.platform.platform.platform attribute)": [[35, "mlonmcu.platform.platform.Platform.DEFAULTS"]], "features (mlonmcu.platform.platform attribute)": [[35, "mlonmcu.platform.Platform.FEATURES"]], "features (mlonmcu.platform.platform.compileplatform attribute)": [[35, "mlonmcu.platform.platform.CompilePlatform.FEATURES"]], "features (mlonmcu.platform.platform.platform attribute)": [[35, "mlonmcu.platform.platform.Platform.FEATURES"]], "optional (mlonmcu.platform.platform attribute)": [[35, "mlonmcu.platform.Platform.OPTIONAL"]], "optional (mlonmcu.platform.platform.platform attribute)": [[35, "mlonmcu.platform.platform.Platform.OPTIONAL"]], "platform (class in mlonmcu.platform)": [[35, "mlonmcu.platform.Platform"]], "platform (class in mlonmcu.platform.platform)": [[35, "mlonmcu.platform.platform.Platform"]], "required (mlonmcu.platform.platform attribute)": [[35, "mlonmcu.platform.Platform.REQUIRED"]], "required (mlonmcu.platform.platform.platform attribute)": [[35, "mlonmcu.platform.platform.Platform.REQUIRED"]], "targetplatform (class in mlonmcu.platform.platform)": [[35, "mlonmcu.platform.platform.TargetPlatform"]], "tuneplatform (class in mlonmcu.platform.platform)": [[35, "mlonmcu.platform.platform.TunePlatform"]], "create_target() (mlonmcu.platform.platform.targetplatform method)": [[35, "mlonmcu.platform.platform.TargetPlatform.create_target"]], "debug (mlonmcu.platform.platform.compileplatform property)": [[35, "mlonmcu.platform.platform.CompilePlatform.debug"]], "export_artifacts() (mlonmcu.platform.platform.buildplatform method)": [[35, "mlonmcu.platform.platform.BuildPlatform.export_artifacts"]], "export_artifacts() (mlonmcu.platform.platform.tuneplatform method)": [[35, "mlonmcu.platform.platform.TunePlatform.export_artifacts"]], "flash() (mlonmcu.platform.platform.targetplatform method)": [[35, "mlonmcu.platform.platform.TargetPlatform.flash"]], "generate() (mlonmcu.platform.platform.compileplatform method)": [[35, "mlonmcu.platform.platform.CompilePlatform.generate"]], "generate_artifacts() (mlonmcu.platform.platform.compileplatform method)": [[35, "mlonmcu.platform.platform.CompilePlatform.generate_artifacts"]], "get_metrics() (mlonmcu.platform.platform.compileplatform method)": [[35, "mlonmcu.platform.platform.CompilePlatform.get_metrics"]], "get_platform_names() (in module mlonmcu.platform.lookup)": [[35, "mlonmcu.platform.lookup.get_platform_names"]], "get_platforms() (in module mlonmcu.platform)": [[35, "mlonmcu.platform.get_platforms"]], "get_platforms_backends() (in module mlonmcu.platform.lookup)": [[35, "mlonmcu.platform.lookup.get_platforms_backends"]], "get_platforms_targets() (in module mlonmcu.platform.lookup)": [[35, "mlonmcu.platform.lookup.get_platforms_targets"]], "get_supported_backends() (mlonmcu.platform.platform method)": [[35, "mlonmcu.platform.Platform.get_supported_backends"]], "get_supported_backends() (mlonmcu.platform.platform.platform method)": [[35, "mlonmcu.platform.platform.Platform.get_supported_backends"]], "get_supported_targets() (mlonmcu.platform.platform method)": [[35, "mlonmcu.platform.Platform.get_supported_targets"]], "get_supported_targets() (mlonmcu.platform.platform.platform method)": [[35, "mlonmcu.platform.platform.Platform.get_supported_targets"]], "init_directory() (mlonmcu.platform.platform method)": [[35, "mlonmcu.platform.Platform.init_directory"]], "init_directory() (mlonmcu.platform.platform.platform method)": [[35, "mlonmcu.platform.platform.Platform.init_directory"]], "mlonmcu.platform": [[35, "module-mlonmcu.platform"]], "mlonmcu.platform.lookup": [[35, "module-mlonmcu.platform.lookup"]], "mlonmcu.platform.platform": [[35, "module-mlonmcu.platform.platform"]], "monitor() (mlonmcu.platform.platform.targetplatform method)": [[35, "mlonmcu.platform.platform.TargetPlatform.monitor"]], "num_threads (mlonmcu.platform.platform.compileplatform property)": [[35, "mlonmcu.platform.platform.CompilePlatform.num_threads"]], "print_backends() (in module mlonmcu.platform.lookup)": [[35, "mlonmcu.platform.lookup.print_backends"]], "print_outputs (mlonmcu.platform.platform property)": [[35, "mlonmcu.platform.Platform.print_outputs"]], "print_outputs (mlonmcu.platform.platform.platform property)": [[35, "mlonmcu.platform.platform.Platform.print_outputs"]], "print_platforms() (in module mlonmcu.platform.lookup)": [[35, "mlonmcu.platform.lookup.print_platforms"]], "print_summary() (in module mlonmcu.platform.lookup)": [[35, "mlonmcu.platform.lookup.print_summary"]], "print_targets() (in module mlonmcu.platform.lookup)": [[35, "mlonmcu.platform.lookup.print_targets"]], "process_features() (mlonmcu.platform.platform method)": [[35, "mlonmcu.platform.Platform.process_features"]], "process_features() (mlonmcu.platform.platform.platform method)": [[35, "mlonmcu.platform.platform.Platform.process_features"]], "register_platform() (in module mlonmcu.platform)": [[35, "mlonmcu.platform.register_platform"]], "run() (mlonmcu.platform.platform.targetplatform method)": [[35, "mlonmcu.platform.platform.TargetPlatform.run"]], "supports_build (mlonmcu.platform.platform property)": [[35, "mlonmcu.platform.Platform.supports_build"]], "supports_build (mlonmcu.platform.platform.buildplatform property)": [[35, "mlonmcu.platform.platform.BuildPlatform.supports_build"]], "supports_build (mlonmcu.platform.platform.platform property)": [[35, "mlonmcu.platform.platform.Platform.supports_build"]], "supports_compile (mlonmcu.platform.platform property)": [[35, "mlonmcu.platform.Platform.supports_compile"]], "supports_compile (mlonmcu.platform.platform.compileplatform property)": [[35, "mlonmcu.platform.platform.CompilePlatform.supports_compile"]], "supports_compile (mlonmcu.platform.platform.platform property)": [[35, "mlonmcu.platform.platform.Platform.supports_compile"]], "supports_flash (mlonmcu.platform.platform property)": [[35, "mlonmcu.platform.Platform.supports_flash"]], "supports_flash (mlonmcu.platform.platform.platform property)": [[35, "mlonmcu.platform.platform.Platform.supports_flash"]], "supports_flash (mlonmcu.platform.platform.targetplatform property)": [[35, "mlonmcu.platform.platform.TargetPlatform.supports_flash"]], "supports_monitor (mlonmcu.platform.platform property)": [[35, "mlonmcu.platform.Platform.supports_monitor"]], "supports_monitor (mlonmcu.platform.platform.platform property)": [[35, "mlonmcu.platform.platform.Platform.supports_monitor"]], "supports_monitor (mlonmcu.platform.platform.targetplatform property)": [[35, "mlonmcu.platform.platform.TargetPlatform.supports_monitor"]], "supports_tune (mlonmcu.platform.platform property)": [[35, "mlonmcu.platform.Platform.supports_tune"]], "supports_tune (mlonmcu.platform.platform.platform property)": [[35, "mlonmcu.platform.platform.Platform.supports_tune"]], "supports_tune (mlonmcu.platform.platform.tuneplatform property)": [[35, "mlonmcu.platform.platform.TunePlatform.supports_tune"]], "tune_model() (mlonmcu.platform.platform.tuneplatform method)": [[35, "mlonmcu.platform.platform.TunePlatform.tune_model"]], "branch (mlonmcu.platform.espidf.espidf_target.esp32c3perfcount attribute)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3PerfCount.BRANCH"]], "branch_taken (mlonmcu.platform.espidf.espidf_target.esp32c3perfcount attribute)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3PerfCount.BRANCH_TAKEN"]], "cycle (mlonmcu.platform.espidf.espidf_target.esp32c3perfcount attribute)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3PerfCount.CYCLE"]], "defaults (mlonmcu.platform.espidf.espidfplatform attribute)": [[36, "mlonmcu.platform.espidf.EspIdfPlatform.DEFAULTS"]], "defaults (mlonmcu.platform.espidf.espidf.espidfplatform attribute)": [[36, "mlonmcu.platform.espidf.espidf.EspIdfPlatform.DEFAULTS"]], "defaults (mlonmcu.platform.espidf.espidf_target.esp32c3target attribute)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3Target.DEFAULTS"]], "esp32c3perfcount (class in mlonmcu.platform.espidf.espidf_target)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3PerfCount"]], "esp32c3target (class in mlonmcu.platform.espidf.espidf_target)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3Target"]], "espidfplatform (class in mlonmcu.platform.espidf)": [[36, "mlonmcu.platform.espidf.EspIdfPlatform"]], "espidfplatform (class in mlonmcu.platform.espidf.espidf)": [[36, "mlonmcu.platform.espidf.espidf.EspIdfPlatform"]], "features (mlonmcu.platform.espidf.espidfplatform attribute)": [[36, "mlonmcu.platform.espidf.EspIdfPlatform.FEATURES"]], "features (mlonmcu.platform.espidf.espidf.espidfplatform attribute)": [[36, "mlonmcu.platform.espidf.espidf.EspIdfPlatform.FEATURES"]], "idle (mlonmcu.platform.espidf.espidf_target.esp32c3perfcount attribute)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3PerfCount.IDLE"]], "inst (mlonmcu.platform.espidf.espidf_target.esp32c3perfcount attribute)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3PerfCount.INST"]], "inst_comp (mlonmcu.platform.espidf.espidf_target.esp32c3perfcount attribute)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3PerfCount.INST_COMP"]], "jmp_hazard (mlonmcu.platform.espidf.espidf_target.esp32c3perfcount attribute)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3PerfCount.JMP_HAZARD"]], "jmp_uncond (mlonmcu.platform.espidf.espidf_target.esp32c3perfcount attribute)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3PerfCount.JMP_UNCOND"]], "ld_hazard (mlonmcu.platform.espidf.espidf_target.esp32c3perfcount attribute)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3PerfCount.LD_HAZARD"]], "load (mlonmcu.platform.espidf.espidf_target.esp32c3perfcount attribute)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3PerfCount.LOAD"]], "required (mlonmcu.platform.espidf.espidfplatform attribute)": [[36, "mlonmcu.platform.espidf.EspIdfPlatform.REQUIRED"]], "required (mlonmcu.platform.espidf.espidf.espidfplatform attribute)": [[36, "mlonmcu.platform.espidf.espidf.EspIdfPlatform.REQUIRED"]], "store (mlonmcu.platform.espidf.espidf_target.esp32c3perfcount attribute)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3PerfCount.STORE"]], "abi (mlonmcu.platform.espidf.espidf_target.esp32c3target property)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3Target.abi"]], "add_backend_config() (mlonmcu.platform.espidf.espidf_target.esp32c3target method)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3Target.add_backend_config"]], "arch (mlonmcu.platform.espidf.espidf_target.esp32c3target property)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3Target.arch"]], "attr (mlonmcu.platform.espidf.espidf_target.esp32c3target property)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3Target.attr"]], "baud (mlonmcu.platform.espidf.espidfplatform property)": [[36, "mlonmcu.platform.espidf.EspIdfPlatform.baud"]], "baud (mlonmcu.platform.espidf.espidf.espidfplatform property)": [[36, "mlonmcu.platform.espidf.espidf.EspIdfPlatform.baud"]], "check() (mlonmcu.platform.espidf.espidfplatform method)": [[36, "mlonmcu.platform.espidf.EspIdfPlatform.check"]], "check() (mlonmcu.platform.espidf.espidf.espidfplatform method)": [[36, "mlonmcu.platform.espidf.espidf.EspIdfPlatform.check"]], "close() (mlonmcu.platform.espidf.espidfplatform method)": [[36, "mlonmcu.platform.espidf.EspIdfPlatform.close"]], "close() (mlonmcu.platform.espidf.espidf.espidfplatform method)": [[36, "mlonmcu.platform.espidf.espidf.EspIdfPlatform.close"]], "compile() (mlonmcu.platform.espidf.espidfplatform method)": [[36, "mlonmcu.platform.espidf.EspIdfPlatform.compile"]], "compile() (mlonmcu.platform.espidf.espidf.espidfplatform method)": [[36, "mlonmcu.platform.espidf.espidf.EspIdfPlatform.compile"]], "count (mlonmcu.platform.espidf.espidf_target.esp32c3target property)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3Target.count"]], "create_espidf_platform_target() (in module mlonmcu.platform.espidf.espidf_target)": [[36, "mlonmcu.platform.espidf.espidf_target.create_espidf_platform_target"]], "create_target() (mlonmcu.platform.espidf.espidfplatform method)": [[36, "mlonmcu.platform.espidf.EspIdfPlatform.create_target"]], "create_target() (mlonmcu.platform.espidf.espidf.espidfplatform method)": [[36, "mlonmcu.platform.espidf.espidf.EspIdfPlatform.create_target"]], "espidf_install_dir (mlonmcu.platform.espidf.espidfplatform property)": [[36, "mlonmcu.platform.espidf.EspIdfPlatform.espidf_install_dir"]], "espidf_install_dir (mlonmcu.platform.espidf.espidf.espidfplatform property)": [[36, "mlonmcu.platform.espidf.espidf.EspIdfPlatform.espidf_install_dir"]], "espidf_src_dir (mlonmcu.platform.espidf.espidfplatform property)": [[36, "mlonmcu.platform.espidf.EspIdfPlatform.espidf_src_dir"]], "espidf_src_dir (mlonmcu.platform.espidf.espidf.espidfplatform property)": [[36, "mlonmcu.platform.espidf.espidf.EspIdfPlatform.espidf_src_dir"]], "extensions (mlonmcu.platform.espidf.espidf_target.esp32c3target property)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3Target.extensions"]], "flash() (mlonmcu.platform.espidf.espidfplatform method)": [[36, "mlonmcu.platform.espidf.EspIdfPlatform.flash"]], "flash() (mlonmcu.platform.espidf.espidf.espidfplatform method)": [[36, "mlonmcu.platform.espidf.espidf.EspIdfPlatform.flash"]], "flash_only (mlonmcu.platform.espidf.espidfplatform property)": [[36, "mlonmcu.platform.espidf.EspIdfPlatform.flash_only"]], "flash_only (mlonmcu.platform.espidf.espidf.espidfplatform property)": [[36, "mlonmcu.platform.espidf.espidf.EspIdfPlatform.flash_only"]], "fpu (mlonmcu.platform.espidf.espidf_target.esp32c3target property)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3Target.fpu"]], "generate() (mlonmcu.platform.espidf.espidfplatform method)": [[36, "mlonmcu.platform.espidf.EspIdfPlatform.generate"]], "generate() (mlonmcu.platform.espidf.espidf.espidfplatform method)": [[36, "mlonmcu.platform.espidf.espidf.EspIdfPlatform.generate"]], "get_arch() (mlonmcu.platform.espidf.espidf_target.esp32c3target method)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3Target.get_arch"]], "get_backend_config() (mlonmcu.platform.espidf.espidf_target.esp32c3target method)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3Target.get_backend_config"]], "get_espidf_platform_targets() (in module mlonmcu.platform.espidf.espidf_target)": [[36, "mlonmcu.platform.espidf.espidf_target.get_espidf_platform_targets"]], "get_idf_cmake_args() (mlonmcu.platform.espidf.espidfplatform method)": [[36, "mlonmcu.platform.espidf.EspIdfPlatform.get_idf_cmake_args"]], "get_idf_cmake_args() (mlonmcu.platform.espidf.espidf.espidfplatform method)": [[36, "mlonmcu.platform.espidf.espidf.EspIdfPlatform.get_idf_cmake_args"]], "get_idf_serial_args() (mlonmcu.platform.espidf.espidfplatform method)": [[36, "mlonmcu.platform.espidf.EspIdfPlatform.get_idf_serial_args"]], "get_idf_serial_args() (mlonmcu.platform.espidf.espidf.espidfplatform method)": [[36, "mlonmcu.platform.espidf.espidf.EspIdfPlatform.get_idf_serial_args"]], "get_platform_defs() (mlonmcu.platform.espidf.espidf_target.esp32c3target method)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3Target.get_platform_defs"]], "get_project_template() (in module mlonmcu.platform.espidf.espidf)": [[36, "mlonmcu.platform.espidf.espidf.get_project_template"]], "get_supported_targets() (mlonmcu.platform.espidf.espidfplatform method)": [[36, "mlonmcu.platform.espidf.EspIdfPlatform.get_supported_targets"]], "get_supported_targets() (mlonmcu.platform.espidf.espidf.espidfplatform method)": [[36, "mlonmcu.platform.espidf.espidf.EspIdfPlatform.get_supported_targets"]], "get_target_system() (mlonmcu.platform.espidf.espidf_target.esp32c3target method)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3Target.get_target_system"]], "has_fpu (mlonmcu.platform.espidf.espidf_target.esp32c3target property)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3Target.has_fpu"]], "idf_exe (mlonmcu.platform.espidf.espidfplatform property)": [[36, "mlonmcu.platform.espidf.EspIdfPlatform.idf_exe"]], "idf_exe (mlonmcu.platform.espidf.espidf.espidfplatform property)": [[36, "mlonmcu.platform.espidf.espidf.EspIdfPlatform.idf_exe"]], "init_directory() (mlonmcu.platform.espidf.espidfplatform method)": [[36, "mlonmcu.platform.espidf.EspIdfPlatform.init_directory"]], "init_directory() (mlonmcu.platform.espidf.espidf.espidfplatform method)": [[36, "mlonmcu.platform.espidf.espidf.EspIdfPlatform.init_directory"]], "invoke_idf_exe() (mlonmcu.platform.espidf.espidfplatform method)": [[36, "mlonmcu.platform.espidf.EspIdfPlatform.invoke_idf_exe"]], "invoke_idf_exe() (mlonmcu.platform.espidf.espidf.espidfplatform method)": [[36, "mlonmcu.platform.espidf.espidf.EspIdfPlatform.invoke_idf_exe"]], "mlonmcu.platform.espidf": [[36, "module-mlonmcu.platform.espidf"]], "mlonmcu.platform.espidf.espidf": [[36, "module-mlonmcu.platform.espidf.espidf"]], "mlonmcu.platform.espidf.espidf_target": [[36, "module-mlonmcu.platform.espidf.espidf_target"]], "monitor() (mlonmcu.platform.espidf.espidfplatform method)": [[36, "mlonmcu.platform.espidf.EspIdfPlatform.monitor"]], "monitor() (mlonmcu.platform.espidf.espidf.espidfplatform method)": [[36, "mlonmcu.platform.espidf.espidf.EspIdfPlatform.monitor"]], "port (mlonmcu.platform.espidf.espidfplatform property)": [[36, "mlonmcu.platform.espidf.EspIdfPlatform.port"]], "port (mlonmcu.platform.espidf.espidf.espidfplatform property)": [[36, "mlonmcu.platform.espidf.espidf.EspIdfPlatform.port"]], "prepare() (mlonmcu.platform.espidf.espidfplatform method)": [[36, "mlonmcu.platform.espidf.EspIdfPlatform.prepare"]], "prepare() (mlonmcu.platform.espidf.espidf.espidfplatform method)": [[36, "mlonmcu.platform.espidf.espidf.EspIdfPlatform.prepare"]], "project_template (mlonmcu.platform.espidf.espidfplatform property)": [[36, "mlonmcu.platform.espidf.EspIdfPlatform.project_template"]], "project_template (mlonmcu.platform.espidf.espidf.espidfplatform property)": [[36, "mlonmcu.platform.espidf.espidf.EspIdfPlatform.project_template"]], "register_espidf_platform_target() (in module mlonmcu.platform.espidf.espidf_target)": [[36, "mlonmcu.platform.espidf.espidf_target.register_espidf_platform_target"]], "use_idf_monitor (mlonmcu.platform.espidf.espidfplatform property)": [[36, "mlonmcu.platform.espidf.EspIdfPlatform.use_idf_monitor"]], "use_idf_monitor (mlonmcu.platform.espidf.espidf.espidfplatform property)": [[36, "mlonmcu.platform.espidf.espidf.EspIdfPlatform.use_idf_monitor"]], "wait_for_user (mlonmcu.platform.espidf.espidfplatform property)": [[36, "mlonmcu.platform.espidf.EspIdfPlatform.wait_for_user"]], "wait_for_user (mlonmcu.platform.espidf.espidf.espidfplatform property)": [[36, "mlonmcu.platform.espidf.espidf.EspIdfPlatform.wait_for_user"]], "xlen (mlonmcu.platform.espidf.espidf_target.esp32c3target property)": [[36, "mlonmcu.platform.espidf.espidf_target.Esp32C3Target.xlen"]], "arduinomicrotvmplatformtarget (class in mlonmcu.platform.microtvm.microtvm_arduino_target)": [[37, "mlonmcu.platform.microtvm.microtvm_arduino_target.ArduinoMicroTvmPlatformTarget"]], "corevovpsimmicrotvmplatformtarget (class in mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget"]], "defaults (mlonmcu.platform.microtvm.microtvmplatform attribute)": [[37, "mlonmcu.platform.microtvm.MicroTvmPlatform.DEFAULTS"]], "defaults (mlonmcu.platform.microtvm.microtvm.microtvmplatform attribute)": [[37, "mlonmcu.platform.microtvm.microtvm.MicroTvmPlatform.DEFAULTS"]], "defaults (mlonmcu.platform.microtvm.microtvm_arduino_target.arduinomicrotvmplatformtarget attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_arduino_target.ArduinoMicroTvmPlatformTarget.DEFAULTS"]], "defaults (mlonmcu.platform.microtvm.microtvm_base_platform.microtvmbaseplatform attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_base_platform.MicroTvmBasePlatform.DEFAULTS"]], "defaults (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.DEFAULTS"]], "defaults (mlonmcu.platform.microtvm.microtvm_espidf_target.espidfmicrotvmplatformtarget attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_espidf_target.EspidfMicroTvmPlatformTarget.DEFAULTS"]], "defaults (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.DEFAULTS"]], "defaults (mlonmcu.platform.microtvm.microtvm_host_target.hostmicrotvmplatformtarget attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_host_target.HostMicroTvmPlatformTarget.DEFAULTS"]], "defaults (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.DEFAULTS"]], "defaults (mlonmcu.platform.microtvm.microtvm_spike_target.spikemicrotvmplatformtarget attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_spike_target.SpikeMicroTvmPlatformTarget.DEFAULTS"]], "defaults (mlonmcu.platform.microtvm.microtvm_target_platform.microtvmtargetplatform attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_target_platform.MicroTvmTargetPlatform.DEFAULTS"]], "defaults (mlonmcu.platform.microtvm.microtvm_tune_platform.microtvmtuneplatform attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_tune_platform.MicroTvmTunePlatform.DEFAULTS"]], "defaults (mlonmcu.platform.microtvm.microtvm_zephyr_target.zephyrmicrotvmplatformtarget attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_zephyr_target.ZephyrMicroTvmPlatformTarget.DEFAULTS"]], "espidfmicrotvmplatformtarget (class in mlonmcu.platform.microtvm.microtvm_espidf_target)": [[37, "mlonmcu.platform.microtvm.microtvm_espidf_target.EspidfMicroTvmPlatformTarget"]], "etissmicrotvmplatformtarget (class in mlonmcu.platform.microtvm.microtvm_etiss_target)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget"]], "features (mlonmcu.platform.microtvm.microtvmplatform attribute)": [[37, "mlonmcu.platform.microtvm.MicroTvmPlatform.FEATURES"]], "features (mlonmcu.platform.microtvm.microtvm.microtvmplatform attribute)": [[37, "mlonmcu.platform.microtvm.microtvm.MicroTvmPlatform.FEATURES"]], "features (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.FEATURES"]], "features (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.FEATURES"]], "features (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.FEATURES"]], "features (mlonmcu.platform.microtvm.microtvm_spike_target.spikemicrotvmplatformtarget attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_spike_target.SpikeMicroTvmPlatformTarget.FEATURES"]], "features (mlonmcu.platform.microtvm.microtvm_target_platform.microtvmtargetplatform attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_target_platform.MicroTvmTargetPlatform.FEATURES"]], "features (mlonmcu.platform.microtvm.microtvm_tune_platform.microtvmtuneplatform attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_tune_platform.MicroTvmTunePlatform.FEATURES"]], "hostmicrotvmplatformtarget (class in mlonmcu.platform.microtvm.microtvm_host_target)": [[37, "mlonmcu.platform.microtvm.microtvm_host_target.HostMicroTvmPlatformTarget"]], "microtvmbaseplatform (class in mlonmcu.platform.microtvm.microtvm_base_platform)": [[37, "mlonmcu.platform.microtvm.microtvm_base_platform.MicroTvmBasePlatform"]], "microtvmbuildplatform (class in mlonmcu.platform.microtvm.microtvm_build_platform)": [[37, "mlonmcu.platform.microtvm.microtvm_build_platform.MicroTvmBuildPlatform"]], "microtvmcompileplatform (class in mlonmcu.platform.microtvm.microtvm_compile_platform)": [[37, "mlonmcu.platform.microtvm.microtvm_compile_platform.MicroTvmCompilePlatform"]], "microtvmplatform (class in mlonmcu.platform.microtvm)": [[37, "mlonmcu.platform.microtvm.MicroTvmPlatform"]], "microtvmplatform (class in mlonmcu.platform.microtvm.microtvm)": [[37, "mlonmcu.platform.microtvm.microtvm.MicroTvmPlatform"]], "microtvmtargetplatform (class in mlonmcu.platform.microtvm.microtvm_target_platform)": [[37, "mlonmcu.platform.microtvm.microtvm_target_platform.MicroTvmTargetPlatform"]], "microtvmtuneplatform (class in mlonmcu.platform.microtvm.microtvm_tune_platform)": [[37, "mlonmcu.platform.microtvm.microtvm_tune_platform.MicroTvmTunePlatform"]], "mlonmcumicrotvmplatformtarget (class in mlonmcu.platform.microtvm.microtvm_mlonmcu_target)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget"]], "required (mlonmcu.platform.microtvm.microtvmplatform attribute)": [[37, "mlonmcu.platform.microtvm.MicroTvmPlatform.REQUIRED"]], "required (mlonmcu.platform.microtvm.microtvm.microtvmplatform attribute)": [[37, "mlonmcu.platform.microtvm.microtvm.MicroTvmPlatform.REQUIRED"]], "required (mlonmcu.platform.microtvm.microtvm_arduino_target.arduinomicrotvmplatformtarget attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_arduino_target.ArduinoMicroTvmPlatformTarget.REQUIRED"]], "required (mlonmcu.platform.microtvm.microtvm_base_platform.microtvmbaseplatform attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_base_platform.MicroTvmBasePlatform.REQUIRED"]], "required (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.REQUIRED"]], "required (mlonmcu.platform.microtvm.microtvm_espidf_target.espidfmicrotvmplatformtarget attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_espidf_target.EspidfMicroTvmPlatformTarget.REQUIRED"]], "required (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.REQUIRED"]], "required (mlonmcu.platform.microtvm.microtvm_host_target.hostmicrotvmplatformtarget attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_host_target.HostMicroTvmPlatformTarget.REQUIRED"]], "required (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.REQUIRED"]], "required (mlonmcu.platform.microtvm.microtvm_spike_target.spikemicrotvmplatformtarget attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_spike_target.SpikeMicroTvmPlatformTarget.REQUIRED"]], "required (mlonmcu.platform.microtvm.microtvm_template_target.templatemicrotvmplatformtarget attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_template_target.TemplateMicroTvmPlatformTarget.REQUIRED"]], "required (mlonmcu.platform.microtvm.microtvm_tune_platform.microtvmtuneplatform attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_tune_platform.MicroTvmTunePlatform.REQUIRED"]], "required (mlonmcu.platform.microtvm.microtvm_zephyr_target.zephyrmicrotvmplatformtarget attribute)": [[37, "mlonmcu.platform.microtvm.microtvm_zephyr_target.ZephyrMicroTvmPlatformTarget.REQUIRED"]], "spikemicrotvmplatformtarget (class in mlonmcu.platform.microtvm.microtvm_spike_target)": [[37, "mlonmcu.platform.microtvm.microtvm_spike_target.SpikeMicroTvmPlatformTarget"]], "templatemicrotvmplatformtarget (class in mlonmcu.platform.microtvm.microtvm_template_target)": [[37, "mlonmcu.platform.microtvm.microtvm_template_target.TemplateMicroTvmPlatformTarget"]], "zephyrmicrotvmplatformtarget (class in mlonmcu.platform.microtvm.microtvm_zephyr_target)": [[37, "mlonmcu.platform.microtvm.microtvm_zephyr_target.ZephyrMicroTvmPlatformTarget"]], "abi (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.abi"]], "abi (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.abi"]], "abi (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.abi"]], "add_backend_config() (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget method)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.add_backend_config"]], "add_backend_config() (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget method)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.add_backend_config"]], "add_backend_config() (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget method)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.add_backend_config"]], "arduino_install_dir (mlonmcu.platform.microtvm.microtvm_arduino_target.arduinomicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_arduino_target.ArduinoMicroTvmPlatformTarget.arduino_install_dir"]], "attr (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.attr"]], "attr (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.attr"]], "attr (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.attr"]], "baud (mlonmcu.platform.microtvm.microtvm_espidf_target.espidfmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_espidf_target.EspidfMicroTvmPlatformTarget.baud"]], "board (mlonmcu.platform.microtvm.microtvm_espidf_target.espidfmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_espidf_target.EspidfMicroTvmPlatformTarget.board"]], "close() (mlonmcu.platform.microtvm.microtvm_base_platform.microtvmbaseplatform method)": [[37, "mlonmcu.platform.microtvm.microtvm_base_platform.MicroTvmBasePlatform.close"]], "collect_available_project_options() (mlonmcu.platform.microtvm.microtvm_base_platform.microtvmbaseplatform method)": [[37, "mlonmcu.platform.microtvm.microtvm_base_platform.MicroTvmBasePlatform.collect_available_project_options"]], "compile() (mlonmcu.platform.microtvm.microtvm_compile_platform.microtvmcompileplatform method)": [[37, "mlonmcu.platform.microtvm.microtvm_compile_platform.MicroTvmCompilePlatform.compile"]], "cpu_arch (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.cpu_arch"]], "cpu_arch (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.cpu_arch"]], "create_backend() (mlonmcu.platform.microtvm.microtvm_build_platform.microtvmbuildplatform method)": [[37, "mlonmcu.platform.microtvm.microtvm_build_platform.MicroTvmBuildPlatform.create_backend"]], "create_microtvm_platform_backend() (in module mlonmcu.platform.microtvm.microtvm_backend)": [[37, "mlonmcu.platform.microtvm.microtvm_backend.create_microtvm_platform_backend"]], "create_microtvm_platform_target() (in module mlonmcu.platform.microtvm.microtvm_target)": [[37, "mlonmcu.platform.microtvm.microtvm_target.create_microtvm_platform_target"]], "create_target() (mlonmcu.platform.microtvm.microtvmplatform method)": [[37, "mlonmcu.platform.microtvm.MicroTvmPlatform.create_target"]], "create_target() (mlonmcu.platform.microtvm.microtvm.microtvmplatform method)": [[37, "mlonmcu.platform.microtvm.microtvm.MicroTvmPlatform.create_target"]], "enable_xcorevalu (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.enable_xcorevalu"]], "enable_xcorevalu (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.enable_xcorevalu"]], "enable_xcorevalu (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.enable_xcorevalu"]], "enable_xcorevbi (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.enable_xcorevbi"]], "enable_xcorevbi (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.enable_xcorevbi"]], "enable_xcorevbi (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.enable_xcorevbi"]], "enable_xcorevbitmanip (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.enable_xcorevbitmanip"]], "enable_xcorevbitmanip (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.enable_xcorevbitmanip"]], "enable_xcorevbitmanip (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.enable_xcorevbitmanip"]], "enable_xcorevhwlp (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.enable_xcorevhwlp"]], "enable_xcorevhwlp (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.enable_xcorevhwlp"]], "enable_xcorevhwlp (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.enable_xcorevhwlp"]], "enable_xcorevmac (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.enable_xcorevmac"]], "enable_xcorevmac (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.enable_xcorevmac"]], "enable_xcorevmac (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.enable_xcorevmac"]], "enable_xcorevmem (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.enable_xcorevmem"]], "enable_xcorevmem (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.enable_xcorevmem"]], "enable_xcorevmem (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.enable_xcorevmem"]], "enable_xcorevsimd (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.enable_xcorevsimd"]], "enable_xcorevsimd (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.enable_xcorevsimd"]], "enable_xcorevsimd (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.enable_xcorevsimd"]], "esp_idf_install_dir (mlonmcu.platform.microtvm.microtvm_espidf_target.espidfmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_espidf_target.EspidfMicroTvmPlatformTarget.esp_idf_install_dir"]], "esp_idf_src_dir (mlonmcu.platform.microtvm.microtvm_espidf_target.espidfmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_espidf_target.EspidfMicroTvmPlatformTarget.esp_idf_src_dir"]], "etiss_extra_args (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.etiss_extra_args"]], "etiss_extra_args (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.etiss_extra_args"]], "etiss_extra_args (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.etiss_extra_args"]], "etiss_script (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.etiss_script"]], "etiss_script (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.etiss_script"]], "etiss_script (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.etiss_script"]], "experimental_tvmc_micro_tune (mlonmcu.platform.microtvm.microtvm_tune_platform.microtvmtuneplatform property)": [[37, "mlonmcu.platform.microtvm.microtvm_tune_platform.MicroTvmTunePlatform.experimental_tvmc_micro_tune"]], "experimental_tvmc_print_time (mlonmcu.platform.microtvm.microtvm_target_platform.microtvmtargetplatform property)": [[37, "mlonmcu.platform.microtvm.microtvm_target_platform.MicroTvmTargetPlatform.experimental_tvmc_print_time"]], "extensions (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.extensions"]], "extensions (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.extensions"]], "extensions (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.extensions"]], "extensions (mlonmcu.platform.microtvm.microtvm_spike_target.spikemicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_spike_target.SpikeMicroTvmPlatformTarget.extensions"]], "filter_project_options() (in module mlonmcu.platform.microtvm.microtvm_base_platform)": [[37, "mlonmcu.platform.microtvm.microtvm_base_platform.filter_project_options"]], "flash() (mlonmcu.platform.microtvm.microtvm_target_platform.microtvmtargetplatform method)": [[37, "mlonmcu.platform.microtvm.microtvm_target_platform.MicroTvmTargetPlatform.flash"]], "fpu (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.fpu"]], "fpu (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.fpu"]], "fpu (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.fpu"]], "gcc_arch (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.gcc_arch"]], "gcc_arch (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.gcc_arch"]], "gcc_arch (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.gcc_arch"]], "generate() (mlonmcu.platform.microtvm.microtvm_compile_platform.microtvmcompileplatform method)": [[37, "mlonmcu.platform.microtvm.microtvm_compile_platform.MicroTvmCompilePlatform.generate"]], "get_backend_config() (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget method)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.get_backend_config"]], "get_backend_config() (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget method)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.get_backend_config"]], "get_backend_config() (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget method)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.get_backend_config"]], "get_backend_config() (mlonmcu.platform.microtvm.microtvm_spike_target.spikemicrotvmplatformtarget method)": [[37, "mlonmcu.platform.microtvm.microtvm_spike_target.SpikeMicroTvmPlatformTarget.get_backend_config"]], "get_microtvm_platform_backends() (in module mlonmcu.platform.microtvm.microtvm_backend)": [[37, "mlonmcu.platform.microtvm.microtvm_backend.get_microtvm_platform_backends"]], "get_microtvm_platform_targets() (in module mlonmcu.platform.microtvm.microtvm_target)": [[37, "mlonmcu.platform.microtvm.microtvm_target.get_microtvm_platform_targets"]], "get_project_option_args() (in module mlonmcu.platform.microtvm.microtvm_base_platform)": [[37, "mlonmcu.platform.microtvm.microtvm_base_platform.get_project_option_args"]], "get_project_options() (mlonmcu.platform.microtvm.microtvm_arduino_target.arduinomicrotvmplatformtarget method)": [[37, "mlonmcu.platform.microtvm.microtvm_arduino_target.ArduinoMicroTvmPlatformTarget.get_project_options"]], "get_project_options() (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget method)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.get_project_options"]], "get_project_options() (mlonmcu.platform.microtvm.microtvm_espidf_target.espidfmicrotvmplatformtarget method)": [[37, "mlonmcu.platform.microtvm.microtvm_espidf_target.EspidfMicroTvmPlatformTarget.get_project_options"]], "get_project_options() (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget method)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.get_project_options"]], "get_project_options() (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget method)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.get_project_options"]], "get_project_options() (mlonmcu.platform.microtvm.microtvm_spike_target.spikemicrotvmplatformtarget method)": [[37, "mlonmcu.platform.microtvm.microtvm_spike_target.SpikeMicroTvmPlatformTarget.get_project_options"]], "get_project_options() (mlonmcu.platform.microtvm.microtvm_template_target.templatemicrotvmplatformtarget method)": [[37, "mlonmcu.platform.microtvm.microtvm_template_target.TemplateMicroTvmPlatformTarget.get_project_options"]], "get_project_options() (mlonmcu.platform.microtvm.microtvm_zephyr_target.zephyrmicrotvmplatformtarget method)": [[37, "mlonmcu.platform.microtvm.microtvm_zephyr_target.ZephyrMicroTvmPlatformTarget.get_project_options"]], "get_supported_backends() (mlonmcu.platform.microtvm.microtvm_build_platform.microtvmbuildplatform method)": [[37, "mlonmcu.platform.microtvm.microtvm_build_platform.MicroTvmBuildPlatform.get_supported_backends"]], "get_supported_targets() (mlonmcu.platform.microtvm.microtvmplatform method)": [[37, "mlonmcu.platform.microtvm.MicroTvmPlatform.get_supported_targets"]], "get_supported_targets() (mlonmcu.platform.microtvm.microtvm.microtvmplatform method)": [[37, "mlonmcu.platform.microtvm.microtvm.MicroTvmPlatform.get_supported_targets"]], "get_template_args() (mlonmcu.platform.microtvm.microtvm_base_platform.microtvmbaseplatform method)": [[37, "mlonmcu.platform.microtvm.microtvm_base_platform.MicroTvmBasePlatform.get_template_args"]], "get_tvmc_run_args() (mlonmcu.platform.microtvm.microtvm_target_platform.microtvmtargetplatform method)": [[37, "mlonmcu.platform.microtvm.microtvm_target_platform.MicroTvmTargetPlatform.get_tvmc_run_args"]], "init_directory() (mlonmcu.platform.microtvm.microtvm_base_platform.microtvmbaseplatform method)": [[37, "mlonmcu.platform.microtvm.microtvm_base_platform.MicroTvmBasePlatform.init_directory"]], "invoke_tvmc() (mlonmcu.platform.microtvm.microtvm_base_platform.microtvmbaseplatform method)": [[37, "mlonmcu.platform.microtvm.microtvm_base_platform.MicroTvmBasePlatform.invoke_tvmc"]], "invoke_tvmc_micro() (mlonmcu.platform.microtvm.microtvm_base_platform.microtvmbaseplatform method)": [[37, "mlonmcu.platform.microtvm.microtvm_base_platform.MicroTvmBasePlatform.invoke_tvmc_micro"]], "invoke_tvmc_micro_build() (mlonmcu.platform.microtvm.microtvm_compile_platform.microtvmcompileplatform method)": [[37, "mlonmcu.platform.microtvm.microtvm_compile_platform.MicroTvmCompilePlatform.invoke_tvmc_micro_build"]], "invoke_tvmc_micro_create() (mlonmcu.platform.microtvm.microtvm_compile_platform.microtvmcompileplatform method)": [[37, "mlonmcu.platform.microtvm.microtvm_compile_platform.MicroTvmCompilePlatform.invoke_tvmc_micro_create"]], "invoke_tvmc_micro_flash() (mlonmcu.platform.microtvm.microtvm_target_platform.microtvmtargetplatform method)": [[37, "mlonmcu.platform.microtvm.microtvm_target_platform.MicroTvmTargetPlatform.invoke_tvmc_micro_flash"]], "invoke_tvmc_micro_run() (mlonmcu.platform.microtvm.microtvm_target_platform.microtvmtargetplatform method)": [[37, "mlonmcu.platform.microtvm.microtvm_target_platform.MicroTvmTargetPlatform.invoke_tvmc_micro_run"]], "invoke_tvmc_micro_tune() (mlonmcu.platform.microtvm.microtvm_tune_platform.microtvmtuneplatform method)": [[37, "mlonmcu.platform.microtvm.microtvm_tune_platform.MicroTvmTunePlatform.invoke_tvmc_micro_tune"]], "invoke_tvmc_run() (mlonmcu.platform.microtvm.microtvm_target_platform.microtvmtargetplatform method)": [[37, "mlonmcu.platform.microtvm.microtvm_target_platform.MicroTvmTargetPlatform.invoke_tvmc_run"]], "invoke_tvmc_tune() (mlonmcu.platform.microtvm.microtvm_tune_platform.microtvmtuneplatform method)": [[37, "mlonmcu.platform.microtvm.microtvm_tune_platform.MicroTvmTunePlatform.invoke_tvmc_tune"]], "llvm_arch (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.llvm_arch"]], "llvm_arch (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.llvm_arch"]], "llvm_arch (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.llvm_arch"]], "llvm_prefix (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.llvm_prefix"]], "llvm_prefix (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.llvm_prefix"]], "llvm_prefix (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.llvm_prefix"]], "llvm_prefix (mlonmcu.platform.microtvm.microtvm_spike_target.spikemicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_spike_target.SpikeMicroTvmPlatformTarget.llvm_prefix"]], "microtvm_espidf_template (mlonmcu.platform.microtvm.microtvm_espidf_target.espidfmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_espidf_target.EspidfMicroTvmPlatformTarget.microtvm_espidf_template"]], "microtvm_etiss_src_dir (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.microtvm_etiss_src_dir"]], "microtvm_etiss_src_dir (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.microtvm_etiss_src_dir"]], "microtvm_ovpsim_src_dir (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.microtvm_ovpsim_src_dir"]], "microtvm_spike_src_dir (mlonmcu.platform.microtvm.microtvm_spike_target.spikemicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_spike_target.SpikeMicroTvmPlatformTarget.microtvm_spike_src_dir"]], "mlonmcu.platform.microtvm": [[37, "module-mlonmcu.platform.microtvm"]], "mlonmcu.platform.microtvm.microtvm": [[37, "module-mlonmcu.platform.microtvm.microtvm"]], "mlonmcu.platform.microtvm.microtvm_arduino_target": [[37, "module-mlonmcu.platform.microtvm.microtvm_arduino_target"]], "mlonmcu.platform.microtvm.microtvm_backend": [[37, "module-mlonmcu.platform.microtvm.microtvm_backend"]], "mlonmcu.platform.microtvm.microtvm_base_platform": [[37, "module-mlonmcu.platform.microtvm.microtvm_base_platform"]], "mlonmcu.platform.microtvm.microtvm_build_platform": [[37, "module-mlonmcu.platform.microtvm.microtvm_build_platform"]], "mlonmcu.platform.microtvm.microtvm_compile_platform": [[37, "module-mlonmcu.platform.microtvm.microtvm_compile_platform"]], "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target": [[37, "module-mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target"]], "mlonmcu.platform.microtvm.microtvm_espidf_target": [[37, "module-mlonmcu.platform.microtvm.microtvm_espidf_target"]], "mlonmcu.platform.microtvm.microtvm_etiss_target": [[37, "module-mlonmcu.platform.microtvm.microtvm_etiss_target"]], "mlonmcu.platform.microtvm.microtvm_host_target": [[37, "module-mlonmcu.platform.microtvm.microtvm_host_target"]], "mlonmcu.platform.microtvm.microtvm_mlonmcu_target": [[37, "module-mlonmcu.platform.microtvm.microtvm_mlonmcu_target"]], "mlonmcu.platform.microtvm.microtvm_spike_target": [[37, "module-mlonmcu.platform.microtvm.microtvm_spike_target"]], "mlonmcu.platform.microtvm.microtvm_target": [[37, "module-mlonmcu.platform.microtvm.microtvm_target"]], "mlonmcu.platform.microtvm.microtvm_target_platform": [[37, "module-mlonmcu.platform.microtvm.microtvm_target_platform"]], "mlonmcu.platform.microtvm.microtvm_template_target": [[37, "module-mlonmcu.platform.microtvm.microtvm_template_target"]], "mlonmcu.platform.microtvm.microtvm_tune_platform": [[37, "module-mlonmcu.platform.microtvm.microtvm_tune_platform"]], "mlonmcu.platform.microtvm.microtvm_zephyr_target": [[37, "module-mlonmcu.platform.microtvm.microtvm_zephyr_target"]], "monitor() (mlonmcu.platform.microtvm.microtvm_target_platform.microtvmtargetplatform method)": [[37, "mlonmcu.platform.microtvm.microtvm_target_platform.MicroTvmTargetPlatform.monitor"]], "name2template() (in module mlonmcu.platform.microtvm.microtvm_target)": [[37, "mlonmcu.platform.microtvm.microtvm_target.name2template"]], "parse_project_options_from_stdout() (in module mlonmcu.platform.microtvm.microtvm_base_platform)": [[37, "mlonmcu.platform.microtvm.microtvm_base_platform.parse_project_options_from_stdout"]], "port (mlonmcu.platform.microtvm.microtvm_arduino_target.arduinomicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_arduino_target.ArduinoMicroTvmPlatformTarget.port"]], "port (mlonmcu.platform.microtvm.microtvm_espidf_target.espidfmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_espidf_target.EspidfMicroTvmPlatformTarget.port"]], "port (mlonmcu.platform.microtvm.microtvm_zephyr_target.zephyrmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_zephyr_target.ZephyrMicroTvmPlatformTarget.port"]], "prepare() (mlonmcu.platform.microtvm.microtvm_compile_platform.microtvmcompileplatform method)": [[37, "mlonmcu.platform.microtvm.microtvm_compile_platform.MicroTvmCompilePlatform.prepare"]], "project_options (mlonmcu.platform.microtvm.microtvm_base_platform.microtvmbaseplatform property)": [[37, "mlonmcu.platform.microtvm.microtvm_base_platform.MicroTvmBasePlatform.project_options"]], "project_template (mlonmcu.platform.microtvm.microtvm_base_platform.microtvmbaseplatform property)": [[37, "mlonmcu.platform.microtvm.microtvm_base_platform.MicroTvmBasePlatform.project_template"]], "register_microtvm_platform_backend() (in module mlonmcu.platform.microtvm.microtvm_backend)": [[37, "mlonmcu.platform.microtvm.microtvm_backend.register_microtvm_platform_backend"]], "register_microtvm_platform_target() (in module mlonmcu.platform.microtvm.microtvm_target)": [[37, "mlonmcu.platform.microtvm.microtvm_target.register_microtvm_platform_target"]], "riscv_gcc_install_dir (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.riscv_gcc_install_dir"]], "riscv_gcc_install_dir (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.riscv_gcc_install_dir"]], "riscv_gcc_install_dir (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.riscv_gcc_install_dir"]], "riscv_gcc_name (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.riscv_gcc_name"]], "riscv_gcc_name (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.riscv_gcc_name"]], "riscv_gcc_name (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.riscv_gcc_name"]], "run() (mlonmcu.platform.microtvm.microtvm_target_platform.microtvmtargetplatform method)": [[37, "mlonmcu.platform.microtvm.microtvm_target_platform.MicroTvmTargetPlatform.run"]], "skip_flash (mlonmcu.platform.microtvm.microtvm_target_platform.microtvmtargetplatform property)": [[37, "mlonmcu.platform.microtvm.microtvm_target_platform.MicroTvmTargetPlatform.skip_flash"]], "spike_exe (mlonmcu.platform.microtvm.microtvm_spike_target.spikemicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_spike_target.SpikeMicroTvmPlatformTarget.spike_exe"]], "spike_pk (mlonmcu.platform.microtvm.microtvm_spike_target.spikemicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_spike_target.SpikeMicroTvmPlatformTarget.spike_pk"]], "toolchain (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.toolchain"]], "toolchain (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.toolchain"]], "toolchain (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.toolchain"]], "toolchain (mlonmcu.platform.microtvm.microtvm_spike_target.spikemicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_spike_target.SpikeMicroTvmPlatformTarget.toolchain"]], "tvm_build_dir (mlonmcu.platform.microtvm.microtvm_base_platform.microtvmbaseplatform property)": [[37, "mlonmcu.platform.microtvm.microtvm_base_platform.MicroTvmBasePlatform.tvm_build_dir"]], "tvm_build_dir (mlonmcu.platform.microtvm.microtvm_host_target.hostmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_host_target.HostMicroTvmPlatformTarget.tvm_build_dir"]], "tvm_configs_dir (mlonmcu.platform.microtvm.microtvm_base_platform.microtvmbaseplatform property)": [[37, "mlonmcu.platform.microtvm.microtvm_base_platform.MicroTvmBasePlatform.tvm_configs_dir"]], "tvm_pythonpath (mlonmcu.platform.microtvm.microtvm_base_platform.microtvmbaseplatform property)": [[37, "mlonmcu.platform.microtvm.microtvm_base_platform.MicroTvmBasePlatform.tvm_pythonpath"]], "tvmc_custom_script (mlonmcu.platform.microtvm.microtvm_base_platform.microtvmbaseplatform property)": [[37, "mlonmcu.platform.microtvm.microtvm_base_platform.MicroTvmBasePlatform.tvmc_custom_script"]], "update_environment() (mlonmcu.platform.microtvm.microtvm_arduino_target.arduinomicrotvmplatformtarget method)": [[37, "mlonmcu.platform.microtvm.microtvm_arduino_target.ArduinoMicroTvmPlatformTarget.update_environment"]], "update_environment() (mlonmcu.platform.microtvm.microtvm_template_target.templatemicrotvmplatformtarget method)": [[37, "mlonmcu.platform.microtvm.microtvm_template_target.TemplateMicroTvmPlatformTarget.update_environment"]], "update_environment() (mlonmcu.platform.microtvm.microtvm_zephyr_target.zephyrmicrotvmplatformtarget method)": [[37, "mlonmcu.platform.microtvm.microtvm_zephyr_target.ZephyrMicroTvmPlatformTarget.update_environment"]], "xlen (mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.corevovpsimmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_corev_ovpsim_target.CoreVOVPSimMicroTvmPlatformTarget.xlen"]], "xlen (mlonmcu.platform.microtvm.microtvm_etiss_target.etissmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_etiss_target.EtissMicroTvmPlatformTarget.xlen"]], "xlen (mlonmcu.platform.microtvm.microtvm_mlonmcu_target.mlonmcumicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_mlonmcu_target.MlonmcuMicroTvmPlatformTarget.xlen"]], "zephyr_install_dir (mlonmcu.platform.microtvm.microtvm_zephyr_target.zephyrmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_zephyr_target.ZephyrMicroTvmPlatformTarget.zephyr_install_dir"]], "zephyr_sdk_dir (mlonmcu.platform.microtvm.microtvm_zephyr_target.zephyrmicrotvmplatformtarget property)": [[37, "mlonmcu.platform.microtvm.microtvm_zephyr_target.ZephyrMicroTvmPlatformTarget.zephyr_sdk_dir"]], "defaults (mlonmcu.platform.mlif.mlifplatform attribute)": [[38, "mlonmcu.platform.mlif.MlifPlatform.DEFAULTS"]], "defaults (mlonmcu.platform.mlif.mlif.mlifplatform attribute)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.DEFAULTS"]], "error (mlonmcu.platform.mlif.mlif_target.mlifexitcode attribute)": [[38, "mlonmcu.platform.mlif.mlif_target.MlifExitCode.ERROR"]], "features (mlonmcu.platform.mlif.mlifplatform attribute)": [[38, "mlonmcu.platform.mlif.MlifPlatform.FEATURES"]], "features (mlonmcu.platform.mlif.mlif.mlifplatform attribute)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.FEATURES"]], "invalid_size (mlonmcu.platform.mlif.mlif_target.mlifexitcode attribute)": [[38, "mlonmcu.platform.mlif.mlif_target.MlifExitCode.INVALID_SIZE"]], "mlifexitcode (class in mlonmcu.platform.mlif.mlif_target)": [[38, "mlonmcu.platform.mlif.mlif_target.MlifExitCode"]], "mlifplatform (class in mlonmcu.platform.mlif)": [[38, "mlonmcu.platform.mlif.MlifPlatform"]], "mlifplatform (class in mlonmcu.platform.mlif.mlif)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform"]], "optional (mlonmcu.platform.mlif.mlifplatform attribute)": [[38, "mlonmcu.platform.mlif.MlifPlatform.OPTIONAL"]], "optional (mlonmcu.platform.mlif.mlif.mlifplatform attribute)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.OPTIONAL"]], "output_missmatch (mlonmcu.platform.mlif.mlif_target.mlifexitcode attribute)": [[38, "mlonmcu.platform.mlif.mlif_target.MlifExitCode.OUTPUT_MISSMATCH"]], "required (mlonmcu.platform.mlif.mlifplatform attribute)": [[38, "mlonmcu.platform.mlif.MlifPlatform.REQUIRED"]], "required (mlonmcu.platform.mlif.mlif.mlifplatform attribute)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.REQUIRED"]], "close() (mlonmcu.platform.mlif.mlifplatform method)": [[38, "mlonmcu.platform.mlif.MlifPlatform.close"]], "close() (mlonmcu.platform.mlif.mlif.mlifplatform method)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.close"]], "compile() (mlonmcu.platform.mlif.mlifplatform method)": [[38, "mlonmcu.platform.mlif.MlifPlatform.compile"]], "compile() (mlonmcu.platform.mlif.mlif.mlifplatform method)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.compile"]], "configure() (mlonmcu.platform.mlif.mlifplatform method)": [[38, "mlonmcu.platform.mlif.MlifPlatform.configure"]], "configure() (mlonmcu.platform.mlif.mlif.mlifplatform method)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.configure"]], "create_mlif_platform_target() (in module mlonmcu.platform.mlif.mlif_target)": [[38, "mlonmcu.platform.mlif.mlif_target.create_mlif_platform_target"]], "create_target() (mlonmcu.platform.mlif.mlifplatform method)": [[38, "mlonmcu.platform.mlif.MlifPlatform.create_target"]], "create_target() (mlonmcu.platform.mlif.mlif.mlifplatform method)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.create_target"]], "debug_symbols (mlonmcu.platform.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.MlifPlatform.debug_symbols"]], "debug_symbols (mlonmcu.platform.mlif.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.debug_symbols"]], "fail_on_error (mlonmcu.platform.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.MlifPlatform.fail_on_error"]], "fail_on_error (mlonmcu.platform.mlif.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.fail_on_error"]], "fuse_ld (mlonmcu.platform.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.MlifPlatform.fuse_ld"]], "fuse_ld (mlonmcu.platform.mlif.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.fuse_ld"]], "garbage_collect (mlonmcu.platform.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.MlifPlatform.garbage_collect"]], "garbage_collect (mlonmcu.platform.mlif.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.garbage_collect"]], "gen_data_artifact() (mlonmcu.platform.mlif.mlifplatform method)": [[38, "mlonmcu.platform.mlif.MlifPlatform.gen_data_artifact"]], "gen_data_artifact() (mlonmcu.platform.mlif.mlif.mlifplatform method)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.gen_data_artifact"]], "generate() (mlonmcu.platform.mlif.mlifplatform method)": [[38, "mlonmcu.platform.mlif.MlifPlatform.generate"]], "generate() (mlonmcu.platform.mlif.mlif.mlifplatform method)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.generate"]], "get_cmake_args() (mlonmcu.platform.mlif.mlifplatform method)": [[38, "mlonmcu.platform.mlif.MlifPlatform.get_cmake_args"]], "get_cmake_args() (mlonmcu.platform.mlif.mlif.mlifplatform method)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.get_cmake_args"]], "get_definitions() (mlonmcu.platform.mlif.mlifplatform method)": [[38, "mlonmcu.platform.mlif.MlifPlatform.get_definitions"]], "get_definitions() (mlonmcu.platform.mlif.mlif.mlifplatform method)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.get_definitions"]], "get_mlif_platform_targets() (in module mlonmcu.platform.mlif.mlif_target)": [[38, "mlonmcu.platform.mlif.mlif_target.get_mlif_platform_targets"]], "get_supported_targets() (mlonmcu.platform.mlif.mlifplatform method)": [[38, "mlonmcu.platform.mlif.MlifPlatform.get_supported_targets"]], "get_supported_targets() (mlonmcu.platform.mlif.mlif.mlifplatform method)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.get_supported_targets"]], "goal (mlonmcu.platform.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.MlifPlatform.goal"]], "goal (mlonmcu.platform.mlif.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.goal"]], "ignore_data (mlonmcu.platform.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.MlifPlatform.ignore_data"]], "ignore_data (mlonmcu.platform.mlif.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.ignore_data"]], "init_directory() (mlonmcu.platform.mlif.mlifplatform method)": [[38, "mlonmcu.platform.mlif.MlifPlatform.init_directory"]], "init_directory() (mlonmcu.platform.mlif.mlif.mlifplatform method)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.init_directory"]], "input_data_path (mlonmcu.platform.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.MlifPlatform.input_data_path"]], "input_data_path (mlonmcu.platform.mlif.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.input_data_path"]], "llvm_dir (mlonmcu.platform.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.MlifPlatform.llvm_dir"]], "llvm_dir (mlonmcu.platform.mlif.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.llvm_dir"]], "lto (mlonmcu.platform.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.MlifPlatform.lto"]], "lto (mlonmcu.platform.mlif.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.lto"]], "mem_only (mlonmcu.platform.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.MlifPlatform.mem_only"]], "mem_only (mlonmcu.platform.mlif.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.mem_only"]], "mlif_dir (mlonmcu.platform.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.MlifPlatform.mlif_dir"]], "mlif_dir (mlonmcu.platform.mlif.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.mlif_dir"]], "mlonmcu.platform.mlif": [[38, "module-mlonmcu.platform.mlif"]], "mlonmcu.platform.mlif.mlif": [[38, "module-mlonmcu.platform.mlif.mlif"]], "mlonmcu.platform.mlif.mlif_target": [[38, "module-mlonmcu.platform.mlif.mlif_target"]], "model_support_dir (mlonmcu.platform.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.MlifPlatform.model_support_dir"]], "model_support_dir (mlonmcu.platform.mlif.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.model_support_dir"]], "optimize (mlonmcu.platform.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.MlifPlatform.optimize"]], "optimize (mlonmcu.platform.mlif.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.optimize"]], "output_data_path (mlonmcu.platform.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.MlifPlatform.output_data_path"]], "output_data_path (mlonmcu.platform.mlif.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.output_data_path"]], "prebuild_lib_dir (mlonmcu.platform.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.MlifPlatform.prebuild_lib_dir"]], "prebuild_lib_dir (mlonmcu.platform.mlif.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.prebuild_lib_dir"]], "prepare() (mlonmcu.platform.mlif.mlifplatform method)": [[38, "mlonmcu.platform.mlif.MlifPlatform.prepare"]], "prepare() (mlonmcu.platform.mlif.mlif.mlifplatform method)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.prepare"]], "skip_check (mlonmcu.platform.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.MlifPlatform.skip_check"]], "skip_check (mlonmcu.platform.mlif.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.skip_check"]], "slim_cpp (mlonmcu.platform.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.MlifPlatform.slim_cpp"]], "slim_cpp (mlonmcu.platform.mlif.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.slim_cpp"]], "strip_strings (mlonmcu.platform.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.MlifPlatform.strip_strings"]], "strip_strings (mlonmcu.platform.mlif.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.strip_strings"]], "template (mlonmcu.platform.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.MlifPlatform.template"]], "template (mlonmcu.platform.mlif.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.template"]], "toolchain (mlonmcu.platform.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.MlifPlatform.toolchain"]], "toolchain (mlonmcu.platform.mlif.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.toolchain"]], "validate_outputs (mlonmcu.platform.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.MlifPlatform.validate_outputs"]], "validate_outputs (mlonmcu.platform.mlif.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.validate_outputs"]], "values() (mlonmcu.platform.mlif.mlif_target.mlifexitcode class method)": [[38, "mlonmcu.platform.mlif.mlif_target.MlifExitCode.values"]], "verbose_makefile (mlonmcu.platform.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.MlifPlatform.verbose_makefile"]], "verbose_makefile (mlonmcu.platform.mlif.mlif.mlifplatform property)": [[38, "mlonmcu.platform.mlif.mlif.MlifPlatform.verbose_makefile"]], "defaults (mlonmcu.platform.tvm.tvmplatform attribute)": [[39, "mlonmcu.platform.tvm.TvmPlatform.DEFAULTS"]], "defaults (mlonmcu.platform.tvm.tvm.tvmplatform attribute)": [[39, "mlonmcu.platform.tvm.tvm.TvmPlatform.DEFAULTS"]], "defaults (mlonmcu.platform.tvm.tvm_base_platform.tvmbaseplatform attribute)": [[39, "mlonmcu.platform.tvm.tvm_base_platform.TvmBasePlatform.DEFAULTS"]], "defaults (mlonmcu.platform.tvm.tvm_rpc_platform.tvmrpcplatform attribute)": [[39, "mlonmcu.platform.tvm.tvm_rpc_platform.TvmRpcPlatform.DEFAULTS"]], "defaults (mlonmcu.platform.tvm.tvm_target_platform.tvmtargetplatform attribute)": [[39, "mlonmcu.platform.tvm.tvm_target_platform.TvmTargetPlatform.DEFAULTS"]], "defaults (mlonmcu.platform.tvm.tvm_tune_platform.tvmtuneplatform attribute)": [[39, "mlonmcu.platform.tvm.tvm_tune_platform.TvmTunePlatform.DEFAULTS"]], "features (mlonmcu.platform.tvm.tvmplatform attribute)": [[39, "mlonmcu.platform.tvm.TvmPlatform.FEATURES"]], "features (mlonmcu.platform.tvm.tvm.tvmplatform attribute)": [[39, "mlonmcu.platform.tvm.tvm.TvmPlatform.FEATURES"]], "features (mlonmcu.platform.tvm.tvm_base_platform.tvmbaseplatform attribute)": [[39, "mlonmcu.platform.tvm.tvm_base_platform.TvmBasePlatform.FEATURES"]], "features (mlonmcu.platform.tvm.tvm_rpc_platform.tvmrpcplatform attribute)": [[39, "mlonmcu.platform.tvm.tvm_rpc_platform.TvmRpcPlatform.FEATURES"]], "features (mlonmcu.platform.tvm.tvm_target_platform.tvmtargetplatform attribute)": [[39, "mlonmcu.platform.tvm.tvm_target_platform.TvmTargetPlatform.FEATURES"]], "features (mlonmcu.platform.tvm.tvm_tune_platform.tvmtuneplatform attribute)": [[39, "mlonmcu.platform.tvm.tvm_tune_platform.TvmTunePlatform.FEATURES"]], "required (mlonmcu.platform.tvm.tvmplatform attribute)": [[39, "mlonmcu.platform.tvm.TvmPlatform.REQUIRED"]], "required (mlonmcu.platform.tvm.tvm.tvmplatform attribute)": [[39, "mlonmcu.platform.tvm.tvm.TvmPlatform.REQUIRED"]], "required (mlonmcu.platform.tvm.tvm_base_platform.tvmbaseplatform attribute)": [[39, "mlonmcu.platform.tvm.tvm_base_platform.TvmBasePlatform.REQUIRED"]], "required (mlonmcu.platform.tvm.tvm_target_platform.tvmtargetplatform attribute)": [[39, "mlonmcu.platform.tvm.tvm_target_platform.TvmTargetPlatform.REQUIRED"]], "required (mlonmcu.platform.tvm.tvm_tune_platform.tvmtuneplatform attribute)": [[39, "mlonmcu.platform.tvm.tvm_tune_platform.TvmTunePlatform.REQUIRED"]], "tvmbaseplatform (class in mlonmcu.platform.tvm.tvm_base_platform)": [[39, "mlonmcu.platform.tvm.tvm_base_platform.TvmBasePlatform"]], "tvmbuildplatform (class in mlonmcu.platform.tvm.tvm_build_platform)": [[39, "mlonmcu.platform.tvm.tvm_build_platform.TvmBuildPlatform"]], "tvmplatform (class in mlonmcu.platform.tvm)": [[39, "mlonmcu.platform.tvm.TvmPlatform"]], "tvmplatform (class in mlonmcu.platform.tvm.tvm)": [[39, "mlonmcu.platform.tvm.tvm.TvmPlatform"]], "tvmrpcplatform (class in mlonmcu.platform.tvm.tvm_rpc_platform)": [[39, "mlonmcu.platform.tvm.tvm_rpc_platform.TvmRpcPlatform"]], "tvmtargetplatform (class in mlonmcu.platform.tvm.tvm_target_platform)": [[39, "mlonmcu.platform.tvm.tvm_target_platform.TvmTargetPlatform"]], "tvmtuneplatform (class in mlonmcu.platform.tvm.tvm_tune_platform)": [[39, "mlonmcu.platform.tvm.tvm_tune_platform.TvmTunePlatform"]], "aggregate (mlonmcu.platform.tvm.tvm_target_platform.tvmtargetplatform property)": [[39, "mlonmcu.platform.tvm.tvm_target_platform.TvmTargetPlatform.aggregate"]], "close() (mlonmcu.platform.tvm.tvm_base_platform.tvmbaseplatform method)": [[39, "mlonmcu.platform.tvm.tvm_base_platform.TvmBasePlatform.close"]], "create_backend() (mlonmcu.platform.tvm.tvm_build_platform.tvmbuildplatform method)": [[39, "mlonmcu.platform.tvm.tvm_build_platform.TvmBuildPlatform.create_backend"]], "create_target() (mlonmcu.platform.tvm.tvm_target_platform.tvmtargetplatform method)": [[39, "mlonmcu.platform.tvm.tvm_target_platform.TvmTargetPlatform.create_target"]], "create_tvm_platform_backend() (in module mlonmcu.platform.tvm.tvm_backend)": [[39, "mlonmcu.platform.tvm.tvm_backend.create_tvm_platform_backend"]], "create_tvm_platform_target() (in module mlonmcu.platform.tvm.tvm_target)": [[39, "mlonmcu.platform.tvm.tvm_target.create_tvm_platform_target"]], "enable_wandb (mlonmcu.platform.tvm.tvm_tune_platform.tvmtuneplatform property)": [[39, "mlonmcu.platform.tvm.tvm_tune_platform.TvmTunePlatform.enable_wandb"]], "experimental_tvmc_tune_tasks (mlonmcu.platform.tvm.tvm_tune_platform.tvmtuneplatform property)": [[39, "mlonmcu.platform.tvm.tvm_tune_platform.TvmTunePlatform.experimental_tvmc_tune_tasks"]], "experimental_tvmc_tune_visualize (mlonmcu.platform.tvm.tvm_tune_platform.tvmtuneplatform property)": [[39, "mlonmcu.platform.tvm.tvm_tune_platform.TvmTunePlatform.experimental_tvmc_tune_visualize"]], "fill_mode (mlonmcu.platform.tvm.tvm_target_platform.tvmtargetplatform property)": [[39, "mlonmcu.platform.tvm.tvm_target_platform.TvmTargetPlatform.fill_mode"]], "flash() (mlonmcu.platform.tvm.tvm_target_platform.tvmtargetplatform method)": [[39, "mlonmcu.platform.tvm.tvm_target_platform.TvmTargetPlatform.flash"]], "get_autoscheduler_tune_args() (mlonmcu.platform.tvm.tvm_tune_platform.tvmtuneplatform method)": [[39, "mlonmcu.platform.tvm.tvm_tune_platform.TvmTunePlatform.get_autoscheduler_tune_args"]], "get_autotvm_tune_args() (mlonmcu.platform.tvm.tvm_tune_platform.tvmtuneplatform method)": [[39, "mlonmcu.platform.tvm.tvm_tune_platform.TvmTunePlatform.get_autotvm_tune_args"]], "get_metascheduler_tune_args() (mlonmcu.platform.tvm.tvm_tune_platform.tvmtuneplatform method)": [[39, "mlonmcu.platform.tvm.tvm_tune_platform.TvmTunePlatform.get_metascheduler_tune_args"]], "get_supported_backends() (mlonmcu.platform.tvm.tvm_build_platform.tvmbuildplatform method)": [[39, "mlonmcu.platform.tvm.tvm_build_platform.TvmBuildPlatform.get_supported_backends"]], "get_supported_targets() (mlonmcu.platform.tvm.tvm_target_platform.tvmtargetplatform method)": [[39, "mlonmcu.platform.tvm.tvm_target_platform.TvmTargetPlatform.get_supported_targets"]], "get_tune_args() (mlonmcu.platform.tvm.tvm_tune_platform.tvmtuneplatform method)": [[39, "mlonmcu.platform.tvm.tvm_tune_platform.TvmTunePlatform.get_tune_args"]], "get_tvm_platform_backends() (in module mlonmcu.platform.tvm.tvm_backend)": [[39, "mlonmcu.platform.tvm.tvm_backend.get_tvm_platform_backends"]], "get_tvmc_run_args() (mlonmcu.platform.tvm.tvm_target_platform.tvmtargetplatform method)": [[39, "mlonmcu.platform.tvm.tvm_target_platform.TvmTargetPlatform.get_tvmc_run_args"]], "init_directory() (mlonmcu.platform.tvm.tvm_base_platform.tvmbaseplatform method)": [[39, "mlonmcu.platform.tvm.tvm_base_platform.TvmBasePlatform.init_directory"]], "ins_file (mlonmcu.platform.tvm.tvm_target_platform.tvmtargetplatform property)": [[39, "mlonmcu.platform.tvm.tvm_target_platform.TvmTargetPlatform.ins_file"]], "invoke_tvmc() (mlonmcu.platform.tvm.tvm_base_platform.tvmbaseplatform method)": [[39, "mlonmcu.platform.tvm.tvm_base_platform.TvmBasePlatform.invoke_tvmc"]], "invoke_tvmc_run() (mlonmcu.platform.tvm.tvm_target_platform.tvmtargetplatform method)": [[39, "mlonmcu.platform.tvm.tvm_target_platform.TvmTargetPlatform.invoke_tvmc_run"]], "invoke_tvmc_tune() (mlonmcu.platform.tvm.tvm_tune_platform.tvmtuneplatform method)": [[39, "mlonmcu.platform.tvm.tvm_tune_platform.TvmTunePlatform.invoke_tvmc_tune"]], "min_repeat_ms (mlonmcu.platform.tvm.tvm_tune_platform.tvmtuneplatform property)": [[39, "mlonmcu.platform.tvm.tvm_tune_platform.TvmTunePlatform.min_repeat_ms"]], "mlonmcu.platform.tvm": [[39, "module-mlonmcu.platform.tvm"]], "mlonmcu.platform.tvm.tvm": [[39, "module-mlonmcu.platform.tvm.tvm"]], "mlonmcu.platform.tvm.tvm_backend": [[39, "module-mlonmcu.platform.tvm.tvm_backend"]], "mlonmcu.platform.tvm.tvm_base_platform": [[39, "module-mlonmcu.platform.tvm.tvm_base_platform"]], "mlonmcu.platform.tvm.tvm_build_platform": [[39, "module-mlonmcu.platform.tvm.tvm_build_platform"]], "mlonmcu.platform.tvm.tvm_rpc_platform": [[39, "module-mlonmcu.platform.tvm.tvm_rpc_platform"]], "mlonmcu.platform.tvm.tvm_target": [[39, "module-mlonmcu.platform.tvm.tvm_target"]], "mlonmcu.platform.tvm.tvm_target_platform": [[39, "module-mlonmcu.platform.tvm.tvm_target_platform"]], "mlonmcu.platform.tvm.tvm_tune_platform": [[39, "module-mlonmcu.platform.tvm.tvm_tune_platform"]], "monitor() (mlonmcu.platform.tvm.tvm_target_platform.tvmtargetplatform method)": [[39, "mlonmcu.platform.tvm.tvm_target_platform.TvmTargetPlatform.monitor"]], "name2device() (in module mlonmcu.platform.tvm.tvm_target)": [[39, "mlonmcu.platform.tvm.tvm_target.name2device"]], "number (mlonmcu.platform.tvm.tvm_target_platform.tvmtargetplatform property)": [[39, "mlonmcu.platform.tvm.tvm_target_platform.TvmTargetPlatform.number"]], "outs_file (mlonmcu.platform.tvm.tvm_target_platform.tvmtargetplatform property)": [[39, "mlonmcu.platform.tvm.tvm_target_platform.TvmTargetPlatform.outs_file"]], "print_top (mlonmcu.platform.tvm.tvm_target_platform.tvmtargetplatform property)": [[39, "mlonmcu.platform.tvm.tvm_target_platform.TvmTargetPlatform.print_top"]], "profile (mlonmcu.platform.tvm.tvm_target_platform.tvmtargetplatform property)": [[39, "mlonmcu.platform.tvm.tvm_target_platform.TvmTargetPlatform.profile"]], "register_tvm_platform_backend() (in module mlonmcu.platform.tvm.tvm_backend)": [[39, "mlonmcu.platform.tvm.tvm_backend.register_tvm_platform_backend"]], "repeat (mlonmcu.platform.tvm.tvm_target_platform.tvmtargetplatform property)": [[39, "mlonmcu.platform.tvm.tvm_target_platform.TvmTargetPlatform.repeat"]], "rpc_hostname (mlonmcu.platform.tvm.tvm_rpc_platform.tvmrpcplatform property)": [[39, "mlonmcu.platform.tvm.tvm_rpc_platform.TvmRpcPlatform.rpc_hostname"]], "rpc_key (mlonmcu.platform.tvm.tvm_rpc_platform.tvmrpcplatform property)": [[39, "mlonmcu.platform.tvm.tvm_rpc_platform.TvmRpcPlatform.rpc_key"]], "rpc_port (mlonmcu.platform.tvm.tvm_rpc_platform.tvmrpcplatform property)": [[39, "mlonmcu.platform.tvm.tvm_rpc_platform.TvmRpcPlatform.rpc_port"]], "run() (mlonmcu.platform.tvm.tvm_target_platform.tvmtargetplatform method)": [[39, "mlonmcu.platform.tvm.tvm_target_platform.TvmTargetPlatform.run"]], "total_time (mlonmcu.platform.tvm.tvm_target_platform.tvmtargetplatform property)": [[39, "mlonmcu.platform.tvm.tvm_target_platform.TvmTargetPlatform.total_time"]], "tune_tasks (mlonmcu.platform.tvm.tvm_tune_platform.tvmtuneplatform property)": [[39, "mlonmcu.platform.tvm.tvm_tune_platform.TvmTunePlatform.tune_tasks"]], "tvm_build_dir (mlonmcu.platform.tvm.tvm_base_platform.tvmbaseplatform property)": [[39, "mlonmcu.platform.tvm.tvm_base_platform.TvmBasePlatform.tvm_build_dir"]], "tvm_configs_dir (mlonmcu.platform.tvm.tvm_base_platform.tvmbaseplatform property)": [[39, "mlonmcu.platform.tvm.tvm_base_platform.TvmBasePlatform.tvm_configs_dir"]], "tvm_pythonpath (mlonmcu.platform.tvm.tvm_base_platform.tvmbaseplatform property)": [[39, "mlonmcu.platform.tvm.tvm_base_platform.TvmBasePlatform.tvm_pythonpath"]], "tvmc_custom_script (mlonmcu.platform.tvm.tvm_base_platform.tvmbaseplatform property)": [[39, "mlonmcu.platform.tvm.tvm_base_platform.TvmBasePlatform.tvmc_custom_script"]], "use_rpc (mlonmcu.platform.tvm.tvm_rpc_platform.tvmrpcplatform property)": [[39, "mlonmcu.platform.tvm.tvm_rpc_platform.TvmRpcPlatform.use_rpc"]], "defaults (mlonmcu.platform.zephyr.zephyrplatform attribute)": [[40, "mlonmcu.platform.zephyr.ZephyrPlatform.DEFAULTS"]], "defaults (mlonmcu.platform.zephyr.zephyr.zephyrplatform attribute)": [[40, "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform.DEFAULTS"]], "features (mlonmcu.platform.zephyr.zephyrplatform attribute)": [[40, "mlonmcu.platform.zephyr.ZephyrPlatform.FEATURES"]], "features (mlonmcu.platform.zephyr.zephyr.zephyrplatform attribute)": [[40, "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform.FEATURES"]], "required (mlonmcu.platform.zephyr.zephyrplatform attribute)": [[40, "mlonmcu.platform.zephyr.ZephyrPlatform.REQUIRED"]], "required (mlonmcu.platform.zephyr.zephyr.zephyrplatform attribute)": [[40, "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform.REQUIRED"]], "zephyrplatform (class in mlonmcu.platform.zephyr)": [[40, "mlonmcu.platform.zephyr.ZephyrPlatform"]], "zephyrplatform (class in mlonmcu.platform.zephyr.zephyr)": [[40, "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform"]], "baud (mlonmcu.platform.zephyr.zephyrplatform property)": [[40, "mlonmcu.platform.zephyr.ZephyrPlatform.baud"]], "baud (mlonmcu.platform.zephyr.zephyr.zephyrplatform property)": [[40, "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform.baud"]], "build_dir (mlonmcu.platform.zephyr.zephyrplatform property)": [[40, "mlonmcu.platform.zephyr.ZephyrPlatform.build_dir"]], "build_dir (mlonmcu.platform.zephyr.zephyr.zephyrplatform property)": [[40, "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform.build_dir"]], "close() (mlonmcu.platform.zephyr.zephyrplatform method)": [[40, "mlonmcu.platform.zephyr.ZephyrPlatform.close"]], "close() (mlonmcu.platform.zephyr.zephyr.zephyrplatform method)": [[40, "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform.close"]], "compile() (mlonmcu.platform.zephyr.zephyrplatform method)": [[40, "mlonmcu.platform.zephyr.ZephyrPlatform.compile"]], "compile() (mlonmcu.platform.zephyr.zephyr.zephyrplatform method)": [[40, "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform.compile"]], "create_target() (mlonmcu.platform.zephyr.zephyrplatform method)": [[40, "mlonmcu.platform.zephyr.ZephyrPlatform.create_target"]], "create_target() (mlonmcu.platform.zephyr.zephyr.zephyrplatform method)": [[40, "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform.create_target"]], "create_zephyr_platform_target() (in module mlonmcu.platform.zephyr.zephyr_target)": [[40, "mlonmcu.platform.zephyr.zephyr_target.create_zephyr_platform_target"]], "flash() (mlonmcu.platform.zephyr.zephyrplatform method)": [[40, "mlonmcu.platform.zephyr.ZephyrPlatform.flash"]], "flash() (mlonmcu.platform.zephyr.zephyr.zephyrplatform method)": [[40, "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform.flash"]], "flash_only (mlonmcu.platform.zephyr.zephyrplatform property)": [[40, "mlonmcu.platform.zephyr.ZephyrPlatform.flash_only"]], "flash_only (mlonmcu.platform.zephyr.zephyr.zephyrplatform property)": [[40, "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform.flash_only"]], "generate() (mlonmcu.platform.zephyr.zephyrplatform method)": [[40, "mlonmcu.platform.zephyr.ZephyrPlatform.generate"]], "generate() (mlonmcu.platform.zephyr.zephyr.zephyrplatform method)": [[40, "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform.generate"]], "get_project_template() (in module mlonmcu.platform.zephyr.zephyr)": [[40, "mlonmcu.platform.zephyr.zephyr.get_project_template"]], "get_serial() (mlonmcu.platform.zephyr.zephyrplatform method)": [[40, "mlonmcu.platform.zephyr.ZephyrPlatform.get_serial"]], "get_serial() (mlonmcu.platform.zephyr.zephyr.zephyrplatform method)": [[40, "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform.get_serial"]], "get_supported_targets() (mlonmcu.platform.zephyr.zephyrplatform method)": [[40, "mlonmcu.platform.zephyr.ZephyrPlatform.get_supported_targets"]], "get_supported_targets() (mlonmcu.platform.zephyr.zephyr.zephyrplatform method)": [[40, "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform.get_supported_targets"]], "get_west_cmake_args() (mlonmcu.platform.zephyr.zephyrplatform method)": [[40, "mlonmcu.platform.zephyr.ZephyrPlatform.get_west_cmake_args"]], "get_west_cmake_args() (mlonmcu.platform.zephyr.zephyr.zephyrplatform method)": [[40, "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform.get_west_cmake_args"]], "init_directory() (mlonmcu.platform.zephyr.zephyrplatform method)": [[40, "mlonmcu.platform.zephyr.ZephyrPlatform.init_directory"]], "init_directory() (mlonmcu.platform.zephyr.zephyr.zephyrplatform method)": [[40, "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform.init_directory"]], "invoke_west() (mlonmcu.platform.zephyr.zephyrplatform method)": [[40, "mlonmcu.platform.zephyr.ZephyrPlatform.invoke_west"]], "invoke_west() (mlonmcu.platform.zephyr.zephyr.zephyrplatform method)": [[40, "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform.invoke_west"]], "mlonmcu.platform.zephyr": [[40, "module-mlonmcu.platform.zephyr"]], "mlonmcu.platform.zephyr.zephyr": [[40, "module-mlonmcu.platform.zephyr.zephyr"]], "mlonmcu.platform.zephyr.zephyr_target": [[40, "module-mlonmcu.platform.zephyr.zephyr_target"]], "monitor() (mlonmcu.platform.zephyr.zephyrplatform method)": [[40, "mlonmcu.platform.zephyr.ZephyrPlatform.monitor"]], "monitor() (mlonmcu.platform.zephyr.zephyr.zephyrplatform method)": [[40, "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform.monitor"]], "optimize (mlonmcu.platform.zephyr.zephyrplatform property)": [[40, "mlonmcu.platform.zephyr.ZephyrPlatform.optimize"]], "optimize (mlonmcu.platform.zephyr.zephyr.zephyrplatform property)": [[40, "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform.optimize"]], "port (mlonmcu.platform.zephyr.zephyrplatform property)": [[40, "mlonmcu.platform.zephyr.ZephyrPlatform.port"]], "port (mlonmcu.platform.zephyr.zephyr.zephyrplatform property)": [[40, "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform.port"]], "prepare() (mlonmcu.platform.zephyr.zephyrplatform method)": [[40, "mlonmcu.platform.zephyr.ZephyrPlatform.prepare"]], "prepare() (mlonmcu.platform.zephyr.zephyr.zephyrplatform method)": [[40, "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform.prepare"]], "project_template (mlonmcu.platform.zephyr.zephyrplatform property)": [[40, "mlonmcu.platform.zephyr.ZephyrPlatform.project_template"]], "project_template (mlonmcu.platform.zephyr.zephyr.zephyrplatform property)": [[40, "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform.project_template"]], "wait_for_user (mlonmcu.platform.zephyr.zephyrplatform property)": [[40, "mlonmcu.platform.zephyr.ZephyrPlatform.wait_for_user"]], "wait_for_user (mlonmcu.platform.zephyr.zephyr.zephyrplatform property)": [[40, "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform.wait_for_user"]], "zephyr_install_dir (mlonmcu.platform.zephyr.zephyrplatform property)": [[40, "mlonmcu.platform.zephyr.ZephyrPlatform.zephyr_install_dir"]], "zephyr_install_dir (mlonmcu.platform.zephyr.zephyr.zephyrplatform property)": [[40, "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform.zephyr_install_dir"]], "zephyr_sdk_dir (mlonmcu.platform.zephyr.zephyrplatform property)": [[40, "mlonmcu.platform.zephyr.ZephyrPlatform.zephyr_sdk_dir"]], "zephyr_sdk_dir (mlonmcu.platform.zephyr.zephyr.zephyrplatform property)": [[40, "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform.zephyr_sdk_dir"]], "zephyr_venv_dir (mlonmcu.platform.zephyr.zephyrplatform property)": [[40, "mlonmcu.platform.zephyr.ZephyrPlatform.zephyr_venv_dir"]], "zephyr_venv_dir (mlonmcu.platform.zephyr.zephyr.zephyrplatform property)": [[40, "mlonmcu.platform.zephyr.zephyr.ZephyrPlatform.zephyr_venv_dir"]], "build (mlonmcu.session.run.runstage attribute)": [[41, "mlonmcu.session.run.RunStage.BUILD"]], "closed (mlonmcu.session.session.sessionstatus attribute)": [[41, "mlonmcu.session.session.SessionStatus.CLOSED"]], "compile (mlonmcu.session.run.runstage attribute)": [[41, "mlonmcu.session.run.RunStage.COMPILE"]], "created (mlonmcu.session.session.sessionstatus attribute)": [[41, "mlonmcu.session.session.SessionStatus.CREATED"]], "defaults (mlonmcu.session.run.run attribute)": [[41, "mlonmcu.session.run.Run.DEFAULTS"]], "defaults (mlonmcu.session.session.session attribute)": [[41, "mlonmcu.session.session.Session.DEFAULTS"]], "done (mlonmcu.session.run.runstage attribute)": [[41, "mlonmcu.session.run.RunStage.DONE"]], "error (mlonmcu.session.session.sessionstatus attribute)": [[41, "mlonmcu.session.session.SessionStatus.ERROR"]], "features (mlonmcu.session.run.run attribute)": [[41, "mlonmcu.session.run.Run.FEATURES"]], "load (mlonmcu.session.run.runstage attribute)": [[41, "mlonmcu.session.run.RunStage.LOAD"]], "nop (mlonmcu.session.run.runstage attribute)": [[41, "mlonmcu.session.run.RunStage.NOP"]], "open (mlonmcu.session.session.sessionstatus attribute)": [[41, "mlonmcu.session.session.SessionStatus.OPEN"]], "optional (mlonmcu.session.run.run attribute)": [[41, "mlonmcu.session.run.Run.OPTIONAL"]], "postprocess (mlonmcu.session.run.runstage attribute)": [[41, "mlonmcu.session.run.RunStage.POSTPROCESS"]], "required (mlonmcu.session.run.run attribute)": [[41, "mlonmcu.session.run.Run.REQUIRED"]], "run (mlonmcu.session.run.runstage attribute)": [[41, "mlonmcu.session.run.RunStage.RUN"]], "run (class in mlonmcu.session.run)": [[41, "mlonmcu.session.run.Run"]], "runstage (class in mlonmcu.session.run)": [[41, "mlonmcu.session.run.RunStage"]], "session (class in mlonmcu.session.session)": [[41, "mlonmcu.session.session.Session"]], "sessionstatus (class in mlonmcu.session.session)": [[41, "mlonmcu.session.session.SessionStatus"]], "tune (mlonmcu.session.run.runstage attribute)": [[41, "mlonmcu.session.run.RunStage.TUNE"]], "active (mlonmcu.session.session.session property)": [[41, "mlonmcu.session.session.Session.active"]], "add_any() (in module mlonmcu.session.run)": [[41, "mlonmcu.session.run.add_any"]], "add_backend() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.add_backend"]], "add_backend_by_name() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.add_backend_by_name"]], "add_feature() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.add_feature"]], "add_feature_by_name() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.add_feature_by_name"]], "add_features() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.add_features"]], "add_features_by_name() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.add_features_by_name"]], "add_framework() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.add_framework"]], "add_frontend() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.add_frontend"]], "add_frontend_by_name() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.add_frontend_by_name"]], "add_frontends() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.add_frontends"]], "add_frontends_by_name() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.add_frontends_by_name"]], "add_model() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.add_model"]], "add_model_by_name() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.add_model_by_name"]], "add_platform() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.add_platform"]], "add_platform_by_name() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.add_platform_by_name"]], "add_platforms() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.add_platforms"]], "add_platforms_by_name() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.add_platforms_by_name"]], "add_postprocess() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.add_postprocess"]], "add_postprocess_by_name() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.add_postprocess_by_name"]], "add_postprocesses() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.add_postprocesses"]], "add_postprocesses_by_name() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.add_postprocesses_by_name"]], "add_target() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.add_target"]], "add_target_by_name() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.add_target_by_name"]], "artifacts (mlonmcu.session.run.run property)": [[41, "mlonmcu.session.run.Run.artifacts"]], "build() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.build"]], "build_platform (mlonmcu.session.run.run property)": [[41, "mlonmcu.session.run.Run.build_platform"]], "close() (mlonmcu.session.session.session method)": [[41, "mlonmcu.session.session.Session.close"]], "compile() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.compile"]], "compile_platform (mlonmcu.session.run.run property)": [[41, "mlonmcu.session.run.Run.compile_platform"]], "copy() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.copy"]], "create_run() (mlonmcu.session.session.session method)": [[41, "mlonmcu.session.session.Session.create_run"]], "discard() (mlonmcu.session.session.session method)": [[41, "mlonmcu.session.session.Session.discard"]], "enumerate_runs() (mlonmcu.session.session.session method)": [[41, "mlonmcu.session.session.Session.enumerate_runs"]], "export() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.export"]], "export_optional (mlonmcu.session.run.run property)": [[41, "mlonmcu.session.run.Run.export_optional"]], "export_stage() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.export_stage"]], "failing (mlonmcu.session.session.session property)": [[41, "mlonmcu.session.session.Session.failing"]], "from_file() (mlonmcu.session.run.run class method)": [[41, "mlonmcu.session.run.Run.from_file"]], "frontend (mlonmcu.session.run.run property)": [[41, "mlonmcu.session.run.Run.frontend"]], "get_all_configs() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.get_all_configs"]], "get_all_feature_names() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.get_all_feature_names"]], "get_all_postprocess_names() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.get_all_postprocess_names"]], "get_all_sub_artifacts() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.get_all_sub_artifacts"]], "get_frontend_name() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.get_frontend_name"]], "get_platform_name() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.get_platform_name"]], "get_reason_text() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.get_reason_text"]], "get_report() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.get_report"]], "get_reports() (mlonmcu.session.session.session method)": [[41, "mlonmcu.session.session.Session.get_reports"]], "has_stage() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.has_stage"]], "init_component() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.init_component"]], "init_directory() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.init_directory"]], "last_stage (mlonmcu.session.run.run property)": [[41, "mlonmcu.session.run.Run.last_stage"]], "load() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.load"]], "lock() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.lock"]], "mlonmcu.session": [[41, "module-mlonmcu.session"]], "mlonmcu.session.run": [[41, "module-mlonmcu.session.run"]], "mlonmcu.session.session": [[41, "module-mlonmcu.session.session"]], "next_stage (mlonmcu.session.run.run property)": [[41, "mlonmcu.session.run.Run.next_stage"]], "open() (mlonmcu.session.session.session method)": [[41, "mlonmcu.session.session.Session.open"]], "postprocess() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.postprocess"]], "prefix (mlonmcu.session.run.run property)": [[41, "mlonmcu.session.run.Run.prefix"]], "prefix (mlonmcu.session.session.session property)": [[41, "mlonmcu.session.session.Session.prefix"]], "process() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.process"]], "process_features() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.process_features"]], "process_runs() (mlonmcu.session.session.session method)": [[41, "mlonmcu.session.session.Session.process_runs"]], "report_fmt (mlonmcu.session.session.session property)": [[41, "mlonmcu.session.session.Session.report_fmt"]], "request_run_idx() (mlonmcu.session.session.session method)": [[41, "mlonmcu.session.session.Session.request_run_idx"]], "run() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.run"]], "runs_dir (mlonmcu.session.session.session property)": [[41, "mlonmcu.session.session.Session.runs_dir"]], "stage_subdirs (mlonmcu.session.run.run property)": [[41, "mlonmcu.session.run.Run.stage_subdirs"]], "target_optimized_layouts (mlonmcu.session.run.run property)": [[41, "mlonmcu.session.run.Run.target_optimized_layouts"]], "target_optimized_schedules (mlonmcu.session.run.run property)": [[41, "mlonmcu.session.run.Run.target_optimized_schedules"]], "target_platform (mlonmcu.session.run.run property)": [[41, "mlonmcu.session.run.Run.target_platform"]], "target_to_backend (mlonmcu.session.run.run property)": [[41, "mlonmcu.session.run.Run.target_to_backend"]], "todict() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.toDict"]], "tune() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.tune"]], "tune_enabled (mlonmcu.session.run.run property)": [[41, "mlonmcu.session.run.Run.tune_enabled"]], "tune_platform (mlonmcu.session.run.run property)": [[41, "mlonmcu.session.run.Run.tune_platform"]], "unlock() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.unlock"]], "update_latest_run_symlink() (mlonmcu.session.session.session method)": [[41, "mlonmcu.session.session.Session.update_latest_run_symlink"]], "write_run_file() (mlonmcu.session.run.run method)": [[41, "mlonmcu.session.run.Run.write_run_file"]], "analysecorevcountspostprocess (class in mlonmcu.session.postprocess.postprocesses)": [[42, "mlonmcu.session.postprocess.postprocesses.AnalyseCoreVCountsPostprocess"]], "analysedumppostprocess (class in mlonmcu.session.postprocess.postprocesses)": [[42, "mlonmcu.session.postprocess.postprocesses.AnalyseDumpPostprocess"]], "analyseinstructionspostprocess (class in mlonmcu.session.postprocess.postprocesses)": [[42, "mlonmcu.session.postprocess.postprocesses.AnalyseInstructionsPostprocess"]], "artifact2columnpostprocess (class in mlonmcu.session.postprocess.postprocesses)": [[42, "mlonmcu.session.postprocess.postprocesses.Artifact2ColumnPostprocess"]], "bytes2kbpostprocess (class in mlonmcu.session.postprocess.postprocesses)": [[42, "mlonmcu.session.postprocess.postprocesses.Bytes2kBPostprocess"]], "comparerowspostprocess (class in mlonmcu.session.postprocess.postprocesses)": [[42, "mlonmcu.session.postprocess.postprocesses.CompareRowsPostprocess"]], "config2columnspostprocess (class in mlonmcu.session.postprocess.postprocesses)": [[42, "mlonmcu.session.postprocess.postprocesses.Config2ColumnsPostprocess"]], "defaults (mlonmcu.session.postprocess.postprocess.postprocess attribute)": [[42, "mlonmcu.session.postprocess.postprocess.Postprocess.DEFAULTS"]], "defaults (mlonmcu.session.postprocess.postprocesses.analysecorevcountspostprocess attribute)": [[42, "mlonmcu.session.postprocess.postprocesses.AnalyseCoreVCountsPostprocess.DEFAULTS"]], "defaults (mlonmcu.session.postprocess.postprocesses.analysedumppostprocess attribute)": [[42, "mlonmcu.session.postprocess.postprocesses.AnalyseDumpPostprocess.DEFAULTS"]], "defaults (mlonmcu.session.postprocess.postprocesses.analyseinstructionspostprocess attribute)": [[42, "mlonmcu.session.postprocess.postprocesses.AnalyseInstructionsPostprocess.DEFAULTS"]], "defaults (mlonmcu.session.postprocess.postprocesses.artifact2columnpostprocess attribute)": [[42, "mlonmcu.session.postprocess.postprocesses.Artifact2ColumnPostprocess.DEFAULTS"]], "defaults (mlonmcu.session.postprocess.postprocesses.comparerowspostprocess attribute)": [[42, "mlonmcu.session.postprocess.postprocesses.CompareRowsPostprocess.DEFAULTS"]], "defaults (mlonmcu.session.postprocess.postprocesses.config2columnspostprocess attribute)": [[42, "mlonmcu.session.postprocess.postprocesses.Config2ColumnsPostprocess.DEFAULTS"]], "defaults (mlonmcu.session.postprocess.postprocesses.features2columnspostprocess attribute)": [[42, "mlonmcu.session.postprocess.postprocesses.Features2ColumnsPostprocess.DEFAULTS"]], "defaults (mlonmcu.session.postprocess.postprocesses.filtercolumnspostprocess attribute)": [[42, "mlonmcu.session.postprocess.postprocesses.FilterColumnsPostprocess.DEFAULTS"]], "defaults (mlonmcu.session.postprocess.postprocesses.mypostprocess attribute)": [[42, "mlonmcu.session.postprocess.postprocesses.MyPostprocess.DEFAULTS"]], "defaults (mlonmcu.session.postprocess.postprocesses.renamecolumnspostprocess attribute)": [[42, "mlonmcu.session.postprocess.postprocesses.RenameColumnsPostprocess.DEFAULTS"]], "defaults (mlonmcu.session.postprocess.postprocesses.visualizepostprocess attribute)": [[42, "mlonmcu.session.postprocess.postprocesses.VisualizePostprocess.DEFAULTS"]], "features (mlonmcu.session.postprocess.postprocess.postprocess attribute)": [[42, "mlonmcu.session.postprocess.postprocess.Postprocess.FEATURES"]], "features2columnspostprocess (class in mlonmcu.session.postprocess.postprocesses)": [[42, "mlonmcu.session.postprocess.postprocesses.Features2ColumnsPostprocess"]], "filtercolumnspostprocess (class in mlonmcu.session.postprocess.postprocesses)": [[42, "mlonmcu.session.postprocess.postprocesses.FilterColumnsPostprocess"]], "mypostprocess (class in mlonmcu.session.postprocess.postprocesses)": [[42, "mlonmcu.session.postprocess.postprocesses.MyPostprocess"]], "optional (mlonmcu.session.postprocess.postprocess.postprocess attribute)": [[42, "mlonmcu.session.postprocess.postprocess.Postprocess.OPTIONAL"]], "passconfig2columnspostprocess (class in mlonmcu.session.postprocess.postprocesses)": [[42, "mlonmcu.session.postprocess.postprocesses.PassConfig2ColumnsPostprocess"]], "postprocess (class in mlonmcu.session.postprocess.postprocess)": [[42, "mlonmcu.session.postprocess.postprocess.Postprocess"]], "required (mlonmcu.session.postprocess.postprocess.postprocess attribute)": [[42, "mlonmcu.session.postprocess.postprocess.Postprocess.REQUIRED"]], "renamecolumnspostprocess (class in mlonmcu.session.postprocess.postprocesses)": [[42, "mlonmcu.session.postprocess.postprocesses.RenameColumnsPostprocess"]], "runpostprocess (class in mlonmcu.session.postprocess.postprocess)": [[42, "mlonmcu.session.postprocess.postprocess.RunPostprocess"]], "sessionpostprocess (class in mlonmcu.session.postprocess.postprocess)": [[42, "mlonmcu.session.postprocess.postprocess.SessionPostprocess"]], "visualizepostprocess (class in mlonmcu.session.postprocess.postprocesses)": [[42, "mlonmcu.session.postprocess.postprocesses.VisualizePostprocess"]], "baseline (mlonmcu.session.postprocess.postprocesses.comparerowspostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.CompareRowsPostprocess.baseline"]], "drop (mlonmcu.session.postprocess.postprocesses.config2columnspostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.Config2ColumnsPostprocess.drop"]], "drop (mlonmcu.session.postprocess.postprocesses.features2columnspostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.Features2ColumnsPostprocess.drop"]], "drop (mlonmcu.session.postprocess.postprocesses.filtercolumnspostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.FilterColumnsPostprocess.drop"]], "drop_const (mlonmcu.session.postprocess.postprocesses.filtercolumnspostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.FilterColumnsPostprocess.drop_const"]], "drop_empty (mlonmcu.session.postprocess.postprocesses.filtercolumnspostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.FilterColumnsPostprocess.drop_empty"]], "drop_nan (mlonmcu.session.postprocess.postprocesses.filtercolumnspostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.FilterColumnsPostprocess.drop_nan"]], "file2colname (mlonmcu.session.postprocess.postprocesses.artifact2columnpostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.Artifact2ColumnPostprocess.file2colname"]], "format (mlonmcu.session.postprocess.postprocesses.visualizepostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.VisualizePostprocess.format"]], "group_by (mlonmcu.session.postprocess.postprocesses.comparerowspostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.CompareRowsPostprocess.group_by"]], "groups (mlonmcu.session.postprocess.postprocesses.analyseinstructionspostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.AnalyseInstructionsPostprocess.groups"]], "invert (mlonmcu.session.postprocess.postprocesses.comparerowspostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.CompareRowsPostprocess.invert"]], "keep (mlonmcu.session.postprocess.postprocesses.filtercolumnspostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.FilterColumnsPostprocess.keep"]], "limit (mlonmcu.session.postprocess.postprocesses.config2columnspostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.Config2ColumnsPostprocess.limit"]], "limit (mlonmcu.session.postprocess.postprocesses.features2columnspostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.Features2ColumnsPostprocess.limit"]], "mapping (mlonmcu.session.postprocess.postprocesses.renamecolumnspostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.RenameColumnsPostprocess.mapping"]], "match_rows() (in module mlonmcu.session.postprocess.postprocesses)": [[42, "mlonmcu.session.postprocess.postprocesses.match_rows"]], "merge (mlonmcu.session.postprocess.postprocesses.renamecolumnspostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.RenameColumnsPostprocess.merge"]], "mlonmcu.session.postprocess": [[42, "module-mlonmcu.session.postprocess"]], "mlonmcu.session.postprocess.postprocess": [[42, "module-mlonmcu.session.postprocess.postprocess"]], "mlonmcu.session.postprocess.postprocesses": [[42, "module-mlonmcu.session.postprocess.postprocesses"]], "percent (mlonmcu.session.postprocess.postprocesses.comparerowspostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.CompareRowsPostprocess.percent"]], "post_run() (mlonmcu.session.postprocess.postprocess.runpostprocess method)": [[42, "mlonmcu.session.postprocess.postprocess.RunPostprocess.post_run"]], "post_run() (mlonmcu.session.postprocess.postprocesses.analysecorevcountspostprocess method)": [[42, "mlonmcu.session.postprocess.postprocesses.AnalyseCoreVCountsPostprocess.post_run"]], "post_run() (mlonmcu.session.postprocess.postprocesses.analysedumppostprocess method)": [[42, "mlonmcu.session.postprocess.postprocesses.AnalyseDumpPostprocess.post_run"]], "post_run() (mlonmcu.session.postprocess.postprocesses.analyseinstructionspostprocess method)": [[42, "mlonmcu.session.postprocess.postprocesses.AnalyseInstructionsPostprocess.post_run"]], "post_run() (mlonmcu.session.postprocess.postprocesses.artifact2columnpostprocess method)": [[42, "mlonmcu.session.postprocess.postprocesses.Artifact2ColumnPostprocess.post_run"]], "post_session() (mlonmcu.session.postprocess.postprocess.sessionpostprocess method)": [[42, "mlonmcu.session.postprocess.postprocess.SessionPostprocess.post_session"]], "post_session() (mlonmcu.session.postprocess.postprocesses.bytes2kbpostprocess method)": [[42, "mlonmcu.session.postprocess.postprocesses.Bytes2kBPostprocess.post_session"]], "post_session() (mlonmcu.session.postprocess.postprocesses.comparerowspostprocess method)": [[42, "mlonmcu.session.postprocess.postprocesses.CompareRowsPostprocess.post_session"]], "post_session() (mlonmcu.session.postprocess.postprocesses.config2columnspostprocess method)": [[42, "mlonmcu.session.postprocess.postprocesses.Config2ColumnsPostprocess.post_session"]], "post_session() (mlonmcu.session.postprocess.postprocesses.features2columnspostprocess method)": [[42, "mlonmcu.session.postprocess.postprocesses.Features2ColumnsPostprocess.post_session"]], "post_session() (mlonmcu.session.postprocess.postprocesses.filtercolumnspostprocess method)": [[42, "mlonmcu.session.postprocess.postprocesses.FilterColumnsPostprocess.post_session"]], "post_session() (mlonmcu.session.postprocess.postprocesses.mypostprocess method)": [[42, "mlonmcu.session.postprocess.postprocesses.MyPostprocess.post_session"]], "post_session() (mlonmcu.session.postprocess.postprocesses.passconfig2columnspostprocess method)": [[42, "mlonmcu.session.postprocess.postprocesses.PassConfig2ColumnsPostprocess.post_session"]], "post_session() (mlonmcu.session.postprocess.postprocesses.renamecolumnspostprocess method)": [[42, "mlonmcu.session.postprocess.postprocesses.RenameColumnsPostprocess.post_session"]], "post_session() (mlonmcu.session.postprocess.postprocesses.visualizepostprocess method)": [[42, "mlonmcu.session.postprocess.postprocesses.VisualizePostprocess.post_session"]], "process_features() (mlonmcu.session.postprocess.postprocess.postprocess method)": [[42, "mlonmcu.session.postprocess.postprocess.Postprocess.process_features"]], "sequences (mlonmcu.session.postprocess.postprocesses.analyseinstructionspostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.AnalyseInstructionsPostprocess.sequences"]], "substract (mlonmcu.session.postprocess.postprocesses.comparerowspostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.CompareRowsPostprocess.substract"]], "to_compare (mlonmcu.session.postprocess.postprocesses.comparerowspostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.CompareRowsPostprocess.to_compare"]], "to_df (mlonmcu.session.postprocess.postprocesses.analysecorevcountspostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.AnalyseCoreVCountsPostprocess.to_df"]], "to_df (mlonmcu.session.postprocess.postprocesses.analysedumppostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.AnalyseDumpPostprocess.to_df"]], "to_df (mlonmcu.session.postprocess.postprocesses.analyseinstructionspostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.AnalyseInstructionsPostprocess.to_df"]], "to_file (mlonmcu.session.postprocess.postprocesses.analysecorevcountspostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.AnalyseCoreVCountsPostprocess.to_file"]], "to_file (mlonmcu.session.postprocess.postprocesses.analysedumppostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.AnalyseDumpPostprocess.to_file"]], "to_file (mlonmcu.session.postprocess.postprocesses.analyseinstructionspostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.AnalyseInstructionsPostprocess.to_file"]], "top (mlonmcu.session.postprocess.postprocesses.analyseinstructionspostprocess property)": [[42, "mlonmcu.session.postprocess.postprocesses.AnalyseInstructionsPostprocess.top"]], "backend (mlonmcu.setup.task.tasktype attribute)": [[43, "mlonmcu.setup.task.TaskType.BACKEND"]], "defaults (mlonmcu.setup.setup.setup attribute)": [[43, "mlonmcu.setup.setup.Setup.DEFAULTS"]], "feature (mlonmcu.setup.task.tasktype attribute)": [[43, "mlonmcu.setup.task.TaskType.FEATURE"]], "features (mlonmcu.setup.setup.setup attribute)": [[43, "mlonmcu.setup.setup.Setup.FEATURES"]], "framework (mlonmcu.setup.task.tasktype attribute)": [[43, "mlonmcu.setup.task.TaskType.FRAMEWORK"]], "frontend (mlonmcu.setup.task.tasktype attribute)": [[43, "mlonmcu.setup.task.TaskType.FRONTEND"]], "misc (mlonmcu.setup.task.tasktype attribute)": [[43, "mlonmcu.setup.task.TaskType.MISC"]], "opt (mlonmcu.setup.task.tasktype attribute)": [[43, "mlonmcu.setup.task.TaskType.OPT"]], "optional (mlonmcu.setup.setup.setup attribute)": [[43, "mlonmcu.setup.setup.Setup.OPTIONAL"]], "platform (mlonmcu.setup.task.tasktype attribute)": [[43, "mlonmcu.setup.task.TaskType.PLATFORM"]], "required (mlonmcu.setup.setup.setup attribute)": [[43, "mlonmcu.setup.setup.Setup.REQUIRED"]], "setup (class in mlonmcu.setup.setup)": [[43, "mlonmcu.setup.setup.Setup"]], "target (mlonmcu.setup.task.tasktype attribute)": [[43, "mlonmcu.setup.task.TaskType.TARGET"]], "toolchain (mlonmcu.setup.task.tasktype attribute)": [[43, "mlonmcu.setup.task.TaskType.TOOLCHAIN"]], "taskcache (class in mlonmcu.setup.cache)": [[43, "mlonmcu.setup.cache.TaskCache"]], "taskfactory (class in mlonmcu.setup.task)": [[43, "mlonmcu.setup.task.TaskFactory"]], "taskgraph (class in mlonmcu.setup.task)": [[43, "mlonmcu.setup.task.TaskGraph"]], "tasktype (class in mlonmcu.setup.task)": [[43, "mlonmcu.setup.task.TaskType"]], "validationerror": [[43, "mlonmcu.setup.gen_requirements.ValidationError"]], "apply() (in module mlonmcu.setup.utils)": [[43, "mlonmcu.setup.utils.apply"]], "clean_cache() (mlonmcu.setup.setup.setup method)": [[43, "mlonmcu.setup.setup.Setup.clean_cache"]], "clean_dependencies() (mlonmcu.setup.setup.setup method)": [[43, "mlonmcu.setup.setup.Setup.clean_dependencies"]], "clone() (in module mlonmcu.setup.utils)": [[43, "mlonmcu.setup.utils.clone"]], "clone_wrapper() (in module mlonmcu.setup.utils)": [[43, "mlonmcu.setup.utils.clone_wrapper"]], "cmake() (in module mlonmcu.setup.utils)": [[43, "mlonmcu.setup.utils.cmake"]], "convert_key() (in module mlonmcu.setup.cache)": [[43, "mlonmcu.setup.cache.convert_key"]], "copy() (in module mlonmcu.setup.utils)": [[43, "mlonmcu.setup.utils.copy"]], "download() (in module mlonmcu.setup.utils)": [[43, "mlonmcu.setup.utils.download"]], "download_and_extract() (in module mlonmcu.setup.utils)": [[43, "mlonmcu.setup.utils.download_and_extract"]], "exec() (in module mlonmcu.setup.utils)": [[43, "mlonmcu.setup.utils.exec"]], "exec_getout() (in module mlonmcu.setup.utils)": [[43, "mlonmcu.setup.utils.exec_getout"]], "export_dot() (mlonmcu.setup.task.taskgraph method)": [[43, "mlonmcu.setup.task.TaskGraph.export_dot"]], "extract() (in module mlonmcu.setup.utils)": [[43, "mlonmcu.setup.utils.extract"]], "find_best_match() (mlonmcu.setup.cache.taskcache method)": [[43, "mlonmcu.setup.cache.TaskCache.find_best_match"]], "format_problems() (mlonmcu.setup.gen_requirements.validationerror static method)": [[43, "mlonmcu.setup.gen_requirements.ValidationError.format_problems"]], "generate_requirements() (mlonmcu.setup.setup.setup method)": [[43, "mlonmcu.setup.setup.Setup.generate_requirements"]], "get_combs() (in module mlonmcu.setup.task)": [[43, "mlonmcu.setup.task.get_combs"]], "get_dependency_order() (mlonmcu.setup.setup.setup method)": [[43, "mlonmcu.setup.setup.Setup.get_dependency_order"]], "get_graph() (mlonmcu.setup.task.taskgraph method)": [[43, "mlonmcu.setup.task.TaskGraph.get_graph"]], "get_order() (mlonmcu.setup.task.taskgraph method)": [[43, "mlonmcu.setup.task.TaskGraph.get_order"]], "install_dependencies() (mlonmcu.setup.setup.setup method)": [[43, "mlonmcu.setup.setup.Setup.install_dependencies"]], "invoke_single_task() (mlonmcu.setup.setup.setup method)": [[43, "mlonmcu.setup.setup.Setup.invoke_single_task"]], "is_populated() (in module mlonmcu.setup.utils)": [[43, "mlonmcu.setup.utils.is_populated"]], "join_and_write_requirements() (in module mlonmcu.setup.gen_requirements)": [[43, "mlonmcu.setup.gen_requirements.join_and_write_requirements"]], "join_requirements() (in module mlonmcu.setup.gen_requirements)": [[43, "mlonmcu.setup.gen_requirements.join_requirements"]], "main() (in module mlonmcu.setup.gen_requirements)": [[43, "mlonmcu.setup.gen_requirements.main"]], "make() (in module mlonmcu.setup.utils)": [[43, "mlonmcu.setup.utils.make"]], "makedirname() (in module mlonmcu.setup.utils)": [[43, "mlonmcu.setup.utils.makeDirName"]], "makeflags() (in module mlonmcu.setup.utils)": [[43, "mlonmcu.setup.utils.makeFlags"]], "mkdirs() (in module mlonmcu.setup.utils)": [[43, "mlonmcu.setup.utils.mkdirs"]], "mlonmcu.setup": [[43, "module-mlonmcu.setup"]], "mlonmcu.setup.cache": [[43, "module-mlonmcu.setup.cache"]], "mlonmcu.setup.gen_requirements": [[43, "module-mlonmcu.setup.gen_requirements"]], "mlonmcu.setup.setup": [[43, "module-mlonmcu.setup.setup"]], "mlonmcu.setup.task": [[43, "module-mlonmcu.setup.task"]], "mlonmcu.setup.utils": [[43, "module-mlonmcu.setup.utils"]], "move() (in module mlonmcu.setup.utils)": [[43, "mlonmcu.setup.utils.move"]], "needs() (mlonmcu.setup.task.taskfactory method)": [[43, "mlonmcu.setup.task.TaskFactory.needs"]], "optional() (mlonmcu.setup.task.taskfactory method)": [[43, "mlonmcu.setup.task.TaskFactory.optional"]], "param() (mlonmcu.setup.task.taskfactory method)": [[43, "mlonmcu.setup.task.TaskFactory.param"]], "parse_args() (in module mlonmcu.setup.gen_requirements)": [[43, "mlonmcu.setup.gen_requirements.parse_args"]], "parse_semver() (in module mlonmcu.setup.gen_requirements)": [[43, "mlonmcu.setup.gen_requirements.parse_semver"]], "patch() (in module mlonmcu.setup.utils)": [[43, "mlonmcu.setup.utils.patch"]], "process_features() (mlonmcu.setup.setup.setup method)": [[43, "mlonmcu.setup.setup.Setup.process_features"]], "provides() (mlonmcu.setup.task.taskfactory method)": [[43, "mlonmcu.setup.task.TaskFactory.provides"]], "python() (in module mlonmcu.setup.utils)": [[43, "mlonmcu.setup.utils.python"]], "read_from_file() (mlonmcu.setup.cache.taskcache method)": [[43, "mlonmcu.setup.cache.TaskCache.read_from_file"]], "register() (mlonmcu.setup.task.taskfactory method)": [[43, "mlonmcu.setup.task.TaskFactory.register"]], "remove() (in module mlonmcu.setup.utils)": [[43, "mlonmcu.setup.utils.remove"]], "removes() (mlonmcu.setup.task.taskfactory method)": [[43, "mlonmcu.setup.task.TaskFactory.removes"]], "reset_changes() (mlonmcu.setup.task.taskfactory method)": [[43, "mlonmcu.setup.task.TaskFactory.reset_changes"]], "semver_to_requirements() (in module mlonmcu.setup.gen_requirements)": [[43, "mlonmcu.setup.gen_requirements.semver_to_requirements"]], "setup_progress_bar() (mlonmcu.setup.setup.setup method)": [[43, "mlonmcu.setup.setup.Setup.setup_progress_bar"]], "symlink() (in module mlonmcu.setup.utils)": [[43, "mlonmcu.setup.utils.symlink"]], "validate() (mlonmcu.setup.task.taskfactory method)": [[43, "mlonmcu.setup.task.TaskFactory.validate"]], "validate_constraints() (in module mlonmcu.setup.gen_requirements)": [[43, "mlonmcu.setup.gen_requirements.validate_constraints"]], "validate_or_raise() (in module mlonmcu.setup.gen_requirements)": [[43, "mlonmcu.setup.gen_requirements.validate_or_raise"]], "validate_requirements_by_piece() (in module mlonmcu.setup.gen_requirements)": [[43, "mlonmcu.setup.gen_requirements.validate_requirements_by_piece"]], "verbose (mlonmcu.setup.setup.setup property)": [[43, "mlonmcu.setup.setup.Setup.verbose"]], "visualize() (mlonmcu.setup.setup.setup method)": [[43, "mlonmcu.setup.setup.Setup.visualize"]], "write_cache_file() (mlonmcu.setup.setup.setup method)": [[43, "mlonmcu.setup.setup.Setup.write_cache_file"]], "write_env_file() (mlonmcu.setup.setup.setup method)": [[43, "mlonmcu.setup.setup.Setup.write_env_file"]], "write_to_file() (mlonmcu.setup.cache.taskcache method)": [[43, "mlonmcu.setup.cache.TaskCache.write_to_file"]], "build_cv32e40p() (in module mlonmcu.setup.tasks.cv32e40p)": [[44, "mlonmcu.setup.tasks.cv32e40p.build_cv32e40p"]], "build_dtc() (in module mlonmcu.setup.tasks.dtc)": [[44, "mlonmcu.setup.tasks.dtc.build_dtc"]], "build_etiss() (in module mlonmcu.setup.tasks.etiss)": [[44, "mlonmcu.setup.tasks.etiss.build_etiss"]], "build_muriscvnn() (in module mlonmcu.setup.tasks.muriscvnn)": [[44, "mlonmcu.setup.tasks.muriscvnn.build_muriscvnn"]], "build_spike() (in module mlonmcu.setup.tasks.spike)": [[44, "mlonmcu.setup.tasks.spike.build_spike"]], "build_spike_pk() (in module mlonmcu.setup.tasks.spike)": [[44, "mlonmcu.setup.tasks.spike.build_spike_pk"]], "build_srecord() (in module mlonmcu.setup.tasks.srecord)": [[44, "mlonmcu.setup.tasks.srecord.build_srecord"]], "build_tensorflow() (in module mlonmcu.setup.tasks.tf)": [[44, "mlonmcu.setup.tasks.tf.build_tensorflow"]], "build_tflite_micro_compiler() (in module mlonmcu.setup.tasks.tflmc)": [[44, "mlonmcu.setup.tasks.tflmc.build_tflite_micro_compiler"]], "build_tvm() (in module mlonmcu.setup.tasks.tvm)": [[44, "mlonmcu.setup.tasks.tvm.build_tvm"]], "build_utvm_staticrt_codegen() (in module mlonmcu.setup.tasks.utvmcg)": [[44, "mlonmcu.setup.tasks.utvmcg.build_utvm_staticrt_codegen"]], "build_verilator() (in module mlonmcu.setup.tasks.verilator)": [[44, "mlonmcu.setup.tasks.verilator.build_verilator"]], "check_multilibs() (in module mlonmcu.setup.tasks.riscv_gcc)": [[44, "mlonmcu.setup.tasks.riscv_gcc.check_multilibs"]], "clean_etiss() (in module mlonmcu.setup.tasks.etiss)": [[44, "mlonmcu.setup.tasks.etiss.clean_etiss"]], "clean_spike() (in module mlonmcu.setup.tasks.spike)": [[44, "mlonmcu.setup.tasks.spike.clean_spike"]], "clone_ara() (in module mlonmcu.setup.tasks.ara)": [[44, "mlonmcu.setup.tasks.ara.clone_ara"]], "clone_benchmarks() (in module mlonmcu.setup.tasks.benchmarks)": [[44, "mlonmcu.setup.tasks.benchmarks.clone_benchmarks"]], "clone_cmsis() (in module mlonmcu.setup.tasks.cmsisnn)": [[44, "mlonmcu.setup.tasks.cmsisnn.clone_cmsis"]], "clone_cmsisnn() (in module mlonmcu.setup.tasks.cmsisnn)": [[44, "mlonmcu.setup.tasks.cmsisnn.clone_cmsisnn"]], "clone_corevverif() (in module mlonmcu.setup.tasks.corev)": [[44, "mlonmcu.setup.tasks.corev.clone_corevverif"]], "clone_cv32e40p() (in module mlonmcu.setup.tasks.cv32e40p)": [[44, "mlonmcu.setup.tasks.cv32e40p.clone_cv32e40p"]], "clone_dtc() (in module mlonmcu.setup.tasks.dtc)": [[44, "mlonmcu.setup.tasks.dtc.clone_dtc"]], "clone_espidf() (in module mlonmcu.setup.tasks.espidf)": [[44, "mlonmcu.setup.tasks.espidf.clone_espidf"]], "clone_ethosu_platform() (in module mlonmcu.setup.tasks.cmsisnn)": [[44, "mlonmcu.setup.tasks.cmsisnn.clone_ethosu_platform"]], "clone_etiss() (in module mlonmcu.setup.tasks.etiss)": [[44, "mlonmcu.setup.tasks.etiss.clone_etiss"]], "clone_etiss_accelerator_plugins() (in module mlonmcu.setup.tasks.etiss)": [[44, "mlonmcu.setup.tasks.etiss.clone_etiss_accelerator_plugins"]], "clone_layergen() (in module mlonmcu.setup.tasks.layergen)": [[44, "mlonmcu.setup.tasks.layergen.clone_layergen"]], "clone_microtvm_etiss() (in module mlonmcu.setup.tasks.etiss)": [[44, "mlonmcu.setup.tasks.etiss.clone_microtvm_etiss"]], "clone_microtvm_spike() (in module mlonmcu.setup.tasks.spike)": [[44, "mlonmcu.setup.tasks.spike.clone_microtvm_spike"]], "clone_mlif() (in module mlonmcu.setup.tasks.mlif)": [[44, "mlonmcu.setup.tasks.mlif.clone_mlif"]], "clone_muriscvnn() (in module mlonmcu.setup.tasks.muriscvnn)": [[44, "mlonmcu.setup.tasks.muriscvnn.clone_muriscvnn"]], "clone_pulp_freertos() (in module mlonmcu.setup.tasks.pulp)": [[44, "mlonmcu.setup.tasks.pulp.clone_pulp_freertos"]], "clone_spike() (in module mlonmcu.setup.tasks.spike)": [[44, "mlonmcu.setup.tasks.spike.clone_spike"]], "clone_spike_pk() (in module mlonmcu.setup.tasks.spike)": [[44, "mlonmcu.setup.tasks.spike.clone_spike_pk"]], "clone_srecord() (in module mlonmcu.setup.tasks.srecord)": [[44, "mlonmcu.setup.tasks.srecord.clone_srecord"]], "clone_tensorflow() (in module mlonmcu.setup.tasks.tf)": [[44, "mlonmcu.setup.tasks.tf.clone_tensorflow"]], "clone_tflite_micro_compiler() (in module mlonmcu.setup.tasks.tflmc)": [[44, "mlonmcu.setup.tasks.tflmc.clone_tflite_micro_compiler"]], "clone_tflite_pack() (in module mlonmcu.setup.tasks.tf)": [[44, "mlonmcu.setup.tasks.tf.clone_tflite_pack"]], "clone_tvm() (in module mlonmcu.setup.tasks.tvm)": [[44, "mlonmcu.setup.tasks.tvm.clone_tvm"]], "clone_tvm_extensions() (in module mlonmcu.setup.tasks.tvm)": [[44, "mlonmcu.setup.tasks.tvm.clone_tvm_extensions"]], "clone_utvm_staticrt_codegen() (in module mlonmcu.setup.tasks.utvmcg)": [[44, "mlonmcu.setup.tasks.utvmcg.clone_utvm_staticrt_codegen"]], "clone_verilator() (in module mlonmcu.setup.tasks.verilator)": [[44, "mlonmcu.setup.tasks.verilator.clone_verilator"]], "clone_vicuna() (in module mlonmcu.setup.tasks.vicuna)": [[44, "mlonmcu.setup.tasks.vicuna.clone_vicuna"]], "download_tflite_vizualize() (in module mlonmcu.setup.tasks.tflite)": [[44, "mlonmcu.setup.tasks.tflite.download_tflite_vizualize"]], "get_task_factory() (in module mlonmcu.setup.tasks)": [[44, "mlonmcu.setup.tasks.get_task_factory"]], "get_task_factory() (in module mlonmcu.setup.tasks.common)": [[44, "mlonmcu.setup.tasks.common.get_task_factory"]], "install_arm_gcc() (in module mlonmcu.setup.tasks.arm_gcc)": [[44, "mlonmcu.setup.tasks.arm_gcc.install_arm_gcc"]], "install_corev_ovpsim() (in module mlonmcu.setup.tasks.ovpsim)": [[44, "mlonmcu.setup.tasks.ovpsim.install_corev_ovpsim"]], "install_corstone300() (in module mlonmcu.setup.tasks.corstone300)": [[44, "mlonmcu.setup.tasks.corstone300.install_corstone300"]], "install_espidf() (in module mlonmcu.setup.tasks.espidf)": [[44, "mlonmcu.setup.tasks.espidf.install_espidf"]], "install_etiss() (in module mlonmcu.setup.tasks.etiss)": [[44, "mlonmcu.setup.tasks.etiss.install_etiss"]], "install_gvsoc() (in module mlonmcu.setup.tasks.pulp)": [[44, "mlonmcu.setup.tasks.pulp.install_gvsoc"]], "install_llvm() (in module mlonmcu.setup.tasks.llvm)": [[44, "mlonmcu.setup.tasks.llvm.install_llvm"]], "install_pulp_gcc() (in module mlonmcu.setup.tasks.pulp)": [[44, "mlonmcu.setup.tasks.pulp.install_pulp_gcc"]], "install_riscv_gcc() (in module mlonmcu.setup.tasks.riscv_gcc)": [[44, "mlonmcu.setup.tasks.riscv_gcc.install_riscv_gcc"]], "install_tflite_pack() (in module mlonmcu.setup.tasks.tf)": [[44, "mlonmcu.setup.tasks.tf.install_tflite_pack"]], "install_tvm() (in module mlonmcu.setup.tasks.tvm)": [[44, "mlonmcu.setup.tasks.tvm.install_tvm"]], "install_verilator() (in module mlonmcu.setup.tasks.verilator)": [[44, "mlonmcu.setup.tasks.verilator.install_verilator"]], "install_zephyr() (in module mlonmcu.setup.tasks.zephyr)": [[44, "mlonmcu.setup.tasks.zephyr.install_zephyr"]], "mlonmcu.setup.tasks": [[44, "module-mlonmcu.setup.tasks"]], "mlonmcu.setup.tasks.ara": [[44, "module-mlonmcu.setup.tasks.ara"]], "mlonmcu.setup.tasks.arm_gcc": [[44, "module-mlonmcu.setup.tasks.arm_gcc"]], "mlonmcu.setup.tasks.benchmarks": [[44, "module-mlonmcu.setup.tasks.benchmarks"]], "mlonmcu.setup.tasks.cmsisnn": [[44, "module-mlonmcu.setup.tasks.cmsisnn"]], "mlonmcu.setup.tasks.common": [[44, "module-mlonmcu.setup.tasks.common"]], "mlonmcu.setup.tasks.corev": [[44, "module-mlonmcu.setup.tasks.corev"]], "mlonmcu.setup.tasks.corstone300": [[44, "module-mlonmcu.setup.tasks.corstone300"]], "mlonmcu.setup.tasks.cv32e40p": [[44, "module-mlonmcu.setup.tasks.cv32e40p"]], "mlonmcu.setup.tasks.dtc": [[44, "module-mlonmcu.setup.tasks.dtc"]], "mlonmcu.setup.tasks.espidf": [[44, "module-mlonmcu.setup.tasks.espidf"]], "mlonmcu.setup.tasks.etiss": [[44, "module-mlonmcu.setup.tasks.etiss"]], "mlonmcu.setup.tasks.layergen": [[44, "module-mlonmcu.setup.tasks.layergen"]], "mlonmcu.setup.tasks.llvm": [[44, "module-mlonmcu.setup.tasks.llvm"]], "mlonmcu.setup.tasks.mlif": [[44, "module-mlonmcu.setup.tasks.mlif"]], "mlonmcu.setup.tasks.muriscvnn": [[44, "module-mlonmcu.setup.tasks.muriscvnn"]], "mlonmcu.setup.tasks.ovpsim": [[44, "module-mlonmcu.setup.tasks.ovpsim"]], "mlonmcu.setup.tasks.pulp": [[44, "module-mlonmcu.setup.tasks.pulp"]], "mlonmcu.setup.tasks.riscv_gcc": [[44, "module-mlonmcu.setup.tasks.riscv_gcc"]], "mlonmcu.setup.tasks.spike": [[44, "module-mlonmcu.setup.tasks.spike"]], "mlonmcu.setup.tasks.srecord": [[44, "module-mlonmcu.setup.tasks.srecord"]], "mlonmcu.setup.tasks.tf": [[44, "module-mlonmcu.setup.tasks.tf"]], "mlonmcu.setup.tasks.tflite": [[44, "module-mlonmcu.setup.tasks.tflite"]], "mlonmcu.setup.tasks.tflmc": [[44, "module-mlonmcu.setup.tasks.tflmc"]], "mlonmcu.setup.tasks.tvm": [[44, "module-mlonmcu.setup.tasks.tvm"]], "mlonmcu.setup.tasks.utvmcg": [[44, "module-mlonmcu.setup.tasks.utvmcg"]], "mlonmcu.setup.tasks.verilator": [[44, "module-mlonmcu.setup.tasks.verilator"]], "mlonmcu.setup.tasks.vicuna": [[44, "module-mlonmcu.setup.tasks.vicuna"]], "mlonmcu.setup.tasks.zephyr": [[44, "module-mlonmcu.setup.tasks.zephyr"]], "requires_patch() (in module mlonmcu.setup.tasks.tvm)": [[44, "mlonmcu.setup.tasks.tvm.requires_patch"]], "corstone300target (class in mlonmcu.target)": [[45, "mlonmcu.target.Corstone300Target"]], "defaults (mlonmcu.target.corstone300target attribute)": [[45, "mlonmcu.target.Corstone300Target.DEFAULTS"]], "defaults (mlonmcu.target.hostx86target attribute)": [[45, "mlonmcu.target.HostX86Target.DEFAULTS"]], "defaults (mlonmcu.target.ovpsimtarget attribute)": [[45, "mlonmcu.target.OVPSimTarget.DEFAULTS"]], "defaults (mlonmcu.target.riscvqemutarget attribute)": [[45, "mlonmcu.target.RiscvQemuTarget.DEFAULTS"]], "defaults (mlonmcu.target.spiketarget attribute)": [[45, "mlonmcu.target.SpikeTarget.DEFAULTS"]], "defaults (mlonmcu.target.target attribute)": [[45, "mlonmcu.target.Target.DEFAULTS"]], "defaults (mlonmcu.target.host_x86.hostx86target attribute)": [[45, "mlonmcu.target.host_x86.HostX86Target.DEFAULTS"]], "defaults (mlonmcu.target.target.target attribute)": [[45, "mlonmcu.target.target.Target.DEFAULTS"]], "etisspulpinotarget (class in mlonmcu.target)": [[45, "mlonmcu.target.EtissPulpinoTarget"]], "features (mlonmcu.target.corstone300target attribute)": [[45, "mlonmcu.target.Corstone300Target.FEATURES"]], "features (mlonmcu.target.hostx86target attribute)": [[45, "mlonmcu.target.HostX86Target.FEATURES"]], "features (mlonmcu.target.ovpsimtarget attribute)": [[45, "mlonmcu.target.OVPSimTarget.FEATURES"]], "features (mlonmcu.target.riscvqemutarget attribute)": [[45, "mlonmcu.target.RiscvQemuTarget.FEATURES"]], "features (mlonmcu.target.spiketarget attribute)": [[45, "mlonmcu.target.SpikeTarget.FEATURES"]], "features (mlonmcu.target.target attribute)": [[45, "mlonmcu.target.Target.FEATURES"]], "features (mlonmcu.target.host_x86.hostx86target attribute)": [[45, "mlonmcu.target.host_x86.HostX86Target.FEATURES"]], "features (mlonmcu.target.target.target attribute)": [[45, "mlonmcu.target.target.Target.FEATURES"]], "hostx86target (class in mlonmcu.target)": [[45, "mlonmcu.target.HostX86Target"]], "hostx86target (class in mlonmcu.target.host_x86)": [[45, "mlonmcu.target.host_x86.HostX86Target"]], "metrics (class in mlonmcu.target.metrics)": [[45, "mlonmcu.target.metrics.Metrics"]], "optional (mlonmcu.target.target attribute)": [[45, "mlonmcu.target.Target.OPTIONAL"]], "optional (mlonmcu.target.target.target attribute)": [[45, "mlonmcu.target.target.Target.OPTIONAL"]], "ovpsimtarget (class in mlonmcu.target)": [[45, "mlonmcu.target.OVPSimTarget"]], "required (mlonmcu.target.corstone300target attribute)": [[45, "mlonmcu.target.Corstone300Target.REQUIRED"]], "required (mlonmcu.target.etisspulpinotarget attribute)": [[45, "mlonmcu.target.EtissPulpinoTarget.REQUIRED"]], "required (mlonmcu.target.ovpsimtarget attribute)": [[45, "mlonmcu.target.OVPSimTarget.REQUIRED"]], "required (mlonmcu.target.riscvqemutarget attribute)": [[45, "mlonmcu.target.RiscvQemuTarget.REQUIRED"]], "required (mlonmcu.target.spiketarget attribute)": [[45, "mlonmcu.target.SpikeTarget.REQUIRED"]], "required (mlonmcu.target.target attribute)": [[45, "mlonmcu.target.Target.REQUIRED"]], "required (mlonmcu.target.target.target attribute)": [[45, "mlonmcu.target.target.Target.REQUIRED"]], "riscvqemutarget (class in mlonmcu.target)": [[45, "mlonmcu.target.RiscvQemuTarget"]], "spiketarget (class in mlonmcu.target)": [[45, "mlonmcu.target.SpikeTarget"]], "target (class in mlonmcu.target)": [[45, "mlonmcu.target.Target"]], "target (class in mlonmcu.target.target)": [[45, "mlonmcu.target.target.Target"]], "add() (mlonmcu.target.metrics.metrics method)": [[45, "mlonmcu.target.metrics.Metrics.add"]], "add_backend_config() (mlonmcu.target.target method)": [[45, "mlonmcu.target.Target.add_backend_config"]], "add_backend_config() (mlonmcu.target.target.target method)": [[45, "mlonmcu.target.target.Target.add_backend_config"]], "add_bench_metrics() (in module mlonmcu.target.bench)": [[45, "mlonmcu.target.bench.add_bench_metrics"]], "add_common_options() (in module mlonmcu.target.common)": [[45, "mlonmcu.target.common.add_common_options"]], "add_platform_config() (mlonmcu.target.target method)": [[45, "mlonmcu.target.Target.add_platform_config"]], "add_platform_config() (mlonmcu.target.target.target method)": [[45, "mlonmcu.target.target.Target.add_platform_config"]], "add_platform_defs() (mlonmcu.target.target method)": [[45, "mlonmcu.target.Target.add_platform_defs"]], "add_platform_defs() (mlonmcu.target.target.target method)": [[45, "mlonmcu.target.target.Target.add_platform_defs"]], "attr (mlonmcu.target.ovpsimtarget property)": [[45, "mlonmcu.target.OVPSimTarget.attr"]], "attr (mlonmcu.target.riscvqemutarget property)": [[45, "mlonmcu.target.RiscvQemuTarget.attr"]], "cli() (in module mlonmcu.target.common)": [[45, "mlonmcu.target.common.cli"]], "cmsis_dir (mlonmcu.target.corstone300target property)": [[45, "mlonmcu.target.Corstone300Target.cmsis_dir"]], "cmsisnn_dir (mlonmcu.target.corstone300target property)": [[45, "mlonmcu.target.Corstone300Target.cmsisnn_dir"]], "elen (mlonmcu.target.ovpsimtarget property)": [[45, "mlonmcu.target.OVPSimTarget.elen"]], "elen (mlonmcu.target.riscvqemutarget property)": [[45, "mlonmcu.target.RiscvQemuTarget.elen"]], "embedded_vext (mlonmcu.target.ovpsimtarget property)": [[45, "mlonmcu.target.OVPSimTarget.embedded_vext"]], "embedded_vext (mlonmcu.target.riscvqemutarget property)": [[45, "mlonmcu.target.RiscvQemuTarget.embedded_vext"]], "enable_dsp (mlonmcu.target.corstone300target property)": [[45, "mlonmcu.target.Corstone300Target.enable_dsp"]], "enable_ethosu (mlonmcu.target.corstone300target property)": [[45, "mlonmcu.target.Corstone300Target.enable_ethosu"]], "enable_fpu (mlonmcu.target.corstone300target property)": [[45, "mlonmcu.target.Corstone300Target.enable_fpu"]], "enable_mvei (mlonmcu.target.corstone300target property)": [[45, "mlonmcu.target.Corstone300Target.enable_mvei"]], "enable_pext (mlonmcu.target.ovpsimtarget property)": [[45, "mlonmcu.target.OVPSimTarget.enable_pext"]], "enable_vext (mlonmcu.target.ovpsimtarget property)": [[45, "mlonmcu.target.OVPSimTarget.enable_vext"]], "enable_vext (mlonmcu.target.riscvqemutarget property)": [[45, "mlonmcu.target.RiscvQemuTarget.enable_vext"]], "end_to_end_cycles (mlonmcu.target.ovpsimtarget property)": [[45, "mlonmcu.target.OVPSimTarget.end_to_end_cycles"]], "ethosu_num_macs (mlonmcu.target.corstone300target property)": [[45, "mlonmcu.target.Corstone300Target.ethosu_num_macs"]], "ethosu_platform_dir (mlonmcu.target.corstone300target property)": [[45, "mlonmcu.target.Corstone300Target.ethosu_platform_dir"]], "exec() (mlonmcu.target.corstone300target method)": [[45, "mlonmcu.target.Corstone300Target.exec"]], "exec() (mlonmcu.target.hostx86target method)": [[45, "mlonmcu.target.HostX86Target.exec"]], "exec() (mlonmcu.target.ovpsimtarget method)": [[45, "mlonmcu.target.OVPSimTarget.exec"]], "exec() (mlonmcu.target.riscvqemutarget method)": [[45, "mlonmcu.target.RiscvQemuTarget.exec"]], "exec() (mlonmcu.target.spiketarget method)": [[45, "mlonmcu.target.SpikeTarget.exec"]], "exec() (mlonmcu.target.target method)": [[45, "mlonmcu.target.Target.exec"]], "exec() (mlonmcu.target.host_x86.hostx86target method)": [[45, "mlonmcu.target.host_x86.HostX86Target.exec"]], "exec() (mlonmcu.target.target.target method)": [[45, "mlonmcu.target.target.Target.exec"]], "execute() (in module mlonmcu.target.common)": [[45, "mlonmcu.target.common.execute"]], "export_artifacts() (mlonmcu.target.target method)": [[45, "mlonmcu.target.Target.export_artifacts"]], "export_artifacts() (mlonmcu.target.target.target method)": [[45, "mlonmcu.target.target.Target.export_artifacts"]], "extensions (mlonmcu.target.ovpsimtarget property)": [[45, "mlonmcu.target.OVPSimTarget.extensions"]], "extensions (mlonmcu.target.riscvqemutarget property)": [[45, "mlonmcu.target.RiscvQemuTarget.extensions"]], "extensions (mlonmcu.target.spiketarget property)": [[45, "mlonmcu.target.SpikeTarget.extensions"]], "extra_args (mlonmcu.target.corstone300target property)": [[45, "mlonmcu.target.Corstone300Target.extra_args"]], "from_csv() (mlonmcu.target.metrics.metrics static method)": [[45, "mlonmcu.target.metrics.Metrics.from_csv"]], "fvp_exe (mlonmcu.target.corstone300target property)": [[45, "mlonmcu.target.Corstone300Target.fvp_exe"]], "gcc_prefix (mlonmcu.target.corstone300target property)": [[45, "mlonmcu.target.Corstone300Target.gcc_prefix"]], "gdbserver_attach (mlonmcu.target.hostx86target property)": [[45, "mlonmcu.target.HostX86Target.gdbserver_attach"]], "gdbserver_attach (mlonmcu.target.ovpsimtarget property)": [[45, "mlonmcu.target.OVPSimTarget.gdbserver_attach"]], "gdbserver_attach (mlonmcu.target.host_x86.hostx86target property)": [[45, "mlonmcu.target.host_x86.HostX86Target.gdbserver_attach"]], "gdbserver_enable (mlonmcu.target.hostx86target property)": [[45, "mlonmcu.target.HostX86Target.gdbserver_enable"]], "gdbserver_enable (mlonmcu.target.ovpsimtarget property)": [[45, "mlonmcu.target.OVPSimTarget.gdbserver_enable"]], "gdbserver_enable (mlonmcu.target.host_x86.hostx86target property)": [[45, "mlonmcu.target.host_x86.HostX86Target.gdbserver_enable"]], "gdbserver_port (mlonmcu.target.hostx86target property)": [[45, "mlonmcu.target.HostX86Target.gdbserver_port"]], "gdbserver_port (mlonmcu.target.ovpsimtarget property)": [[45, "mlonmcu.target.OVPSimTarget.gdbserver_port"]], "gdbserver_port (mlonmcu.target.host_x86.hostx86target property)": [[45, "mlonmcu.target.host_x86.HostX86Target.gdbserver_port"]], "generate() (mlonmcu.target.target method)": [[45, "mlonmcu.target.Target.generate"]], "generate() (mlonmcu.target.target.target method)": [[45, "mlonmcu.target.target.Target.generate"]], "generate_artifacts() (mlonmcu.target.target method)": [[45, "mlonmcu.target.Target.generate_artifacts"]], "generate_artifacts() (mlonmcu.target.target.target method)": [[45, "mlonmcu.target.target.Target.generate_artifacts"]], "get() (mlonmcu.target.metrics.metrics method)": [[45, "mlonmcu.target.metrics.Metrics.get"]], "get_arch() (mlonmcu.target.corstone300target method)": [[45, "mlonmcu.target.Corstone300Target.get_arch"]], "get_arch() (mlonmcu.target.hostx86target method)": [[45, "mlonmcu.target.HostX86Target.get_arch"]], "get_arch() (mlonmcu.target.target method)": [[45, "mlonmcu.target.Target.get_arch"]], "get_arch() (mlonmcu.target.host_x86.hostx86target method)": [[45, "mlonmcu.target.host_x86.HostX86Target.get_arch"]], "get_arch() (mlonmcu.target.target.target method)": [[45, "mlonmcu.target.target.Target.get_arch"]], "get_backend_config() (mlonmcu.target.corstone300target method)": [[45, "mlonmcu.target.Corstone300Target.get_backend_config"]], "get_backend_config() (mlonmcu.target.ovpsimtarget method)": [[45, "mlonmcu.target.OVPSimTarget.get_backend_config"]], "get_backend_config() (mlonmcu.target.spiketarget method)": [[45, "mlonmcu.target.SpikeTarget.get_backend_config"]], "get_backend_config() (mlonmcu.target.target method)": [[45, "mlonmcu.target.Target.get_backend_config"]], "get_backend_config() (mlonmcu.target.target.target method)": [[45, "mlonmcu.target.target.Target.get_backend_config"]], "get_cpu_str() (mlonmcu.target.riscvqemutarget method)": [[45, "mlonmcu.target.RiscvQemuTarget.get_cpu_str"]], "get_data() (mlonmcu.target.metrics.metrics method)": [[45, "mlonmcu.target.metrics.Metrics.get_data"]], "get_default_fvp_args() (mlonmcu.target.corstone300target method)": [[45, "mlonmcu.target.Corstone300Target.get_default_fvp_args"]], "get_default_ovpsim_args() (mlonmcu.target.ovpsimtarget method)": [[45, "mlonmcu.target.OVPSimTarget.get_default_ovpsim_args"]], "get_ethosu_fvp_args() (mlonmcu.target.corstone300target method)": [[45, "mlonmcu.target.Corstone300Target.get_ethosu_fvp_args"]], "get_hardware_details() (mlonmcu.target.target method)": [[45, "mlonmcu.target.Target.get_hardware_details"]], "get_hardware_details() (mlonmcu.target.target.target method)": [[45, "mlonmcu.target.target.Target.get_hardware_details"]], "get_ini_bool_config() (mlonmcu.target.etisspulpinotarget method)": [[45, "mlonmcu.target.EtissPulpinoTarget.get_ini_bool_config"]], "get_metrics() (mlonmcu.target.corstone300target method)": [[45, "mlonmcu.target.Corstone300Target.get_metrics"]], "get_metrics() (mlonmcu.target.ovpsimtarget method)": [[45, "mlonmcu.target.OVPSimTarget.get_metrics"]], "get_metrics() (mlonmcu.target.riscvqemutarget method)": [[45, "mlonmcu.target.RiscvQemuTarget.get_metrics"]], "get_metrics() (mlonmcu.target.spiketarget method)": [[45, "mlonmcu.target.SpikeTarget.get_metrics"]], "get_metrics() (mlonmcu.target.target method)": [[45, "mlonmcu.target.Target.get_metrics"]], "get_metrics() (mlonmcu.target.target.target method)": [[45, "mlonmcu.target.target.Target.get_metrics"]], "get_platform_config() (mlonmcu.target.target method)": [[45, "mlonmcu.target.Target.get_platform_config"]], "get_platform_config() (mlonmcu.target.target.target method)": [[45, "mlonmcu.target.target.Target.get_platform_config"]], "get_platform_defs() (mlonmcu.target.corstone300target method)": [[45, "mlonmcu.target.Corstone300Target.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.etisspulpinotarget method)": [[45, "mlonmcu.target.EtissPulpinoTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.ovpsimtarget method)": [[45, "mlonmcu.target.OVPSimTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.riscvqemutarget method)": [[45, "mlonmcu.target.RiscvQemuTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.spiketarget method)": [[45, "mlonmcu.target.SpikeTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.target method)": [[45, "mlonmcu.target.Target.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.target.target method)": [[45, "mlonmcu.target.target.Target.get_platform_defs"]], "get_qemu_args() (mlonmcu.target.riscvqemutarget method)": [[45, "mlonmcu.target.RiscvQemuTarget.get_qemu_args"]], "get_results() (in module mlonmcu.target.elf)": [[45, "mlonmcu.target.elf.get_results"]], "get_target_system() (mlonmcu.target.riscvqemutarget method)": [[45, "mlonmcu.target.RiscvQemuTarget.get_target_system"]], "get_target_system() (mlonmcu.target.target method)": [[45, "mlonmcu.target.Target.get_target_system"]], "get_target_system() (mlonmcu.target.target.target method)": [[45, "mlonmcu.target.target.Target.get_target_system"]], "get_targets() (in module mlonmcu.target)": [[45, "mlonmcu.target.get_targets"]], "has() (mlonmcu.target.metrics.metrics method)": [[45, "mlonmcu.target.metrics.Metrics.has"]], "init_target_features() (in module mlonmcu.target.common)": [[45, "mlonmcu.target.common.init_target_features"]], "inspect() (mlonmcu.target.target method)": [[45, "mlonmcu.target.Target.inspect"]], "inspect() (mlonmcu.target.target.target method)": [[45, "mlonmcu.target.target.Target.inspect"]], "isa (mlonmcu.target.spiketarget property)": [[45, "mlonmcu.target.SpikeTarget.isa"]], "logger (in module mlonmcu.target.elf)": [[45, "mlonmcu.target.elf.logger"]], "main() (in module mlonmcu.target.elf)": [[45, "mlonmcu.target.elf.main"]], "mlonmcu.target": [[45, "module-mlonmcu.target"]], "mlonmcu.target.bench": [[45, "module-mlonmcu.target.bench"]], "mlonmcu.target.common": [[45, "module-mlonmcu.target.common"]], "mlonmcu.target.elf": [[45, "module-mlonmcu.target.elf"]], "mlonmcu.target.host_x86": [[45, "module-mlonmcu.target.host_x86"]], "mlonmcu.target.metrics": [[45, "module-mlonmcu.target.metrics"]], "mlonmcu.target.target": [[45, "module-mlonmcu.target.target"]], "model (mlonmcu.target.corstone300target property)": [[45, "mlonmcu.target.Corstone300Target.model"]], "ovpsim_exe (mlonmcu.target.ovpsimtarget property)": [[45, "mlonmcu.target.OVPSimTarget.ovpsim_exe"]], "parseelf() (in module mlonmcu.target.elf)": [[45, "mlonmcu.target.elf.parseElf"]], "parse_bench_results() (in module mlonmcu.target.bench)": [[45, "mlonmcu.target.bench.parse_bench_results"]], "parse_cmdline() (in module mlonmcu.target.elf)": [[45, "mlonmcu.target.elf.parse_cmdline"]], "parse_exit() (mlonmcu.target.target method)": [[45, "mlonmcu.target.Target.parse_exit"]], "parse_exit() (mlonmcu.target.target.target method)": [[45, "mlonmcu.target.target.Target.parse_exit"]], "parse_stdout() (mlonmcu.target.corstone300target method)": [[45, "mlonmcu.target.Corstone300Target.parse_stdout"]], "parse_stdout() (mlonmcu.target.ovpsimtarget method)": [[45, "mlonmcu.target.OVPSimTarget.parse_stdout"]], "parse_stdout() (mlonmcu.target.riscvqemutarget method)": [[45, "mlonmcu.target.RiscvQemuTarget.parse_stdout"]], "parse_stdout() (mlonmcu.target.spiketarget method)": [[45, "mlonmcu.target.SpikeTarget.parse_stdout"]], "pext_spec (mlonmcu.target.ovpsimtarget property)": [[45, "mlonmcu.target.OVPSimTarget.pext_spec"]], "printsz() (in module mlonmcu.target.elf)": [[45, "mlonmcu.target.elf.printSz"]], "print_outputs (mlonmcu.target.target property)": [[45, "mlonmcu.target.Target.print_outputs"]], "print_outputs (mlonmcu.target.target.target property)": [[45, "mlonmcu.target.target.Target.print_outputs"]], "print_results() (in module mlonmcu.target.elf)": [[45, "mlonmcu.target.elf.print_results"]], "process_features() (mlonmcu.target.target method)": [[45, "mlonmcu.target.Target.process_features"]], "process_features() (mlonmcu.target.target.target method)": [[45, "mlonmcu.target.target.Target.process_features"]], "reconfigure() (mlonmcu.target.target method)": [[45, "mlonmcu.target.Target.reconfigure"]], "reconfigure() (mlonmcu.target.target.target method)": [[45, "mlonmcu.target.target.Target.reconfigure"]], "register_target() (in module mlonmcu.target)": [[45, "mlonmcu.target.register_target"]], "repeat (mlonmcu.target.target property)": [[45, "mlonmcu.target.Target.repeat"]], "repeat (mlonmcu.target.target.target property)": [[45, "mlonmcu.target.target.Target.repeat"]], "riscv32_qemu_exe (mlonmcu.target.riscvqemutarget property)": [[45, "mlonmcu.target.RiscvQemuTarget.riscv32_qemu_exe"]], "spike_exe (mlonmcu.target.spiketarget property)": [[45, "mlonmcu.target.SpikeTarget.spike_exe"]], "spike_pk (mlonmcu.target.spiketarget property)": [[45, "mlonmcu.target.SpikeTarget.spike_pk"]], "spikepk_extra_args (mlonmcu.target.spiketarget property)": [[45, "mlonmcu.target.SpikeTarget.spikepk_extra_args"]], "timeout_sec (mlonmcu.target.corstone300target property)": [[45, "mlonmcu.target.Corstone300Target.timeout_sec"]], "to_csv() (mlonmcu.target.metrics.metrics method)": [[45, "mlonmcu.target.metrics.Metrics.to_csv"]], "variant (mlonmcu.target.ovpsimtarget property)": [[45, "mlonmcu.target.OVPSimTarget.variant"]], "vext_spec (mlonmcu.target.ovpsimtarget property)": [[45, "mlonmcu.target.OVPSimTarget.vext_spec"]], "vext_spec (mlonmcu.target.riscvqemutarget property)": [[45, "mlonmcu.target.RiscvQemuTarget.vext_spec"]], "vlen (mlonmcu.target.ovpsimtarget property)": [[45, "mlonmcu.target.OVPSimTarget.vlen"]], "vlen (mlonmcu.target.riscvqemutarget property)": [[45, "mlonmcu.target.RiscvQemuTarget.vlen"]], "write_csv() (in module mlonmcu.target.elf)": [[45, "mlonmcu.target.elf.write_csv"]], "corstone300target (class in mlonmcu.target.arm)": [[46, "mlonmcu.target.arm.Corstone300Target"]], "corstone300target (class in mlonmcu.target.arm.corstone300)": [[46, "mlonmcu.target.arm.corstone300.Corstone300Target"]], "defaults (mlonmcu.target.arm.corstone300target attribute)": [[46, "mlonmcu.target.arm.Corstone300Target.DEFAULTS"]], "defaults (mlonmcu.target.arm.corstone300.corstone300target attribute)": [[46, "mlonmcu.target.arm.corstone300.Corstone300Target.DEFAULTS"]], "features (mlonmcu.target.arm.corstone300target attribute)": [[46, "mlonmcu.target.arm.Corstone300Target.FEATURES"]], "features (mlonmcu.target.arm.corstone300.corstone300target attribute)": [[46, "mlonmcu.target.arm.corstone300.Corstone300Target.FEATURES"]], "required (mlonmcu.target.arm.corstone300target attribute)": [[46, "mlonmcu.target.arm.Corstone300Target.REQUIRED"]], "required (mlonmcu.target.arm.corstone300.corstone300target attribute)": [[46, "mlonmcu.target.arm.corstone300.Corstone300Target.REQUIRED"]], "cmsis_dir (mlonmcu.target.arm.corstone300target property)": [[46, "mlonmcu.target.arm.Corstone300Target.cmsis_dir"]], "cmsis_dir (mlonmcu.target.arm.corstone300.corstone300target property)": [[46, "mlonmcu.target.arm.corstone300.Corstone300Target.cmsis_dir"]], "cmsisnn_dir (mlonmcu.target.arm.corstone300target property)": [[46, "mlonmcu.target.arm.Corstone300Target.cmsisnn_dir"]], "cmsisnn_dir (mlonmcu.target.arm.corstone300.corstone300target property)": [[46, "mlonmcu.target.arm.corstone300.Corstone300Target.cmsisnn_dir"]], "enable_dsp (mlonmcu.target.arm.corstone300target property)": [[46, "mlonmcu.target.arm.Corstone300Target.enable_dsp"]], "enable_dsp (mlonmcu.target.arm.corstone300.corstone300target property)": [[46, "mlonmcu.target.arm.corstone300.Corstone300Target.enable_dsp"]], "enable_ethosu (mlonmcu.target.arm.corstone300target property)": [[46, "mlonmcu.target.arm.Corstone300Target.enable_ethosu"]], "enable_ethosu (mlonmcu.target.arm.corstone300.corstone300target property)": [[46, "mlonmcu.target.arm.corstone300.Corstone300Target.enable_ethosu"]], "enable_fpu (mlonmcu.target.arm.corstone300target property)": [[46, "mlonmcu.target.arm.Corstone300Target.enable_fpu"]], "enable_fpu (mlonmcu.target.arm.corstone300.corstone300target property)": [[46, "mlonmcu.target.arm.corstone300.Corstone300Target.enable_fpu"]], "enable_mvei (mlonmcu.target.arm.corstone300target property)": [[46, "mlonmcu.target.arm.Corstone300Target.enable_mvei"]], "enable_mvei (mlonmcu.target.arm.corstone300.corstone300target property)": [[46, "mlonmcu.target.arm.corstone300.Corstone300Target.enable_mvei"]], "ethosu_num_macs (mlonmcu.target.arm.corstone300target property)": [[46, "mlonmcu.target.arm.Corstone300Target.ethosu_num_macs"]], "ethosu_num_macs (mlonmcu.target.arm.corstone300.corstone300target property)": [[46, "mlonmcu.target.arm.corstone300.Corstone300Target.ethosu_num_macs"]], "ethosu_platform_dir (mlonmcu.target.arm.corstone300target property)": [[46, "mlonmcu.target.arm.Corstone300Target.ethosu_platform_dir"]], "ethosu_platform_dir (mlonmcu.target.arm.corstone300.corstone300target property)": [[46, "mlonmcu.target.arm.corstone300.Corstone300Target.ethosu_platform_dir"]], "exec() (mlonmcu.target.arm.corstone300target method)": [[46, "mlonmcu.target.arm.Corstone300Target.exec"]], "exec() (mlonmcu.target.arm.corstone300.corstone300target method)": [[46, "mlonmcu.target.arm.corstone300.Corstone300Target.exec"]], "extra_args (mlonmcu.target.arm.corstone300target property)": [[46, "mlonmcu.target.arm.Corstone300Target.extra_args"]], "extra_args (mlonmcu.target.arm.corstone300.corstone300target property)": [[46, "mlonmcu.target.arm.corstone300.Corstone300Target.extra_args"]], "fvp_exe (mlonmcu.target.arm.corstone300target property)": [[46, "mlonmcu.target.arm.Corstone300Target.fvp_exe"]], "fvp_exe (mlonmcu.target.arm.corstone300.corstone300target property)": [[46, "mlonmcu.target.arm.corstone300.Corstone300Target.fvp_exe"]], "gcc_prefix (mlonmcu.target.arm.corstone300target property)": [[46, "mlonmcu.target.arm.Corstone300Target.gcc_prefix"]], "gcc_prefix (mlonmcu.target.arm.corstone300.corstone300target property)": [[46, "mlonmcu.target.arm.corstone300.Corstone300Target.gcc_prefix"]], "get_arch() (mlonmcu.target.arm.corstone300target method)": [[46, "mlonmcu.target.arm.Corstone300Target.get_arch"]], "get_arch() (mlonmcu.target.arm.corstone300.corstone300target method)": [[46, "mlonmcu.target.arm.corstone300.Corstone300Target.get_arch"]], "get_backend_config() (mlonmcu.target.arm.corstone300target method)": [[46, "mlonmcu.target.arm.Corstone300Target.get_backend_config"]], "get_backend_config() (mlonmcu.target.arm.corstone300.corstone300target method)": [[46, "mlonmcu.target.arm.corstone300.Corstone300Target.get_backend_config"]], "get_default_fvp_args() (mlonmcu.target.arm.corstone300target method)": [[46, "mlonmcu.target.arm.Corstone300Target.get_default_fvp_args"]], "get_default_fvp_args() (mlonmcu.target.arm.corstone300.corstone300target method)": [[46, "mlonmcu.target.arm.corstone300.Corstone300Target.get_default_fvp_args"]], "get_ethosu_fvp_args() (mlonmcu.target.arm.corstone300target method)": [[46, "mlonmcu.target.arm.Corstone300Target.get_ethosu_fvp_args"]], "get_ethosu_fvp_args() (mlonmcu.target.arm.corstone300.corstone300target method)": [[46, "mlonmcu.target.arm.corstone300.Corstone300Target.get_ethosu_fvp_args"]], "get_metrics() (mlonmcu.target.arm.corstone300target method)": [[46, "mlonmcu.target.arm.Corstone300Target.get_metrics"]], "get_metrics() (mlonmcu.target.arm.corstone300.corstone300target method)": [[46, "mlonmcu.target.arm.corstone300.Corstone300Target.get_metrics"]], "get_platform_defs() (mlonmcu.target.arm.corstone300target method)": [[46, "mlonmcu.target.arm.Corstone300Target.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.arm.corstone300.corstone300target method)": [[46, "mlonmcu.target.arm.corstone300.Corstone300Target.get_platform_defs"]], "mlonmcu.target.arm": [[46, "module-mlonmcu.target.arm"]], "mlonmcu.target.arm.corstone300": [[46, "module-mlonmcu.target.arm.corstone300"]], "mlonmcu.target.arm.util": [[46, "module-mlonmcu.target.arm.util"]], "model (mlonmcu.target.arm.corstone300target property)": [[46, "mlonmcu.target.arm.Corstone300Target.model"]], "model (mlonmcu.target.arm.corstone300.corstone300target property)": [[46, "mlonmcu.target.arm.corstone300.Corstone300Target.model"]], "parse_stdout() (mlonmcu.target.arm.corstone300target method)": [[46, "mlonmcu.target.arm.Corstone300Target.parse_stdout"]], "parse_stdout() (mlonmcu.target.arm.corstone300.corstone300target method)": [[46, "mlonmcu.target.arm.corstone300.Corstone300Target.parse_stdout"]], "resolve_cpu_features() (in module mlonmcu.target.arm.util)": [[46, "mlonmcu.target.arm.util.resolve_cpu_features"]], "timeout_sec (mlonmcu.target.arm.corstone300target property)": [[46, "mlonmcu.target.arm.Corstone300Target.timeout_sec"]], "timeout_sec (mlonmcu.target.arm.corstone300.corstone300target property)": [[46, "mlonmcu.target.arm.corstone300.Corstone300Target.timeout_sec"]], "arartltarget (class in mlonmcu.target.riscv)": [[47, "mlonmcu.target.riscv.AraRtlTarget"]], "arartltarget (class in mlonmcu.target.riscv.ara_rtl)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget"]], "aratarget (class in mlonmcu.target.riscv)": [[47, "mlonmcu.target.riscv.AraTarget"]], "aratarget (class in mlonmcu.target.riscv.ara)": [[47, "mlonmcu.target.riscv.ara.AraTarget"]], "corevovpsimtarget (class in mlonmcu.target.riscv)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget"]], "corevovpsimtarget (class in mlonmcu.target.riscv.corev_ovpsim)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget"]], "cv32e40ptarget (class in mlonmcu.target.riscv)": [[47, "mlonmcu.target.riscv.CV32E40PTarget"]], "cv32e40ptarget (class in mlonmcu.target.riscv.cv32e40p)": [[47, "mlonmcu.target.riscv.cv32e40p.CV32E40PTarget"]], "defaults (mlonmcu.target.riscv.arartltarget attribute)": [[47, "mlonmcu.target.riscv.AraRtlTarget.DEFAULTS"]], "defaults (mlonmcu.target.riscv.aratarget attribute)": [[47, "mlonmcu.target.riscv.AraTarget.DEFAULTS"]], "defaults (mlonmcu.target.riscv.corevovpsimtarget attribute)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget.DEFAULTS"]], "defaults (mlonmcu.target.riscv.cv32e40ptarget attribute)": [[47, "mlonmcu.target.riscv.CV32E40PTarget.DEFAULTS"]], "defaults (mlonmcu.target.riscv.etisstarget attribute)": [[47, "mlonmcu.target.riscv.EtissTarget.DEFAULTS"]], "defaults (mlonmcu.target.riscv.gvsocpulptarget attribute)": [[47, "mlonmcu.target.riscv.GvsocPulpTarget.DEFAULTS"]], "defaults (mlonmcu.target.riscv.ovpsimtarget attribute)": [[47, "mlonmcu.target.riscv.OVPSimTarget.DEFAULTS"]], "defaults (mlonmcu.target.riscv.riscvqemutarget attribute)": [[47, "mlonmcu.target.riscv.RiscvQemuTarget.DEFAULTS"]], "defaults (mlonmcu.target.riscv.spiketarget attribute)": [[47, "mlonmcu.target.riscv.SpikeTarget.DEFAULTS"]], "defaults (mlonmcu.target.riscv.vicunatarget attribute)": [[47, "mlonmcu.target.riscv.VicunaTarget.DEFAULTS"]], "defaults (mlonmcu.target.riscv.ara.aratarget attribute)": [[47, "mlonmcu.target.riscv.ara.AraTarget.DEFAULTS"]], "defaults (mlonmcu.target.riscv.ara_rtl.arartltarget attribute)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget.DEFAULTS"]], "defaults (mlonmcu.target.riscv.corev_ovpsim.corevovpsimtarget attribute)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget.DEFAULTS"]], "defaults (mlonmcu.target.riscv.cv32e40p.cv32e40ptarget attribute)": [[47, "mlonmcu.target.riscv.cv32e40p.CV32E40PTarget.DEFAULTS"]], "defaults (mlonmcu.target.riscv.etiss.etisstarget attribute)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.DEFAULTS"]], "defaults (mlonmcu.target.riscv.gvsoc_pulp.gvsocpulptarget attribute)": [[47, "mlonmcu.target.riscv.gvsoc_pulp.GvsocPulpTarget.DEFAULTS"]], "defaults (mlonmcu.target.riscv.ovpsim.ovpsimtarget attribute)": [[47, "mlonmcu.target.riscv.ovpsim.OVPSimTarget.DEFAULTS"]], "defaults (mlonmcu.target.riscv.riscv.riscvtarget attribute)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.DEFAULTS"]], "defaults (mlonmcu.target.riscv.riscv_bext_target.rvbtarget attribute)": [[47, "mlonmcu.target.riscv.riscv_bext_target.RVBTarget.DEFAULTS"]], "defaults (mlonmcu.target.riscv.riscv_pext_target.rvptarget attribute)": [[47, "mlonmcu.target.riscv.riscv_pext_target.RVPTarget.DEFAULTS"]], "defaults (mlonmcu.target.riscv.riscv_qemu.riscvqemutarget attribute)": [[47, "mlonmcu.target.riscv.riscv_qemu.RiscvQemuTarget.DEFAULTS"]], "defaults (mlonmcu.target.riscv.riscv_vext_target.rvvtarget attribute)": [[47, "mlonmcu.target.riscv.riscv_vext_target.RVVTarget.DEFAULTS"]], "defaults (mlonmcu.target.riscv.spike.spiketarget attribute)": [[47, "mlonmcu.target.riscv.spike.SpikeTarget.DEFAULTS"]], "defaults (mlonmcu.target.riscv.vicuna.vicunatarget attribute)": [[47, "mlonmcu.target.riscv.vicuna.VicunaTarget.DEFAULTS"]], "etisspulpinotarget (class in mlonmcu.target.riscv)": [[47, "mlonmcu.target.riscv.EtissPulpinoTarget"]], "etisspulpinotarget (class in mlonmcu.target.riscv.etiss_pulpino)": [[47, "mlonmcu.target.riscv.etiss_pulpino.EtissPulpinoTarget"]], "etisstarget (class in mlonmcu.target.riscv)": [[47, "mlonmcu.target.riscv.EtissTarget"]], "etisstarget (class in mlonmcu.target.riscv.etiss)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget"]], "features (mlonmcu.target.riscv.arartltarget attribute)": [[47, "mlonmcu.target.riscv.AraRtlTarget.FEATURES"]], "features (mlonmcu.target.riscv.aratarget attribute)": [[47, "mlonmcu.target.riscv.AraTarget.FEATURES"]], "features (mlonmcu.target.riscv.corevovpsimtarget attribute)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget.FEATURES"]], "features (mlonmcu.target.riscv.cv32e40ptarget attribute)": [[47, "mlonmcu.target.riscv.CV32E40PTarget.FEATURES"]], "features (mlonmcu.target.riscv.etisstarget attribute)": [[47, "mlonmcu.target.riscv.EtissTarget.FEATURES"]], "features (mlonmcu.target.riscv.gvsocpulptarget attribute)": [[47, "mlonmcu.target.riscv.GvsocPulpTarget.FEATURES"]], "features (mlonmcu.target.riscv.ovpsimtarget attribute)": [[47, "mlonmcu.target.riscv.OVPSimTarget.FEATURES"]], "features (mlonmcu.target.riscv.riscvqemutarget attribute)": [[47, "mlonmcu.target.riscv.RiscvQemuTarget.FEATURES"]], "features (mlonmcu.target.riscv.spiketarget attribute)": [[47, "mlonmcu.target.riscv.SpikeTarget.FEATURES"]], "features (mlonmcu.target.riscv.vicunatarget attribute)": [[47, "mlonmcu.target.riscv.VicunaTarget.FEATURES"]], "features (mlonmcu.target.riscv.ara.aratarget attribute)": [[47, "mlonmcu.target.riscv.ara.AraTarget.FEATURES"]], "features (mlonmcu.target.riscv.ara_rtl.arartltarget attribute)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget.FEATURES"]], "features (mlonmcu.target.riscv.corev_ovpsim.corevovpsimtarget attribute)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget.FEATURES"]], "features (mlonmcu.target.riscv.cv32e40p.cv32e40ptarget attribute)": [[47, "mlonmcu.target.riscv.cv32e40p.CV32E40PTarget.FEATURES"]], "features (mlonmcu.target.riscv.etiss.etisstarget attribute)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.FEATURES"]], "features (mlonmcu.target.riscv.gvsoc_pulp.gvsocpulptarget attribute)": [[47, "mlonmcu.target.riscv.gvsoc_pulp.GvsocPulpTarget.FEATURES"]], "features (mlonmcu.target.riscv.ovpsim.ovpsimtarget attribute)": [[47, "mlonmcu.target.riscv.ovpsim.OVPSimTarget.FEATURES"]], "features (mlonmcu.target.riscv.riscv.riscvtarget attribute)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.FEATURES"]], "features (mlonmcu.target.riscv.riscv_bext_target.rvbtarget attribute)": [[47, "mlonmcu.target.riscv.riscv_bext_target.RVBTarget.FEATURES"]], "features (mlonmcu.target.riscv.riscv_pext_target.rvptarget attribute)": [[47, "mlonmcu.target.riscv.riscv_pext_target.RVPTarget.FEATURES"]], "features (mlonmcu.target.riscv.riscv_qemu.riscvqemutarget attribute)": [[47, "mlonmcu.target.riscv.riscv_qemu.RiscvQemuTarget.FEATURES"]], "features (mlonmcu.target.riscv.riscv_vext_target.rvvtarget attribute)": [[47, "mlonmcu.target.riscv.riscv_vext_target.RVVTarget.FEATURES"]], "features (mlonmcu.target.riscv.spike.spiketarget attribute)": [[47, "mlonmcu.target.riscv.spike.SpikeTarget.FEATURES"]], "features (mlonmcu.target.riscv.vicuna.vicunatarget attribute)": [[47, "mlonmcu.target.riscv.vicuna.VicunaTarget.FEATURES"]], "gvsocpulptarget (class in mlonmcu.target.riscv)": [[47, "mlonmcu.target.riscv.GvsocPulpTarget"]], "gvsocpulptarget (class in mlonmcu.target.riscv.gvsoc_pulp)": [[47, "mlonmcu.target.riscv.gvsoc_pulp.GvsocPulpTarget"]], "optional (mlonmcu.target.riscv.arartltarget attribute)": [[47, "mlonmcu.target.riscv.AraRtlTarget.OPTIONAL"]], "optional (mlonmcu.target.riscv.aratarget attribute)": [[47, "mlonmcu.target.riscv.AraTarget.OPTIONAL"]], "optional (mlonmcu.target.riscv.ara.aratarget attribute)": [[47, "mlonmcu.target.riscv.ara.AraTarget.OPTIONAL"]], "optional (mlonmcu.target.riscv.ara_rtl.arartltarget attribute)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget.OPTIONAL"]], "optional (mlonmcu.target.riscv.riscv.riscvtarget attribute)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.OPTIONAL"]], "ovpsimtarget (class in mlonmcu.target.riscv)": [[47, "mlonmcu.target.riscv.OVPSimTarget"]], "ovpsimtarget (class in mlonmcu.target.riscv.ovpsim)": [[47, "mlonmcu.target.riscv.ovpsim.OVPSimTarget"]], "pupl_gcc_toolchain_required (mlonmcu.target.riscv.riscv.riscvtarget attribute)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.PUPL_GCC_TOOLCHAIN_REQUIRED"]], "required (mlonmcu.target.riscv.arartltarget attribute)": [[47, "mlonmcu.target.riscv.AraRtlTarget.REQUIRED"]], "required (mlonmcu.target.riscv.aratarget attribute)": [[47, "mlonmcu.target.riscv.AraTarget.REQUIRED"]], "required (mlonmcu.target.riscv.corevovpsimtarget attribute)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget.REQUIRED"]], "required (mlonmcu.target.riscv.cv32e40ptarget attribute)": [[47, "mlonmcu.target.riscv.CV32E40PTarget.REQUIRED"]], "required (mlonmcu.target.riscv.etisspulpinotarget attribute)": [[47, "mlonmcu.target.riscv.EtissPulpinoTarget.REQUIRED"]], "required (mlonmcu.target.riscv.etisstarget attribute)": [[47, "mlonmcu.target.riscv.EtissTarget.REQUIRED"]], "required (mlonmcu.target.riscv.gvsocpulptarget attribute)": [[47, "mlonmcu.target.riscv.GvsocPulpTarget.REQUIRED"]], "required (mlonmcu.target.riscv.ovpsimtarget attribute)": [[47, "mlonmcu.target.riscv.OVPSimTarget.REQUIRED"]], "required (mlonmcu.target.riscv.riscvqemutarget attribute)": [[47, "mlonmcu.target.riscv.RiscvQemuTarget.REQUIRED"]], "required (mlonmcu.target.riscv.spiketarget attribute)": [[47, "mlonmcu.target.riscv.SpikeTarget.REQUIRED"]], "required (mlonmcu.target.riscv.vicunatarget attribute)": [[47, "mlonmcu.target.riscv.VicunaTarget.REQUIRED"]], "required (mlonmcu.target.riscv.ara.aratarget attribute)": [[47, "mlonmcu.target.riscv.ara.AraTarget.REQUIRED"]], "required (mlonmcu.target.riscv.ara_rtl.arartltarget attribute)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget.REQUIRED"]], "required (mlonmcu.target.riscv.corev_ovpsim.corevovpsimtarget attribute)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget.REQUIRED"]], "required (mlonmcu.target.riscv.cv32e40p.cv32e40ptarget attribute)": [[47, "mlonmcu.target.riscv.cv32e40p.CV32E40PTarget.REQUIRED"]], "required (mlonmcu.target.riscv.etiss.etisstarget attribute)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.REQUIRED"]], "required (mlonmcu.target.riscv.etiss_pulpino.etisspulpinotarget attribute)": [[47, "mlonmcu.target.riscv.etiss_pulpino.EtissPulpinoTarget.REQUIRED"]], "required (mlonmcu.target.riscv.gvsoc_pulp.gvsocpulptarget attribute)": [[47, "mlonmcu.target.riscv.gvsoc_pulp.GvsocPulpTarget.REQUIRED"]], "required (mlonmcu.target.riscv.ovpsim.ovpsimtarget attribute)": [[47, "mlonmcu.target.riscv.ovpsim.OVPSimTarget.REQUIRED"]], "required (mlonmcu.target.riscv.riscv.riscvtarget attribute)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.REQUIRED"]], "required (mlonmcu.target.riscv.riscv_bext_target.rvbtarget attribute)": [[47, "mlonmcu.target.riscv.riscv_bext_target.RVBTarget.REQUIRED"]], "required (mlonmcu.target.riscv.riscv_pext_target.rvptarget attribute)": [[47, "mlonmcu.target.riscv.riscv_pext_target.RVPTarget.REQUIRED"]], "required (mlonmcu.target.riscv.riscv_qemu.riscvqemutarget attribute)": [[47, "mlonmcu.target.riscv.riscv_qemu.RiscvQemuTarget.REQUIRED"]], "required (mlonmcu.target.riscv.riscv_vext_target.rvvtarget attribute)": [[47, "mlonmcu.target.riscv.riscv_vext_target.RVVTarget.REQUIRED"]], "required (mlonmcu.target.riscv.spike.spiketarget attribute)": [[47, "mlonmcu.target.riscv.spike.SpikeTarget.REQUIRED"]], "required (mlonmcu.target.riscv.vicuna.vicunatarget attribute)": [[47, "mlonmcu.target.riscv.vicuna.VicunaTarget.REQUIRED"]], "riscvtarget (class in mlonmcu.target.riscv.riscv)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget"]], "rvbtarget (class in mlonmcu.target.riscv.riscv_bext_target)": [[47, "mlonmcu.target.riscv.riscv_bext_target.RVBTarget"]], "rvptarget (class in mlonmcu.target.riscv.riscv_pext_target)": [[47, "mlonmcu.target.riscv.riscv_pext_target.RVPTarget"]], "rvvtarget (class in mlonmcu.target.riscv.riscv_vext_target)": [[47, "mlonmcu.target.riscv.riscv_vext_target.RVVTarget"]], "riscvqemutarget (class in mlonmcu.target.riscv)": [[47, "mlonmcu.target.riscv.RiscvQemuTarget"]], "riscvqemutarget (class in mlonmcu.target.riscv.riscv_qemu)": [[47, "mlonmcu.target.riscv.riscv_qemu.RiscvQemuTarget"]], "spiketarget (class in mlonmcu.target.riscv)": [[47, "mlonmcu.target.riscv.SpikeTarget"]], "spiketarget (class in mlonmcu.target.riscv.spike)": [[47, "mlonmcu.target.riscv.spike.SpikeTarget"]], "vicunatarget (class in mlonmcu.target.riscv)": [[47, "mlonmcu.target.riscv.VicunaTarget"]], "vicunatarget (class in mlonmcu.target.riscv.vicuna)": [[47, "mlonmcu.target.riscv.vicuna.VicunaTarget"]], "abi (mlonmcu.target.riscv.gvsocpulptarget property)": [[47, "mlonmcu.target.riscv.GvsocPulpTarget.abi"]], "abi (mlonmcu.target.riscv.gvsoc_pulp.gvsocpulptarget property)": [[47, "mlonmcu.target.riscv.gvsoc_pulp.GvsocPulpTarget.abi"]], "abi (mlonmcu.target.riscv.riscv.riscvtarget property)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.abi"]], "allow_error (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.allow_error"]], "allow_error (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.allow_error"]], "ara_apps_dir (mlonmcu.target.riscv.arartltarget property)": [[47, "mlonmcu.target.riscv.AraRtlTarget.ara_apps_dir"]], "ara_apps_dir (mlonmcu.target.riscv.aratarget property)": [[47, "mlonmcu.target.riscv.AraTarget.ara_apps_dir"]], "ara_apps_dir (mlonmcu.target.riscv.ara.aratarget property)": [[47, "mlonmcu.target.riscv.ara.AraTarget.ara_apps_dir"]], "ara_apps_dir (mlonmcu.target.riscv.ara_rtl.arartltarget property)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget.ara_apps_dir"]], "ara_hardware_dir (mlonmcu.target.riscv.arartltarget property)": [[47, "mlonmcu.target.riscv.AraRtlTarget.ara_hardware_dir"]], "ara_hardware_dir (mlonmcu.target.riscv.aratarget property)": [[47, "mlonmcu.target.riscv.AraTarget.ara_hardware_dir"]], "ara_hardware_dir (mlonmcu.target.riscv.ara.aratarget property)": [[47, "mlonmcu.target.riscv.ara.AraTarget.ara_hardware_dir"]], "ara_hardware_dir (mlonmcu.target.riscv.ara_rtl.arartltarget property)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget.ara_hardware_dir"]], "ara_verilator_tb (mlonmcu.target.riscv.aratarget property)": [[47, "mlonmcu.target.riscv.AraTarget.ara_verilator_tb"]], "ara_verilator_tb (mlonmcu.target.riscv.ara.aratarget property)": [[47, "mlonmcu.target.riscv.ara.AraTarget.ara_verilator_tb"]], "arch (mlonmcu.target.riscv.riscv.riscvtarget property)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.arch"]], "atomic (mlonmcu.target.riscv.riscv.riscvtarget property)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.atomic"]], "attr (mlonmcu.target.riscv.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget.attr"]], "attr (mlonmcu.target.riscv.cv32e40ptarget property)": [[47, "mlonmcu.target.riscv.CV32E40PTarget.attr"]], "attr (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.attr"]], "attr (mlonmcu.target.riscv.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.OVPSimTarget.attr"]], "attr (mlonmcu.target.riscv.riscvqemutarget property)": [[47, "mlonmcu.target.riscv.RiscvQemuTarget.attr"]], "attr (mlonmcu.target.riscv.corev_ovpsim.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget.attr"]], "attr (mlonmcu.target.riscv.cv32e40p.cv32e40ptarget property)": [[47, "mlonmcu.target.riscv.cv32e40p.CV32E40PTarget.attr"]], "attr (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.attr"]], "attr (mlonmcu.target.riscv.ovpsim.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.ovpsim.OVPSimTarget.attr"]], "attr (mlonmcu.target.riscv.riscv.riscvtarget property)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.attr"]], "attr (mlonmcu.target.riscv.riscv_qemu.riscvqemutarget property)": [[47, "mlonmcu.target.riscv.riscv_qemu.RiscvQemuTarget.attr"]], "attrs (mlonmcu.target.riscv.riscv.riscvtarget property)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.attrs"]], "attrs (mlonmcu.target.riscv.riscv_vext_target.rvvtarget property)": [[47, "mlonmcu.target.riscv.riscv_vext_target.RVVTarget.attrs"]], "bext_spec (mlonmcu.target.riscv.riscv_bext_target.rvbtarget property)": [[47, "mlonmcu.target.riscv.riscv_bext_target.RVBTarget.bext_spec"]], "bext_zba (mlonmcu.target.riscv.riscv_bext_target.rvbtarget property)": [[47, "mlonmcu.target.riscv.riscv_bext_target.RVBTarget.bext_zba"]], "bext_zbb (mlonmcu.target.riscv.riscv_bext_target.rvbtarget property)": [[47, "mlonmcu.target.riscv.riscv_bext_target.RVBTarget.bext_zbb"]], "bext_zbc (mlonmcu.target.riscv.riscv_bext_target.rvbtarget property)": [[47, "mlonmcu.target.riscv.riscv_bext_target.RVBTarget.bext_zbc"]], "bext_zbs (mlonmcu.target.riscv.riscv_bext_target.rvbtarget property)": [[47, "mlonmcu.target.riscv.riscv_bext_target.RVBTarget.bext_zbs"]], "compressed (mlonmcu.target.riscv.riscv.riscvtarget property)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.compressed"]], "core (mlonmcu.target.riscv.vicunatarget property)": [[47, "mlonmcu.target.riscv.VicunaTarget.core"]], "core (mlonmcu.target.riscv.vicuna.vicunatarget property)": [[47, "mlonmcu.target.riscv.vicuna.VicunaTarget.core"]], "cpu (mlonmcu.target.riscv.riscv.riscvtarget property)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.cpu"]], "cpu_arch (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.cpu_arch"]], "cpu_arch (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.cpu_arch"]], "cycle_time_ps (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.cycle_time_ps"]], "cycle_time_ps (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.cycle_time_ps"]], "dc_line_width (mlonmcu.target.riscv.vicunatarget property)": [[47, "mlonmcu.target.riscv.VicunaTarget.dc_line_width"]], "dc_line_width (mlonmcu.target.riscv.vicuna.vicunatarget property)": [[47, "mlonmcu.target.riscv.vicuna.VicunaTarget.dc_line_width"]], "dc_size (mlonmcu.target.riscv.vicunatarget property)": [[47, "mlonmcu.target.riscv.VicunaTarget.dc_size"]], "dc_size (mlonmcu.target.riscv.vicuna.vicunatarget property)": [[47, "mlonmcu.target.riscv.vicuna.VicunaTarget.dc_size"]], "debug_etiss (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.debug_etiss"]], "debug_etiss (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.debug_etiss"]], "elen (mlonmcu.target.riscv.arartltarget property)": [[47, "mlonmcu.target.riscv.AraRtlTarget.elen"]], "elen (mlonmcu.target.riscv.aratarget property)": [[47, "mlonmcu.target.riscv.AraTarget.elen"]], "elen (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.elen"]], "elen (mlonmcu.target.riscv.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.OVPSimTarget.elen"]], "elen (mlonmcu.target.riscv.riscvqemutarget property)": [[47, "mlonmcu.target.riscv.RiscvQemuTarget.elen"]], "elen (mlonmcu.target.riscv.ara.aratarget property)": [[47, "mlonmcu.target.riscv.ara.AraTarget.elen"]], "elen (mlonmcu.target.riscv.ara_rtl.arartltarget property)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget.elen"]], "elen (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.elen"]], "elen (mlonmcu.target.riscv.ovpsim.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.ovpsim.OVPSimTarget.elen"]], "elen (mlonmcu.target.riscv.riscv_qemu.riscvqemutarget property)": [[47, "mlonmcu.target.riscv.riscv_qemu.RiscvQemuTarget.elen"]], "elen (mlonmcu.target.riscv.riscv_vext_target.rvvtarget property)": [[47, "mlonmcu.target.riscv.riscv_vext_target.RVVTarget.elen"]], "embedded (mlonmcu.target.riscv.riscv.riscvtarget property)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.embedded"]], "embedded_vext (mlonmcu.target.riscv.arartltarget property)": [[47, "mlonmcu.target.riscv.AraRtlTarget.embedded_vext"]], "embedded_vext (mlonmcu.target.riscv.aratarget property)": [[47, "mlonmcu.target.riscv.AraTarget.embedded_vext"]], "embedded_vext (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.embedded_vext"]], "embedded_vext (mlonmcu.target.riscv.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.OVPSimTarget.embedded_vext"]], "embedded_vext (mlonmcu.target.riscv.riscvqemutarget property)": [[47, "mlonmcu.target.riscv.RiscvQemuTarget.embedded_vext"]], "embedded_vext (mlonmcu.target.riscv.ara.aratarget property)": [[47, "mlonmcu.target.riscv.ara.AraTarget.embedded_vext"]], "embedded_vext (mlonmcu.target.riscv.ara_rtl.arartltarget property)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget.embedded_vext"]], "embedded_vext (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.embedded_vext"]], "embedded_vext (mlonmcu.target.riscv.ovpsim.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.ovpsim.OVPSimTarget.embedded_vext"]], "embedded_vext (mlonmcu.target.riscv.riscv_qemu.riscvqemutarget property)": [[47, "mlonmcu.target.riscv.riscv_qemu.RiscvQemuTarget.embedded_vext"]], "embedded_vext (mlonmcu.target.riscv.riscv_vext_target.rvvtarget property)": [[47, "mlonmcu.target.riscv.riscv_vext_target.RVVTarget.embedded_vext"]], "enable_bext (mlonmcu.target.riscv.riscv_bext_target.rvbtarget property)": [[47, "mlonmcu.target.riscv.riscv_bext_target.RVBTarget.enable_bext"]], "enable_pext (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.enable_pext"]], "enable_pext (mlonmcu.target.riscv.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.OVPSimTarget.enable_pext"]], "enable_pext (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.enable_pext"]], "enable_pext (mlonmcu.target.riscv.ovpsim.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.ovpsim.OVPSimTarget.enable_pext"]], "enable_pext (mlonmcu.target.riscv.riscv_pext_target.rvptarget property)": [[47, "mlonmcu.target.riscv.riscv_pext_target.RVPTarget.enable_pext"]], "enable_vext (mlonmcu.target.riscv.arartltarget property)": [[47, "mlonmcu.target.riscv.AraRtlTarget.enable_vext"]], "enable_vext (mlonmcu.target.riscv.aratarget property)": [[47, "mlonmcu.target.riscv.AraTarget.enable_vext"]], "enable_vext (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.enable_vext"]], "enable_vext (mlonmcu.target.riscv.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.OVPSimTarget.enable_vext"]], "enable_vext (mlonmcu.target.riscv.riscvqemutarget property)": [[47, "mlonmcu.target.riscv.RiscvQemuTarget.enable_vext"]], "enable_vext (mlonmcu.target.riscv.ara.aratarget property)": [[47, "mlonmcu.target.riscv.ara.AraTarget.enable_vext"]], "enable_vext (mlonmcu.target.riscv.ara_rtl.arartltarget property)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget.enable_vext"]], "enable_vext (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.enable_vext"]], "enable_vext (mlonmcu.target.riscv.ovpsim.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.ovpsim.OVPSimTarget.enable_vext"]], "enable_vext (mlonmcu.target.riscv.riscv_qemu.riscvqemutarget property)": [[47, "mlonmcu.target.riscv.riscv_qemu.RiscvQemuTarget.enable_vext"]], "enable_vext (mlonmcu.target.riscv.riscv_vext_target.rvvtarget property)": [[47, "mlonmcu.target.riscv.riscv_vext_target.RVVTarget.enable_vext"]], "enable_xcorevalu (mlonmcu.target.riscv.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget.enable_xcorevalu"]], "enable_xcorevalu (mlonmcu.target.riscv.cv32e40ptarget property)": [[47, "mlonmcu.target.riscv.CV32E40PTarget.enable_xcorevalu"]], "enable_xcorevalu (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.enable_xcorevalu"]], "enable_xcorevalu (mlonmcu.target.riscv.corev_ovpsim.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget.enable_xcorevalu"]], "enable_xcorevalu (mlonmcu.target.riscv.cv32e40p.cv32e40ptarget property)": [[47, "mlonmcu.target.riscv.cv32e40p.CV32E40PTarget.enable_xcorevalu"]], "enable_xcorevalu (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.enable_xcorevalu"]], "enable_xcorevbi (mlonmcu.target.riscv.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget.enable_xcorevbi"]], "enable_xcorevbi (mlonmcu.target.riscv.cv32e40ptarget property)": [[47, "mlonmcu.target.riscv.CV32E40PTarget.enable_xcorevbi"]], "enable_xcorevbi (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.enable_xcorevbi"]], "enable_xcorevbi (mlonmcu.target.riscv.corev_ovpsim.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget.enable_xcorevbi"]], "enable_xcorevbi (mlonmcu.target.riscv.cv32e40p.cv32e40ptarget property)": [[47, "mlonmcu.target.riscv.cv32e40p.CV32E40PTarget.enable_xcorevbi"]], "enable_xcorevbi (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.enable_xcorevbi"]], "enable_xcorevbitmanip (mlonmcu.target.riscv.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget.enable_xcorevbitmanip"]], "enable_xcorevbitmanip (mlonmcu.target.riscv.cv32e40ptarget property)": [[47, "mlonmcu.target.riscv.CV32E40PTarget.enable_xcorevbitmanip"]], "enable_xcorevbitmanip (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.enable_xcorevbitmanip"]], "enable_xcorevbitmanip (mlonmcu.target.riscv.corev_ovpsim.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget.enable_xcorevbitmanip"]], "enable_xcorevbitmanip (mlonmcu.target.riscv.cv32e40p.cv32e40ptarget property)": [[47, "mlonmcu.target.riscv.cv32e40p.CV32E40PTarget.enable_xcorevbitmanip"]], "enable_xcorevbitmanip (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.enable_xcorevbitmanip"]], "enable_xcorevhwlp (mlonmcu.target.riscv.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget.enable_xcorevhwlp"]], "enable_xcorevhwlp (mlonmcu.target.riscv.cv32e40ptarget property)": [[47, "mlonmcu.target.riscv.CV32E40PTarget.enable_xcorevhwlp"]], "enable_xcorevhwlp (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.enable_xcorevhwlp"]], "enable_xcorevhwlp (mlonmcu.target.riscv.corev_ovpsim.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget.enable_xcorevhwlp"]], "enable_xcorevhwlp (mlonmcu.target.riscv.cv32e40p.cv32e40ptarget property)": [[47, "mlonmcu.target.riscv.cv32e40p.CV32E40PTarget.enable_xcorevhwlp"]], "enable_xcorevhwlp (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.enable_xcorevhwlp"]], "enable_xcorevmac (mlonmcu.target.riscv.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget.enable_xcorevmac"]], "enable_xcorevmac (mlonmcu.target.riscv.cv32e40ptarget property)": [[47, "mlonmcu.target.riscv.CV32E40PTarget.enable_xcorevmac"]], "enable_xcorevmac (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.enable_xcorevmac"]], "enable_xcorevmac (mlonmcu.target.riscv.corev_ovpsim.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget.enable_xcorevmac"]], "enable_xcorevmac (mlonmcu.target.riscv.cv32e40p.cv32e40ptarget property)": [[47, "mlonmcu.target.riscv.cv32e40p.CV32E40PTarget.enable_xcorevmac"]], "enable_xcorevmac (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.enable_xcorevmac"]], "enable_xcorevmem (mlonmcu.target.riscv.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget.enable_xcorevmem"]], "enable_xcorevmem (mlonmcu.target.riscv.cv32e40ptarget property)": [[47, "mlonmcu.target.riscv.CV32E40PTarget.enable_xcorevmem"]], "enable_xcorevmem (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.enable_xcorevmem"]], "enable_xcorevmem (mlonmcu.target.riscv.corev_ovpsim.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget.enable_xcorevmem"]], "enable_xcorevmem (mlonmcu.target.riscv.cv32e40p.cv32e40ptarget property)": [[47, "mlonmcu.target.riscv.cv32e40p.CV32E40PTarget.enable_xcorevmem"]], "enable_xcorevmem (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.enable_xcorevmem"]], "enable_xcorevsimd (mlonmcu.target.riscv.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget.enable_xcorevsimd"]], "enable_xcorevsimd (mlonmcu.target.riscv.cv32e40ptarget property)": [[47, "mlonmcu.target.riscv.CV32E40PTarget.enable_xcorevsimd"]], "enable_xcorevsimd (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.enable_xcorevsimd"]], "enable_xcorevsimd (mlonmcu.target.riscv.corev_ovpsim.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget.enable_xcorevsimd"]], "enable_xcorevsimd (mlonmcu.target.riscv.cv32e40p.cv32e40ptarget property)": [[47, "mlonmcu.target.riscv.cv32e40p.CV32E40PTarget.enable_xcorevsimd"]], "enable_xcorevsimd (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.enable_xcorevsimd"]], "end_to_end_cycles (mlonmcu.target.riscv.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget.end_to_end_cycles"]], "end_to_end_cycles (mlonmcu.target.riscv.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.OVPSimTarget.end_to_end_cycles"]], "end_to_end_cycles (mlonmcu.target.riscv.corev_ovpsim.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget.end_to_end_cycles"]], "end_to_end_cycles (mlonmcu.target.riscv.ovpsim.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.ovpsim.OVPSimTarget.end_to_end_cycles"]], "etiss_dir (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.etiss_dir"]], "etiss_dir (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.etiss_dir"]], "etiss_script (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.etiss_script"]], "etiss_script (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.etiss_script"]], "etiss_src_dir (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.etiss_src_dir"]], "etiss_src_dir (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.etiss_src_dir"]], "exec() (mlonmcu.target.riscv.arartltarget method)": [[47, "mlonmcu.target.riscv.AraRtlTarget.exec"]], "exec() (mlonmcu.target.riscv.aratarget method)": [[47, "mlonmcu.target.riscv.AraTarget.exec"]], "exec() (mlonmcu.target.riscv.corevovpsimtarget method)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget.exec"]], "exec() (mlonmcu.target.riscv.cv32e40ptarget method)": [[47, "mlonmcu.target.riscv.CV32E40PTarget.exec"]], "exec() (mlonmcu.target.riscv.etisstarget method)": [[47, "mlonmcu.target.riscv.EtissTarget.exec"]], "exec() (mlonmcu.target.riscv.gvsocpulptarget method)": [[47, "mlonmcu.target.riscv.GvsocPulpTarget.exec"]], "exec() (mlonmcu.target.riscv.ovpsimtarget method)": [[47, "mlonmcu.target.riscv.OVPSimTarget.exec"]], "exec() (mlonmcu.target.riscv.riscvqemutarget method)": [[47, "mlonmcu.target.riscv.RiscvQemuTarget.exec"]], "exec() (mlonmcu.target.riscv.spiketarget method)": [[47, "mlonmcu.target.riscv.SpikeTarget.exec"]], "exec() (mlonmcu.target.riscv.vicunatarget method)": [[47, "mlonmcu.target.riscv.VicunaTarget.exec"]], "exec() (mlonmcu.target.riscv.ara.aratarget method)": [[47, "mlonmcu.target.riscv.ara.AraTarget.exec"]], "exec() (mlonmcu.target.riscv.ara_rtl.arartltarget method)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget.exec"]], "exec() (mlonmcu.target.riscv.corev_ovpsim.corevovpsimtarget method)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget.exec"]], "exec() (mlonmcu.target.riscv.cv32e40p.cv32e40ptarget method)": [[47, "mlonmcu.target.riscv.cv32e40p.CV32E40PTarget.exec"]], "exec() (mlonmcu.target.riscv.etiss.etisstarget method)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.exec"]], "exec() (mlonmcu.target.riscv.gvsoc_pulp.gvsocpulptarget method)": [[47, "mlonmcu.target.riscv.gvsoc_pulp.GvsocPulpTarget.exec"]], "exec() (mlonmcu.target.riscv.ovpsim.ovpsimtarget method)": [[47, "mlonmcu.target.riscv.ovpsim.OVPSimTarget.exec"]], "exec() (mlonmcu.target.riscv.riscv_qemu.riscvqemutarget method)": [[47, "mlonmcu.target.riscv.riscv_qemu.RiscvQemuTarget.exec"]], "exec() (mlonmcu.target.riscv.spike.spiketarget method)": [[47, "mlonmcu.target.riscv.spike.SpikeTarget.exec"]], "exec() (mlonmcu.target.riscv.vicuna.vicunatarget method)": [[47, "mlonmcu.target.riscv.vicuna.VicunaTarget.exec"]], "extensions (mlonmcu.target.riscv.arartltarget property)": [[47, "mlonmcu.target.riscv.AraRtlTarget.extensions"]], "extensions (mlonmcu.target.riscv.aratarget property)": [[47, "mlonmcu.target.riscv.AraTarget.extensions"]], "extensions (mlonmcu.target.riscv.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget.extensions"]], "extensions (mlonmcu.target.riscv.cv32e40ptarget property)": [[47, "mlonmcu.target.riscv.CV32E40PTarget.extensions"]], "extensions (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.extensions"]], "extensions (mlonmcu.target.riscv.gvsocpulptarget property)": [[47, "mlonmcu.target.riscv.GvsocPulpTarget.extensions"]], "extensions (mlonmcu.target.riscv.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.OVPSimTarget.extensions"]], "extensions (mlonmcu.target.riscv.riscvqemutarget property)": [[47, "mlonmcu.target.riscv.RiscvQemuTarget.extensions"]], "extensions (mlonmcu.target.riscv.spiketarget property)": [[47, "mlonmcu.target.riscv.SpikeTarget.extensions"]], "extensions (mlonmcu.target.riscv.ara.aratarget property)": [[47, "mlonmcu.target.riscv.ara.AraTarget.extensions"]], "extensions (mlonmcu.target.riscv.ara_rtl.arartltarget property)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget.extensions"]], "extensions (mlonmcu.target.riscv.corev_ovpsim.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget.extensions"]], "extensions (mlonmcu.target.riscv.cv32e40p.cv32e40ptarget property)": [[47, "mlonmcu.target.riscv.cv32e40p.CV32E40PTarget.extensions"]], "extensions (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.extensions"]], "extensions (mlonmcu.target.riscv.gvsoc_pulp.gvsocpulptarget property)": [[47, "mlonmcu.target.riscv.gvsoc_pulp.GvsocPulpTarget.extensions"]], "extensions (mlonmcu.target.riscv.ovpsim.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.ovpsim.OVPSimTarget.extensions"]], "extensions (mlonmcu.target.riscv.riscv.riscvtarget property)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.extensions"]], "extensions (mlonmcu.target.riscv.riscv_bext_target.rvbtarget property)": [[47, "mlonmcu.target.riscv.riscv_bext_target.RVBTarget.extensions"]], "extensions (mlonmcu.target.riscv.riscv_pext_target.rvptarget property)": [[47, "mlonmcu.target.riscv.riscv_pext_target.RVPTarget.extensions"]], "extensions (mlonmcu.target.riscv.riscv_qemu.riscvqemutarget property)": [[47, "mlonmcu.target.riscv.riscv_qemu.RiscvQemuTarget.extensions"]], "extensions (mlonmcu.target.riscv.riscv_vext_target.rvvtarget property)": [[47, "mlonmcu.target.riscv.riscv_vext_target.RVVTarget.extensions"]], "extensions (mlonmcu.target.riscv.spike.spiketarget property)": [[47, "mlonmcu.target.riscv.spike.SpikeTarget.extensions"]], "extra_args (mlonmcu.target.riscv.riscv.riscvtarget property)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.extra_args"]], "extra_bool_config (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.extra_bool_config"]], "extra_bool_config (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.extra_bool_config"]], "extra_int_config (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.extra_int_config"]], "extra_int_config (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.extra_int_config"]], "extra_plugin_config (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.extra_plugin_config"]], "extra_plugin_config (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.extra_plugin_config"]], "extra_string_config (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.extra_string_config"]], "extra_string_config (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.extra_string_config"]], "filter_unsupported_extensions() (in module mlonmcu.target.riscv.spike)": [[47, "mlonmcu.target.riscv.spike.filter_unsupported_extensions"]], "fpu (mlonmcu.target.riscv.riscv.riscvtarget property)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.fpu"]], "gcc_arch (mlonmcu.target.riscv.riscv.riscvtarget property)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.gcc_arch"]], "gcc_extensions (mlonmcu.target.riscv.riscv.riscvtarget property)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.gcc_extensions"]], "gcc_variant (mlonmcu.target.riscv.riscv.riscvtarget property)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.gcc_variant"]], "gdbserver_attach (mlonmcu.target.riscv.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget.gdbserver_attach"]], "gdbserver_attach (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.gdbserver_attach"]], "gdbserver_attach (mlonmcu.target.riscv.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.OVPSimTarget.gdbserver_attach"]], "gdbserver_attach (mlonmcu.target.riscv.corev_ovpsim.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget.gdbserver_attach"]], "gdbserver_attach (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.gdbserver_attach"]], "gdbserver_attach (mlonmcu.target.riscv.ovpsim.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.ovpsim.OVPSimTarget.gdbserver_attach"]], "gdbserver_enable (mlonmcu.target.riscv.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget.gdbserver_enable"]], "gdbserver_enable (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.gdbserver_enable"]], "gdbserver_enable (mlonmcu.target.riscv.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.OVPSimTarget.gdbserver_enable"]], "gdbserver_enable (mlonmcu.target.riscv.corev_ovpsim.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget.gdbserver_enable"]], "gdbserver_enable (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.gdbserver_enable"]], "gdbserver_enable (mlonmcu.target.riscv.ovpsim.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.ovpsim.OVPSimTarget.gdbserver_enable"]], "gdbserver_port (mlonmcu.target.riscv.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget.gdbserver_port"]], "gdbserver_port (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.gdbserver_port"]], "gdbserver_port (mlonmcu.target.riscv.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.OVPSimTarget.gdbserver_port"]], "gdbserver_port (mlonmcu.target.riscv.corev_ovpsim.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget.gdbserver_port"]], "gdbserver_port (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.gdbserver_port"]], "gdbserver_port (mlonmcu.target.riscv.ovpsim.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.ovpsim.OVPSimTarget.gdbserver_port"]], "get_arch() (mlonmcu.target.riscv.riscv.riscvtarget method)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.get_arch"]], "get_backend_config() (mlonmcu.target.riscv.arartltarget method)": [[47, "mlonmcu.target.riscv.AraRtlTarget.get_backend_config"]], "get_backend_config() (mlonmcu.target.riscv.aratarget method)": [[47, "mlonmcu.target.riscv.AraTarget.get_backend_config"]], "get_backend_config() (mlonmcu.target.riscv.corevovpsimtarget method)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget.get_backend_config"]], "get_backend_config() (mlonmcu.target.riscv.cv32e40ptarget method)": [[47, "mlonmcu.target.riscv.CV32E40PTarget.get_backend_config"]], "get_backend_config() (mlonmcu.target.riscv.etisstarget method)": [[47, "mlonmcu.target.riscv.EtissTarget.get_backend_config"]], "get_backend_config() (mlonmcu.target.riscv.gvsocpulptarget method)": [[47, "mlonmcu.target.riscv.GvsocPulpTarget.get_backend_config"]], "get_backend_config() (mlonmcu.target.riscv.ovpsimtarget method)": [[47, "mlonmcu.target.riscv.OVPSimTarget.get_backend_config"]], "get_backend_config() (mlonmcu.target.riscv.spiketarget method)": [[47, "mlonmcu.target.riscv.SpikeTarget.get_backend_config"]], "get_backend_config() (mlonmcu.target.riscv.vicunatarget method)": [[47, "mlonmcu.target.riscv.VicunaTarget.get_backend_config"]], "get_backend_config() (mlonmcu.target.riscv.ara.aratarget method)": [[47, "mlonmcu.target.riscv.ara.AraTarget.get_backend_config"]], "get_backend_config() (mlonmcu.target.riscv.ara_rtl.arartltarget method)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget.get_backend_config"]], "get_backend_config() (mlonmcu.target.riscv.corev_ovpsim.corevovpsimtarget method)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget.get_backend_config"]], "get_backend_config() (mlonmcu.target.riscv.cv32e40p.cv32e40ptarget method)": [[47, "mlonmcu.target.riscv.cv32e40p.CV32E40PTarget.get_backend_config"]], "get_backend_config() (mlonmcu.target.riscv.etiss.etisstarget method)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.get_backend_config"]], "get_backend_config() (mlonmcu.target.riscv.gvsoc_pulp.gvsocpulptarget method)": [[47, "mlonmcu.target.riscv.gvsoc_pulp.GvsocPulpTarget.get_backend_config"]], "get_backend_config() (mlonmcu.target.riscv.ovpsim.ovpsimtarget method)": [[47, "mlonmcu.target.riscv.ovpsim.OVPSimTarget.get_backend_config"]], "get_backend_config() (mlonmcu.target.riscv.riscv.riscvtarget method)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.get_backend_config"]], "get_backend_config() (mlonmcu.target.riscv.riscv_vext_target.rvvtarget method)": [[47, "mlonmcu.target.riscv.riscv_vext_target.RVVTarget.get_backend_config"]], "get_backend_config() (mlonmcu.target.riscv.spike.spiketarget method)": [[47, "mlonmcu.target.riscv.spike.SpikeTarget.get_backend_config"]], "get_backend_config() (mlonmcu.target.riscv.vicuna.vicunatarget method)": [[47, "mlonmcu.target.riscv.vicuna.VicunaTarget.get_backend_config"]], "get_basic_gvsoc_simulating_arg() (mlonmcu.target.riscv.gvsocpulptarget method)": [[47, "mlonmcu.target.riscv.GvsocPulpTarget.get_basic_gvsoc_simulating_arg"]], "get_basic_gvsoc_simulating_arg() (mlonmcu.target.riscv.gvsoc_pulp.gvsocpulptarget method)": [[47, "mlonmcu.target.riscv.gvsoc_pulp.GvsocPulpTarget.get_basic_gvsoc_simulating_arg"]], "get_config_args() (mlonmcu.target.riscv.vicunatarget method)": [[47, "mlonmcu.target.riscv.VicunaTarget.get_config_args"]], "get_config_args() (mlonmcu.target.riscv.vicuna.vicunatarget method)": [[47, "mlonmcu.target.riscv.vicuna.VicunaTarget.get_config_args"]], "get_cpu_str() (mlonmcu.target.riscv.riscvqemutarget method)": [[47, "mlonmcu.target.riscv.RiscvQemuTarget.get_cpu_str"]], "get_cpu_str() (mlonmcu.target.riscv.riscv_qemu.riscvqemutarget method)": [[47, "mlonmcu.target.riscv.riscv_qemu.RiscvQemuTarget.get_cpu_str"]], "get_default_ovpsim_args() (mlonmcu.target.riscv.corevovpsimtarget method)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget.get_default_ovpsim_args"]], "get_default_ovpsim_args() (mlonmcu.target.riscv.ovpsimtarget method)": [[47, "mlonmcu.target.riscv.OVPSimTarget.get_default_ovpsim_args"]], "get_default_ovpsim_args() (mlonmcu.target.riscv.corev_ovpsim.corevovpsimtarget method)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget.get_default_ovpsim_args"]], "get_default_ovpsim_args() (mlonmcu.target.riscv.ovpsim.ovpsimtarget method)": [[47, "mlonmcu.target.riscv.ovpsim.OVPSimTarget.get_default_ovpsim_args"]], "get_ini_bool_config() (mlonmcu.target.riscv.etisspulpinotarget method)": [[47, "mlonmcu.target.riscv.EtissPulpinoTarget.get_ini_bool_config"]], "get_ini_bool_config() (mlonmcu.target.riscv.etisstarget method)": [[47, "mlonmcu.target.riscv.EtissTarget.get_ini_bool_config"]], "get_ini_bool_config() (mlonmcu.target.riscv.etiss.etisstarget method)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.get_ini_bool_config"]], "get_ini_bool_config() (mlonmcu.target.riscv.etiss_pulpino.etisspulpinotarget method)": [[47, "mlonmcu.target.riscv.etiss_pulpino.EtissPulpinoTarget.get_ini_bool_config"]], "get_ini_int_config() (mlonmcu.target.riscv.etisstarget method)": [[47, "mlonmcu.target.riscv.EtissTarget.get_ini_int_config"]], "get_ini_int_config() (mlonmcu.target.riscv.etiss.etisstarget method)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.get_ini_int_config"]], "get_ini_plugin_config() (mlonmcu.target.riscv.etisstarget method)": [[47, "mlonmcu.target.riscv.EtissTarget.get_ini_plugin_config"]], "get_ini_plugin_config() (mlonmcu.target.riscv.etiss.etisstarget method)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.get_ini_plugin_config"]], "get_ini_string_config() (mlonmcu.target.riscv.etisstarget method)": [[47, "mlonmcu.target.riscv.EtissTarget.get_ini_string_config"]], "get_ini_string_config() (mlonmcu.target.riscv.etiss.etisstarget method)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.get_ini_string_config"]], "get_metrics() (mlonmcu.target.riscv.arartltarget method)": [[47, "mlonmcu.target.riscv.AraRtlTarget.get_metrics"]], "get_metrics() (mlonmcu.target.riscv.aratarget method)": [[47, "mlonmcu.target.riscv.AraTarget.get_metrics"]], "get_metrics() (mlonmcu.target.riscv.corevovpsimtarget method)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget.get_metrics"]], "get_metrics() (mlonmcu.target.riscv.cv32e40ptarget method)": [[47, "mlonmcu.target.riscv.CV32E40PTarget.get_metrics"]], "get_metrics() (mlonmcu.target.riscv.etisstarget method)": [[47, "mlonmcu.target.riscv.EtissTarget.get_metrics"]], "get_metrics() (mlonmcu.target.riscv.gvsocpulptarget method)": [[47, "mlonmcu.target.riscv.GvsocPulpTarget.get_metrics"]], "get_metrics() (mlonmcu.target.riscv.ovpsimtarget method)": [[47, "mlonmcu.target.riscv.OVPSimTarget.get_metrics"]], "get_metrics() (mlonmcu.target.riscv.riscvqemutarget method)": [[47, "mlonmcu.target.riscv.RiscvQemuTarget.get_metrics"]], "get_metrics() (mlonmcu.target.riscv.spiketarget method)": [[47, "mlonmcu.target.riscv.SpikeTarget.get_metrics"]], "get_metrics() (mlonmcu.target.riscv.vicunatarget method)": [[47, "mlonmcu.target.riscv.VicunaTarget.get_metrics"]], "get_metrics() (mlonmcu.target.riscv.ara.aratarget method)": [[47, "mlonmcu.target.riscv.ara.AraTarget.get_metrics"]], "get_metrics() (mlonmcu.target.riscv.ara_rtl.arartltarget method)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget.get_metrics"]], "get_metrics() (mlonmcu.target.riscv.corev_ovpsim.corevovpsimtarget method)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget.get_metrics"]], "get_metrics() (mlonmcu.target.riscv.cv32e40p.cv32e40ptarget method)": [[47, "mlonmcu.target.riscv.cv32e40p.CV32E40PTarget.get_metrics"]], "get_metrics() (mlonmcu.target.riscv.etiss.etisstarget method)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.get_metrics"]], "get_metrics() (mlonmcu.target.riscv.gvsoc_pulp.gvsocpulptarget method)": [[47, "mlonmcu.target.riscv.gvsoc_pulp.GvsocPulpTarget.get_metrics"]], "get_metrics() (mlonmcu.target.riscv.ovpsim.ovpsimtarget method)": [[47, "mlonmcu.target.riscv.ovpsim.OVPSimTarget.get_metrics"]], "get_metrics() (mlonmcu.target.riscv.riscv_qemu.riscvqemutarget method)": [[47, "mlonmcu.target.riscv.riscv_qemu.RiscvQemuTarget.get_metrics"]], "get_metrics() (mlonmcu.target.riscv.spike.spiketarget method)": [[47, "mlonmcu.target.riscv.spike.SpikeTarget.get_metrics"]], "get_metrics() (mlonmcu.target.riscv.vicuna.vicunatarget method)": [[47, "mlonmcu.target.riscv.vicuna.VicunaTarget.get_metrics"]], "get_platform_defs() (mlonmcu.target.riscv.arartltarget method)": [[47, "mlonmcu.target.riscv.AraRtlTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.riscv.aratarget method)": [[47, "mlonmcu.target.riscv.AraTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.riscv.corevovpsimtarget method)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.riscv.cv32e40ptarget method)": [[47, "mlonmcu.target.riscv.CV32E40PTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.riscv.etisspulpinotarget method)": [[47, "mlonmcu.target.riscv.EtissPulpinoTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.riscv.etisstarget method)": [[47, "mlonmcu.target.riscv.EtissTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.riscv.gvsocpulptarget method)": [[47, "mlonmcu.target.riscv.GvsocPulpTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.riscv.ovpsimtarget method)": [[47, "mlonmcu.target.riscv.OVPSimTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.riscv.riscvqemutarget method)": [[47, "mlonmcu.target.riscv.RiscvQemuTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.riscv.spiketarget method)": [[47, "mlonmcu.target.riscv.SpikeTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.riscv.vicunatarget method)": [[47, "mlonmcu.target.riscv.VicunaTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.riscv.ara.aratarget method)": [[47, "mlonmcu.target.riscv.ara.AraTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.riscv.ara_rtl.arartltarget method)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.riscv.corev_ovpsim.corevovpsimtarget method)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.riscv.cv32e40p.cv32e40ptarget method)": [[47, "mlonmcu.target.riscv.cv32e40p.CV32E40PTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.riscv.etiss.etisstarget method)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.riscv.etiss_pulpino.etisspulpinotarget method)": [[47, "mlonmcu.target.riscv.etiss_pulpino.EtissPulpinoTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.riscv.gvsoc_pulp.gvsocpulptarget method)": [[47, "mlonmcu.target.riscv.gvsoc_pulp.GvsocPulpTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.riscv.ovpsim.ovpsimtarget method)": [[47, "mlonmcu.target.riscv.ovpsim.OVPSimTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.riscv.riscv.riscvtarget method)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.riscv.riscv_bext_target.rvbtarget method)": [[47, "mlonmcu.target.riscv.riscv_bext_target.RVBTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.riscv.riscv_pext_target.rvptarget method)": [[47, "mlonmcu.target.riscv.riscv_pext_target.RVPTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.riscv.riscv_qemu.riscvqemutarget method)": [[47, "mlonmcu.target.riscv.riscv_qemu.RiscvQemuTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.riscv.riscv_vext_target.rvvtarget method)": [[47, "mlonmcu.target.riscv.riscv_vext_target.RVVTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.riscv.spike.spiketarget method)": [[47, "mlonmcu.target.riscv.spike.SpikeTarget.get_platform_defs"]], "get_platform_defs() (mlonmcu.target.riscv.vicuna.vicunatarget method)": [[47, "mlonmcu.target.riscv.vicuna.VicunaTarget.get_platform_defs"]], "get_qemu_args() (mlonmcu.target.riscv.riscvqemutarget method)": [[47, "mlonmcu.target.riscv.RiscvQemuTarget.get_qemu_args"]], "get_qemu_args() (mlonmcu.target.riscv.riscv_qemu.riscvqemutarget method)": [[47, "mlonmcu.target.riscv.riscv_qemu.RiscvQemuTarget.get_qemu_args"]], "get_target_system() (mlonmcu.target.riscv.arartltarget method)": [[47, "mlonmcu.target.riscv.AraRtlTarget.get_target_system"]], "get_target_system() (mlonmcu.target.riscv.aratarget method)": [[47, "mlonmcu.target.riscv.AraTarget.get_target_system"]], "get_target_system() (mlonmcu.target.riscv.cv32e40ptarget method)": [[47, "mlonmcu.target.riscv.CV32E40PTarget.get_target_system"]], "get_target_system() (mlonmcu.target.riscv.etisstarget method)": [[47, "mlonmcu.target.riscv.EtissTarget.get_target_system"]], "get_target_system() (mlonmcu.target.riscv.gvsocpulptarget method)": [[47, "mlonmcu.target.riscv.GvsocPulpTarget.get_target_system"]], "get_target_system() (mlonmcu.target.riscv.riscvqemutarget method)": [[47, "mlonmcu.target.riscv.RiscvQemuTarget.get_target_system"]], "get_target_system() (mlonmcu.target.riscv.vicunatarget method)": [[47, "mlonmcu.target.riscv.VicunaTarget.get_target_system"]], "get_target_system() (mlonmcu.target.riscv.ara.aratarget method)": [[47, "mlonmcu.target.riscv.ara.AraTarget.get_target_system"]], "get_target_system() (mlonmcu.target.riscv.ara_rtl.arartltarget method)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget.get_target_system"]], "get_target_system() (mlonmcu.target.riscv.cv32e40p.cv32e40ptarget method)": [[47, "mlonmcu.target.riscv.cv32e40p.CV32E40PTarget.get_target_system"]], "get_target_system() (mlonmcu.target.riscv.etiss.etisstarget method)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.get_target_system"]], "get_target_system() (mlonmcu.target.riscv.gvsoc_pulp.gvsocpulptarget method)": [[47, "mlonmcu.target.riscv.gvsoc_pulp.GvsocPulpTarget.get_target_system"]], "get_target_system() (mlonmcu.target.riscv.riscv.riscvtarget method)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.get_target_system"]], "get_target_system() (mlonmcu.target.riscv.riscv_qemu.riscvqemutarget method)": [[47, "mlonmcu.target.riscv.riscv_qemu.RiscvQemuTarget.get_target_system"]], "get_target_system() (mlonmcu.target.riscv.vicuna.vicunatarget method)": [[47, "mlonmcu.target.riscv.vicuna.VicunaTarget.get_target_system"]], "gvsoc_folder (mlonmcu.target.riscv.gvsocpulptarget property)": [[47, "mlonmcu.target.riscv.GvsocPulpTarget.gvsoc_folder"]], "gvsoc_folder (mlonmcu.target.riscv.gvsoc_pulp.gvsocpulptarget property)": [[47, "mlonmcu.target.riscv.gvsoc_pulp.GvsocPulpTarget.gvsoc_folder"]], "gvsoc_preparation_env() (mlonmcu.target.riscv.gvsocpulptarget method)": [[47, "mlonmcu.target.riscv.GvsocPulpTarget.gvsoc_preparation_env"]], "gvsoc_preparation_env() (mlonmcu.target.riscv.gvsoc_pulp.gvsocpulptarget method)": [[47, "mlonmcu.target.riscv.gvsoc_pulp.GvsocPulpTarget.gvsoc_preparation_env"]], "gvsoc_script (mlonmcu.target.riscv.gvsocpulptarget property)": [[47, "mlonmcu.target.riscv.GvsocPulpTarget.gvsoc_script"]], "gvsoc_script (mlonmcu.target.riscv.gvsoc_pulp.gvsocpulptarget property)": [[47, "mlonmcu.target.riscv.gvsoc_pulp.GvsocPulpTarget.gvsoc_script"]], "has_fpu (mlonmcu.target.riscv.riscv.riscvtarget property)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.has_fpu"]], "ic_line_width (mlonmcu.target.riscv.vicunatarget property)": [[47, "mlonmcu.target.riscv.VicunaTarget.ic_line_width"]], "ic_line_width (mlonmcu.target.riscv.vicuna.vicunatarget property)": [[47, "mlonmcu.target.riscv.vicuna.VicunaTarget.ic_line_width"]], "ic_size (mlonmcu.target.riscv.vicunatarget property)": [[47, "mlonmcu.target.riscv.VicunaTarget.ic_size"]], "ic_size (mlonmcu.target.riscv.vicuna.vicunatarget property)": [[47, "mlonmcu.target.riscv.vicuna.VicunaTarget.ic_size"]], "isa (mlonmcu.target.riscv.spiketarget property)": [[47, "mlonmcu.target.riscv.SpikeTarget.isa"]], "isa (mlonmcu.target.riscv.spike.spiketarget property)": [[47, "mlonmcu.target.riscv.spike.SpikeTarget.isa"]], "jit (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.jit"]], "jit (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.jit"]], "join_extensions() (in module mlonmcu.target.riscv.util)": [[47, "mlonmcu.target.riscv.util.join_extensions"]], "limit_cycles (mlonmcu.target.riscv.arartltarget property)": [[47, "mlonmcu.target.riscv.AraRtlTarget.limit_cycles"]], "limit_cycles (mlonmcu.target.riscv.aratarget property)": [[47, "mlonmcu.target.riscv.AraTarget.limit_cycles"]], "limit_cycles (mlonmcu.target.riscv.ara.aratarget property)": [[47, "mlonmcu.target.riscv.ara.AraTarget.limit_cycles"]], "limit_cycles (mlonmcu.target.riscv.ara_rtl.arartltarget property)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget.limit_cycles"]], "llvm_arch (mlonmcu.target.riscv.riscv.riscvtarget property)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.llvm_arch"]], "llvm_extensions (mlonmcu.target.riscv.riscv.riscvtarget property)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.llvm_extensions"]], "logger (in module mlonmcu.target.riscv.vicuna)": [[47, "mlonmcu.target.riscv.vicuna.logger"]], "max_block_size (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.max_block_size"]], "max_block_size (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.max_block_size"]], "mem_latency (mlonmcu.target.riscv.vicunatarget property)": [[47, "mlonmcu.target.riscv.VicunaTarget.mem_latency"]], "mem_latency (mlonmcu.target.riscv.vicuna.vicunatarget property)": [[47, "mlonmcu.target.riscv.vicuna.VicunaTarget.mem_latency"]], "mem_size (mlonmcu.target.riscv.vicunatarget property)": [[47, "mlonmcu.target.riscv.VicunaTarget.mem_size"]], "mem_size (mlonmcu.target.riscv.vicuna.vicunatarget property)": [[47, "mlonmcu.target.riscv.vicuna.VicunaTarget.mem_size"]], "mem_width (mlonmcu.target.riscv.vicunatarget property)": [[47, "mlonmcu.target.riscv.VicunaTarget.mem_width"]], "mem_width (mlonmcu.target.riscv.vicuna.vicunatarget property)": [[47, "mlonmcu.target.riscv.vicuna.VicunaTarget.mem_width"]], "mlonmcu.target.riscv": [[47, "module-mlonmcu.target.riscv"]], "mlonmcu.target.riscv.ara": [[47, "module-mlonmcu.target.riscv.ara"]], "mlonmcu.target.riscv.ara_rtl": [[47, "module-mlonmcu.target.riscv.ara_rtl"]], "mlonmcu.target.riscv.corev_ovpsim": [[47, "module-mlonmcu.target.riscv.corev_ovpsim"]], "mlonmcu.target.riscv.cv32e40p": [[47, "module-mlonmcu.target.riscv.cv32e40p"]], "mlonmcu.target.riscv.etiss": [[47, "module-mlonmcu.target.riscv.etiss"]], "mlonmcu.target.riscv.etiss_pulpino": [[47, "module-mlonmcu.target.riscv.etiss_pulpino"]], "mlonmcu.target.riscv.gvsoc_pulp": [[47, "module-mlonmcu.target.riscv.gvsoc_pulp"]], "mlonmcu.target.riscv.ovpsim": [[47, "module-mlonmcu.target.riscv.ovpsim"]], "mlonmcu.target.riscv.riscv": [[47, "module-mlonmcu.target.riscv.riscv"]], "mlonmcu.target.riscv.riscv_bext_target": [[47, "module-mlonmcu.target.riscv.riscv_bext_target"]], "mlonmcu.target.riscv.riscv_pext_target": [[47, "module-mlonmcu.target.riscv.riscv_pext_target"]], "mlonmcu.target.riscv.riscv_qemu": [[47, "module-mlonmcu.target.riscv.riscv_qemu"]], "mlonmcu.target.riscv.riscv_vext_target": [[47, "module-mlonmcu.target.riscv.riscv_vext_target"]], "mlonmcu.target.riscv.spike": [[47, "module-mlonmcu.target.riscv.spike"]], "mlonmcu.target.riscv.util": [[47, "module-mlonmcu.target.riscv.util"]], "mlonmcu.target.riscv.vicuna": [[47, "module-mlonmcu.target.riscv.vicuna"]], "model (mlonmcu.target.riscv.gvsocpulptarget property)": [[47, "mlonmcu.target.riscv.GvsocPulpTarget.model"]], "model (mlonmcu.target.riscv.gvsoc_pulp.gvsocpulptarget property)": [[47, "mlonmcu.target.riscv.gvsoc_pulp.GvsocPulpTarget.model"]], "multiply (mlonmcu.target.riscv.riscv.riscvtarget property)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.multiply"]], "nr_lanes (mlonmcu.target.riscv.arartltarget property)": [[47, "mlonmcu.target.riscv.AraRtlTarget.nr_lanes"]], "nr_lanes (mlonmcu.target.riscv.aratarget property)": [[47, "mlonmcu.target.riscv.AraTarget.nr_lanes"]], "nr_lanes (mlonmcu.target.riscv.ara.aratarget property)": [[47, "mlonmcu.target.riscv.ara.AraTarget.nr_lanes"]], "nr_lanes (mlonmcu.target.riscv.ara_rtl.arartltarget property)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget.nr_lanes"]], "num_threads (mlonmcu.target.riscv.arartltarget property)": [[47, "mlonmcu.target.riscv.AraRtlTarget.num_threads"]], "num_threads (mlonmcu.target.riscv.aratarget property)": [[47, "mlonmcu.target.riscv.AraTarget.num_threads"]], "num_threads (mlonmcu.target.riscv.ara.aratarget property)": [[47, "mlonmcu.target.riscv.ara.AraTarget.num_threads"]], "num_threads (mlonmcu.target.riscv.ara_rtl.arartltarget property)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget.num_threads"]], "ovpsim_exe (mlonmcu.target.riscv.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget.ovpsim_exe"]], "ovpsim_exe (mlonmcu.target.riscv.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.OVPSimTarget.ovpsim_exe"]], "ovpsim_exe (mlonmcu.target.riscv.corev_ovpsim.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget.ovpsim_exe"]], "ovpsim_exe (mlonmcu.target.riscv.ovpsim.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.ovpsim.OVPSimTarget.ovpsim_exe"]], "parse_exit() (mlonmcu.target.riscv.arartltarget method)": [[47, "mlonmcu.target.riscv.AraRtlTarget.parse_exit"]], "parse_exit() (mlonmcu.target.riscv.aratarget method)": [[47, "mlonmcu.target.riscv.AraTarget.parse_exit"]], "parse_exit() (mlonmcu.target.riscv.corevovpsimtarget method)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget.parse_exit"]], "parse_exit() (mlonmcu.target.riscv.cv32e40ptarget method)": [[47, "mlonmcu.target.riscv.CV32E40PTarget.parse_exit"]], "parse_exit() (mlonmcu.target.riscv.etisstarget method)": [[47, "mlonmcu.target.riscv.EtissTarget.parse_exit"]], "parse_exit() (mlonmcu.target.riscv.ara.aratarget method)": [[47, "mlonmcu.target.riscv.ara.AraTarget.parse_exit"]], "parse_exit() (mlonmcu.target.riscv.ara_rtl.arartltarget method)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget.parse_exit"]], "parse_exit() (mlonmcu.target.riscv.corev_ovpsim.corevovpsimtarget method)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget.parse_exit"]], "parse_exit() (mlonmcu.target.riscv.cv32e40p.cv32e40ptarget method)": [[47, "mlonmcu.target.riscv.cv32e40p.CV32E40PTarget.parse_exit"]], "parse_exit() (mlonmcu.target.riscv.etiss.etisstarget method)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.parse_exit"]], "parse_stdout() (mlonmcu.target.riscv.arartltarget method)": [[47, "mlonmcu.target.riscv.AraRtlTarget.parse_stdout"]], "parse_stdout() (mlonmcu.target.riscv.aratarget method)": [[47, "mlonmcu.target.riscv.AraTarget.parse_stdout"]], "parse_stdout() (mlonmcu.target.riscv.corevovpsimtarget method)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget.parse_stdout"]], "parse_stdout() (mlonmcu.target.riscv.cv32e40ptarget method)": [[47, "mlonmcu.target.riscv.CV32E40PTarget.parse_stdout"]], "parse_stdout() (mlonmcu.target.riscv.etisstarget method)": [[47, "mlonmcu.target.riscv.EtissTarget.parse_stdout"]], "parse_stdout() (mlonmcu.target.riscv.gvsocpulptarget method)": [[47, "mlonmcu.target.riscv.GvsocPulpTarget.parse_stdout"]], "parse_stdout() (mlonmcu.target.riscv.ovpsimtarget method)": [[47, "mlonmcu.target.riscv.OVPSimTarget.parse_stdout"]], "parse_stdout() (mlonmcu.target.riscv.riscvqemutarget method)": [[47, "mlonmcu.target.riscv.RiscvQemuTarget.parse_stdout"]], "parse_stdout() (mlonmcu.target.riscv.spiketarget method)": [[47, "mlonmcu.target.riscv.SpikeTarget.parse_stdout"]], "parse_stdout() (mlonmcu.target.riscv.vicunatarget method)": [[47, "mlonmcu.target.riscv.VicunaTarget.parse_stdout"]], "parse_stdout() (mlonmcu.target.riscv.ara.aratarget method)": [[47, "mlonmcu.target.riscv.ara.AraTarget.parse_stdout"]], "parse_stdout() (mlonmcu.target.riscv.ara_rtl.arartltarget method)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget.parse_stdout"]], "parse_stdout() (mlonmcu.target.riscv.corev_ovpsim.corevovpsimtarget method)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget.parse_stdout"]], "parse_stdout() (mlonmcu.target.riscv.cv32e40p.cv32e40ptarget method)": [[47, "mlonmcu.target.riscv.cv32e40p.CV32E40PTarget.parse_stdout"]], "parse_stdout() (mlonmcu.target.riscv.etiss.etisstarget method)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.parse_stdout"]], "parse_stdout() (mlonmcu.target.riscv.gvsoc_pulp.gvsocpulptarget method)": [[47, "mlonmcu.target.riscv.gvsoc_pulp.GvsocPulpTarget.parse_stdout"]], "parse_stdout() (mlonmcu.target.riscv.ovpsim.ovpsimtarget method)": [[47, "mlonmcu.target.riscv.ovpsim.OVPSimTarget.parse_stdout"]], "parse_stdout() (mlonmcu.target.riscv.riscv_qemu.riscvqemutarget method)": [[47, "mlonmcu.target.riscv.riscv_qemu.RiscvQemuTarget.parse_stdout"]], "parse_stdout() (mlonmcu.target.riscv.spike.spiketarget method)": [[47, "mlonmcu.target.riscv.spike.SpikeTarget.parse_stdout"]], "parse_stdout() (mlonmcu.target.riscv.vicuna.vicunatarget method)": [[47, "mlonmcu.target.riscv.vicuna.VicunaTarget.parse_stdout"]], "pext_spec (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.pext_spec"]], "pext_spec (mlonmcu.target.riscv.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.OVPSimTarget.pext_spec"]], "pext_spec (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.pext_spec"]], "pext_spec (mlonmcu.target.riscv.ovpsim.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.ovpsim.OVPSimTarget.pext_spec"]], "pext_spec (mlonmcu.target.riscv.riscv_pext_target.rvptarget property)": [[47, "mlonmcu.target.riscv.riscv_pext_target.RVPTarget.pext_spec"]], "plugins (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.plugins"]], "plugins (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.plugins"]], "prepare_simulator() (mlonmcu.target.riscv.arartltarget method)": [[47, "mlonmcu.target.riscv.AraRtlTarget.prepare_simulator"]], "prepare_simulator() (mlonmcu.target.riscv.aratarget method)": [[47, "mlonmcu.target.riscv.AraTarget.prepare_simulator"]], "prepare_simulator() (mlonmcu.target.riscv.vicunatarget method)": [[47, "mlonmcu.target.riscv.VicunaTarget.prepare_simulator"]], "prepare_simulator() (mlonmcu.target.riscv.ara.aratarget method)": [[47, "mlonmcu.target.riscv.ara.AraTarget.prepare_simulator"]], "prepare_simulator() (mlonmcu.target.riscv.ara_rtl.arartltarget method)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget.prepare_simulator"]], "prepare_simulator() (mlonmcu.target.riscv.vicuna.vicunatarget method)": [[47, "mlonmcu.target.riscv.vicuna.VicunaTarget.prepare_simulator"]], "processor (mlonmcu.target.riscv.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget.processor"]], "processor (mlonmcu.target.riscv.corev_ovpsim.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget.processor"]], "pulp_freertos_config_dir (mlonmcu.target.riscv.gvsocpulptarget property)": [[47, "mlonmcu.target.riscv.GvsocPulpTarget.pulp_freertos_config_dir"]], "pulp_freertos_config_dir (mlonmcu.target.riscv.gvsoc_pulp.gvsocpulptarget property)": [[47, "mlonmcu.target.riscv.gvsoc_pulp.GvsocPulpTarget.pulp_freertos_config_dir"]], "pulp_freertos_install_dir (mlonmcu.target.riscv.gvsocpulptarget property)": [[47, "mlonmcu.target.riscv.GvsocPulpTarget.pulp_freertos_install_dir"]], "pulp_freertos_install_dir (mlonmcu.target.riscv.gvsoc_pulp.gvsocpulptarget property)": [[47, "mlonmcu.target.riscv.gvsoc_pulp.GvsocPulpTarget.pulp_freertos_install_dir"]], "pulp_freertos_support_dir (mlonmcu.target.riscv.gvsocpulptarget property)": [[47, "mlonmcu.target.riscv.GvsocPulpTarget.pulp_freertos_support_dir"]], "pulp_freertos_support_dir (mlonmcu.target.riscv.gvsoc_pulp.gvsocpulptarget property)": [[47, "mlonmcu.target.riscv.gvsoc_pulp.GvsocPulpTarget.pulp_freertos_support_dir"]], "pulp_gcc_basename (mlonmcu.target.riscv.riscv.riscvtarget property)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.pulp_gcc_basename"]], "pulp_gcc_prefix (mlonmcu.target.riscv.riscv.riscvtarget property)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.pulp_gcc_prefix"]], "questasim_install_dir (mlonmcu.target.riscv.arartltarget property)": [[47, "mlonmcu.target.riscv.AraRtlTarget.questasim_install_dir"]], "questasim_install_dir (mlonmcu.target.riscv.ara_rtl.arartltarget property)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget.questasim_install_dir"]], "ram_size (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.ram_size"]], "ram_size (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.ram_size"]], "ram_start (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.ram_start"]], "ram_start (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.ram_start"]], "reconfigure() (mlonmcu.target.riscv.riscv.riscvtarget method)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.reconfigure"]], "replace_unsupported() (in module mlonmcu.target.riscv.corev_ovpsim)": [[47, "mlonmcu.target.riscv.corev_ovpsim.replace_unsupported"]], "replace_unsupported() (in module mlonmcu.target.riscv.ovpsim)": [[47, "mlonmcu.target.riscv.ovpsim.replace_unsupported"]], "riscv32_qemu_exe (mlonmcu.target.riscv.riscvqemutarget property)": [[47, "mlonmcu.target.riscv.RiscvQemuTarget.riscv32_qemu_exe"]], "riscv32_qemu_exe (mlonmcu.target.riscv.riscv_qemu.riscvqemutarget property)": [[47, "mlonmcu.target.riscv.riscv_qemu.RiscvQemuTarget.riscv32_qemu_exe"]], "riscv_gcc_basename (mlonmcu.target.riscv.riscv.riscvtarget property)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.riscv_gcc_basename"]], "riscv_gcc_prefix (mlonmcu.target.riscv.riscv.riscvtarget property)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.riscv_gcc_prefix"]], "rom_size (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.rom_size"]], "rom_size (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.rom_size"]], "rom_start (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.rom_start"]], "rom_start (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.rom_start"]], "sort_extensions_canonical() (in module mlonmcu.target.riscv.util)": [[47, "mlonmcu.target.riscv.util.sort_extensions_canonical"]], "spike_exe (mlonmcu.target.riscv.spiketarget property)": [[47, "mlonmcu.target.riscv.SpikeTarget.spike_exe"]], "spike_exe (mlonmcu.target.riscv.spike.spiketarget property)": [[47, "mlonmcu.target.riscv.spike.SpikeTarget.spike_exe"]], "spike_install_dir (mlonmcu.target.riscv.arartltarget property)": [[47, "mlonmcu.target.riscv.AraRtlTarget.spike_install_dir"]], "spike_install_dir (mlonmcu.target.riscv.ara_rtl.arartltarget property)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget.spike_install_dir"]], "spike_pk (mlonmcu.target.riscv.spiketarget property)": [[47, "mlonmcu.target.riscv.SpikeTarget.spike_pk"]], "spike_pk (mlonmcu.target.riscv.spike.spiketarget property)": [[47, "mlonmcu.target.riscv.spike.SpikeTarget.spike_pk"]], "spikepk_extra_args (mlonmcu.target.riscv.spiketarget property)": [[47, "mlonmcu.target.riscv.SpikeTarget.spikepk_extra_args"]], "spikepk_extra_args (mlonmcu.target.riscv.spike.spiketarget property)": [[47, "mlonmcu.target.riscv.spike.SpikeTarget.spikepk_extra_args"]], "split_extensions() (in module mlonmcu.target.riscv.util)": [[47, "mlonmcu.target.riscv.util.split_extensions"]], "timeout_sec (mlonmcu.target.riscv.riscv.riscvtarget property)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.timeout_sec"]], "toolchain (mlonmcu.target.riscv.riscv.riscvtarget property)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.toolchain"]], "trace_memory (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.trace_memory"]], "trace_memory (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.trace_memory"]], "update_extensions() (in module mlonmcu.target.riscv.util)": [[47, "mlonmcu.target.riscv.util.update_extensions"]], "update_extensions_pulp() (in module mlonmcu.target.riscv.util)": [[47, "mlonmcu.target.riscv.util.update_extensions_pulp"]], "variant (mlonmcu.target.riscv.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.COREVOVPSimTarget.variant"]], "variant (mlonmcu.target.riscv.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.OVPSimTarget.variant"]], "variant (mlonmcu.target.riscv.corev_ovpsim.corevovpsimtarget property)": [[47, "mlonmcu.target.riscv.corev_ovpsim.COREVOVPSimTarget.variant"]], "variant (mlonmcu.target.riscv.ovpsim.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.ovpsim.OVPSimTarget.variant"]], "verbose (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.verbose"]], "verbose (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.verbose"]], "verilator_executable (mlonmcu.target.riscv.cv32e40ptarget property)": [[47, "mlonmcu.target.riscv.CV32E40PTarget.verilator_executable"]], "verilator_executable (mlonmcu.target.riscv.cv32e40p.cv32e40ptarget property)": [[47, "mlonmcu.target.riscv.cv32e40p.CV32E40PTarget.verilator_executable"]], "verilator_install_dir (mlonmcu.target.riscv.arartltarget property)": [[47, "mlonmcu.target.riscv.AraRtlTarget.verilator_install_dir"]], "verilator_install_dir (mlonmcu.target.riscv.aratarget property)": [[47, "mlonmcu.target.riscv.AraTarget.verilator_install_dir"]], "verilator_install_dir (mlonmcu.target.riscv.vicunatarget property)": [[47, "mlonmcu.target.riscv.VicunaTarget.verilator_install_dir"]], "verilator_install_dir (mlonmcu.target.riscv.ara.aratarget property)": [[47, "mlonmcu.target.riscv.ara.AraTarget.verilator_install_dir"]], "verilator_install_dir (mlonmcu.target.riscv.ara_rtl.arartltarget property)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget.verilator_install_dir"]], "verilator_install_dir (mlonmcu.target.riscv.vicuna.vicunatarget property)": [[47, "mlonmcu.target.riscv.vicuna.VicunaTarget.verilator_install_dir"]], "vext_spec (mlonmcu.target.riscv.arartltarget property)": [[47, "mlonmcu.target.riscv.AraRtlTarget.vext_spec"]], "vext_spec (mlonmcu.target.riscv.aratarget property)": [[47, "mlonmcu.target.riscv.AraTarget.vext_spec"]], "vext_spec (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.vext_spec"]], "vext_spec (mlonmcu.target.riscv.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.OVPSimTarget.vext_spec"]], "vext_spec (mlonmcu.target.riscv.riscvqemutarget property)": [[47, "mlonmcu.target.riscv.RiscvQemuTarget.vext_spec"]], "vext_spec (mlonmcu.target.riscv.ara.aratarget property)": [[47, "mlonmcu.target.riscv.ara.AraTarget.vext_spec"]], "vext_spec (mlonmcu.target.riscv.ara_rtl.arartltarget property)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget.vext_spec"]], "vext_spec (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.vext_spec"]], "vext_spec (mlonmcu.target.riscv.ovpsim.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.ovpsim.OVPSimTarget.vext_spec"]], "vext_spec (mlonmcu.target.riscv.riscv_qemu.riscvqemutarget property)": [[47, "mlonmcu.target.riscv.riscv_qemu.RiscvQemuTarget.vext_spec"]], "vext_spec (mlonmcu.target.riscv.riscv_vext_target.rvvtarget property)": [[47, "mlonmcu.target.riscv.riscv_vext_target.RVVTarget.vext_spec"]], "vicuna_src_dir (mlonmcu.target.riscv.vicunatarget property)": [[47, "mlonmcu.target.riscv.VicunaTarget.vicuna_src_dir"]], "vicuna_src_dir (mlonmcu.target.riscv.vicuna.vicunatarget property)": [[47, "mlonmcu.target.riscv.vicuna.VicunaTarget.vicuna_src_dir"]], "vlen (mlonmcu.target.riscv.arartltarget property)": [[47, "mlonmcu.target.riscv.AraRtlTarget.vlen"]], "vlen (mlonmcu.target.riscv.aratarget property)": [[47, "mlonmcu.target.riscv.AraTarget.vlen"]], "vlen (mlonmcu.target.riscv.etisstarget property)": [[47, "mlonmcu.target.riscv.EtissTarget.vlen"]], "vlen (mlonmcu.target.riscv.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.OVPSimTarget.vlen"]], "vlen (mlonmcu.target.riscv.riscvqemutarget property)": [[47, "mlonmcu.target.riscv.RiscvQemuTarget.vlen"]], "vlen (mlonmcu.target.riscv.ara.aratarget property)": [[47, "mlonmcu.target.riscv.ara.AraTarget.vlen"]], "vlen (mlonmcu.target.riscv.ara_rtl.arartltarget property)": [[47, "mlonmcu.target.riscv.ara_rtl.AraRtlTarget.vlen"]], "vlen (mlonmcu.target.riscv.etiss.etisstarget property)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.vlen"]], "vlen (mlonmcu.target.riscv.ovpsim.ovpsimtarget property)": [[47, "mlonmcu.target.riscv.ovpsim.OVPSimTarget.vlen"]], "vlen (mlonmcu.target.riscv.riscv_qemu.riscvqemutarget property)": [[47, "mlonmcu.target.riscv.riscv_qemu.RiscvQemuTarget.vlen"]], "vlen (mlonmcu.target.riscv.riscv_vext_target.rvvtarget property)": [[47, "mlonmcu.target.riscv.riscv_vext_target.RVVTarget.vlen"]], "vmem_width (mlonmcu.target.riscv.vicunatarget property)": [[47, "mlonmcu.target.riscv.VicunaTarget.vmem_width"]], "vmem_width (mlonmcu.target.riscv.vicuna.vicunatarget property)": [[47, "mlonmcu.target.riscv.vicuna.VicunaTarget.vmem_width"]], "vport_policy (mlonmcu.target.riscv.vicunatarget property)": [[47, "mlonmcu.target.riscv.VicunaTarget.vport_policy"]], "vport_policy (mlonmcu.target.riscv.vicuna.vicunatarget property)": [[47, "mlonmcu.target.riscv.vicuna.VicunaTarget.vport_policy"]], "vproc_config (mlonmcu.target.riscv.vicunatarget property)": [[47, "mlonmcu.target.riscv.VicunaTarget.vproc_config"]], "vproc_config (mlonmcu.target.riscv.vicuna.vicunatarget property)": [[47, "mlonmcu.target.riscv.vicuna.VicunaTarget.vproc_config"]], "vproc_pipelines (mlonmcu.target.riscv.vicunatarget property)": [[47, "mlonmcu.target.riscv.VicunaTarget.vproc_pipelines"]], "vproc_pipelines (mlonmcu.target.riscv.vicuna.vicunatarget property)": [[47, "mlonmcu.target.riscv.vicuna.VicunaTarget.vproc_pipelines"]], "write_ini() (mlonmcu.target.riscv.etisstarget method)": [[47, "mlonmcu.target.riscv.EtissTarget.write_ini"]], "write_ini() (mlonmcu.target.riscv.etiss.etisstarget method)": [[47, "mlonmcu.target.riscv.etiss.EtissTarget.write_ini"]], "xlen (mlonmcu.target.riscv.riscv.riscvtarget property)": [[47, "mlonmcu.target.riscv.riscv.RISCVTarget.xlen"]], "xpulp_version (mlonmcu.target.riscv.gvsocpulptarget property)": [[47, "mlonmcu.target.riscv.GvsocPulpTarget.xpulp_version"]], "xpulp_version (mlonmcu.target.riscv.gvsoc_pulp.gvsocpulptarget property)": [[47, "mlonmcu.target.riscv.gvsoc_pulp.GvsocPulpTarget.xpulp_version"]], "myriscvtarget (class in mlonmcu.testing.riscv_toolchain)": [[48, "mlonmcu.testing.riscv_toolchain.MyRISCVTarget"]], "myrvptarget (class in mlonmcu.testing.riscv_toolchain)": [[48, "mlonmcu.testing.riscv_toolchain.MyRVPTarget"]], "myrvvtarget (class in mlonmcu.testing.riscv_toolchain)": [[48, "mlonmcu.testing.riscv_toolchain.MyRVVTarget"]], "mlonmcu.testing": [[48, "module-mlonmcu.testing"]], "mlonmcu.testing.helpers": [[48, "module-mlonmcu.testing.helpers"]], "mlonmcu.testing.riscv_toolchain": [[48, "module-mlonmcu.testing.riscv_toolchain"]]}})