I have used this demo with the following commands:

# Run Real Application on ESP32
python3 -m mlonmcu.cli.main flow run /usr/local/research/projects/SystemDesign/work/performance-evaluation/varghese/Micro-KWS/micro-kws/2_deploy/data/micro_kws_student_quantized.tflite --target esp32c3 --platform espidf --backend tvmaotplus -c espidf.install_dir=/usr/local/research/projects/SystemDesign/tools/esp/v5.4.1/espressif_py310 -c espidf.src_dir=/usr/local/research/projects/SystemDesign/tools/esp/v5.4.1/esp-idf -c espidf.print_outputs=1 -c esp32c3.print_outputs=1 -c run.export_optional=1 -c tvmaotplus.desired_layout=NCHW -c tvmaot.desired_layout=NCHW -f autotuned -c autotuned.results_file=/usr/local/research/projects/SystemDesign/work/performance-evaluation/varghese/Micro-KWS/micro-kws/2_deploy/data/micro_kws_student_tuning_log_nchw_best.txt -c espidf.project_template=micro_kws_esp32devboard_perf -c espidf.wait_for_user=0 -c riscv_gcc_rv32.install_dir=/usr/local/research/projects/SystemDesign/tools/esp/v5.4.1/espressif_py310/tools/riscv32-esp-elf/esp-14.2.0_20241119/riscv32-esp-elf -c riscv_gcc_rv32.name=riscv32-esp-elf -c espidf.optimize=s  -c espidf.extra_cmake_defs="{'CONFIG_ENABLE_WIFI': 1}"

# Run Performance Evaluation on ESP32
python3 -m mlonmcu.cli.main flow run /usr/local/research/projects/SystemDesign/work/performance-evaluation/varghese/Micro-KWS/micro-kws/2_deploy/data/micro_kws_student_quantized.tflite --target esp32c3 --platform espidf --backend tvmaotplus -c espidf.install_dir=/usr/local/research/projects/SystemDesign/tools/esp/v5.4.1/espressif_py310 -c espidf.src_dir=/usr/local/research/projects/SystemDesign/tools/esp/v5.4.1/esp-idf -c espidf.print_outputs=1 -c esp32c3.print_outputs=1 -c run.export_optional=1 -c tvmaotplus.desired_layout=NCHW -c tvmaot.desired_layout=NCHW -f autotuned -c autotuned.results_file=/usr/local/research/projects/SystemDesign/work/performance-evaluation/varghese/Micro-KWS/micro-kws/2_deploy/data/micro_kws_student_tuning_log_nchw_best.txt -c espidf.project_template=micro_kws_esp32devboard_perf -c espidf.wait_for_user=0 -c riscv_gcc_rv32.install_dir=/usr/local/research/projects/SystemDesign/tools/esp/v5.4.1/espressif_py310/tools/riscv32-esp-elf/esp-14.2.0_20241119/riscv32-esp-elf -c riscv_gcc_rv32.name=riscv32-esp-elf -c espidf.extra_cmake_defs="{'CMAKE_C_FLAGS': '\"-march=rv32im_zicsr_zifencei\"', 'CMAKE_CXX_FLAGS': '\"-march=rv32im_zicsr_zifencei\"', 'CMAKE_EXE_LINKER_FLAGS': '\"-nostartfiles -march=rv32im_zicsr_zifencei --specs=nosys.specs\"'}" --config-gen espidf.extra_cmake_defs="{'PCER_INIT_VAL': 1, 'ENABLE_PERF_EVAL': 1}" --config-gen espidf.extra_cmake_defs="{'PCER_INIT_VAL': 2, 'ENABLE_PERF_EVAL': 1}" -c espidf.optimize=s

I also added a `WiFi Configuration` submenu to the `menuconfig` interface where you can set up the WiFi options, such as:
- WiFi SSID and Password of the WiFi network the ESP32 must connect to
- UDP Server IP address and port number which the software must send the packets to

User has to give `-c espidf.extra_cmake_defs="{'CONFIG_ENABLE_WIFI': 1}"` in the command while running from mlonmcu to enable WiFi.