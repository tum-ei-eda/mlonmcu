---
# The MLONMCU_HOME is filled in automatically when creating the environment
home: "{{ home_dir }}"
logging:
  level: DEBUG
  to_file: false
  rotate: false
cleanup:
  auto: true
  keep: 50
# Default locations for certain directoriescan be changed here
# Non-absolute paths will always be threated relative to the MLONMCU_HOME
paths:
  # Where the dependencies are downloaded and installed
  deps: deps
  # If logging to file is used keep logs in this directory
  logs: logs
  # Location where reports and artifacts are written to
  results: results
  # Directory where custom extensions can be integrated
  plugins: plugins
  # Directory for intermediate build products, should be located on a large enough drive
  temp: temp
  # A collection of models which will be used to look for models
  # The paths will be checked in the order defined here stopping at the first match
  # Non-existant paths will be skipped without throwing an error
  models:
    - "{{ home_dir }}/models"
    - "{{ config_dir }}/models"
# Here default clone_urls
repos:
  tensorflow:
    url: "https://github.com/tensorflow/tflite-micro.git"
    ref: 7a0249686f412551634a5058ddd6d2ec3f224203
  tvm:
    url: "https://github.com/apache/tvm.git"
    ref: e5bf56d1f4d4d46cfe4845e4f76c991be35cc332
    options:
      recursive: true
  muriscvnn:
    url: "https://github.com/tum-ei-eda/muriscv-nn.git"
    ref: 0e70311f5e70a73e088c18dcc345e958e3d8b174
  etiss:
    url: "https://github.com/tum-ei-eda/etiss.git"
    ref: 739573d5f12798074bc7d375a46c005f23f59f67  # develop, 23.01.2024
  spike:
    url: "https://github.com/riscv-software-src/riscv-isa-sim.git"
    ref: 0bc176b3fca43560b9e8586cdbc41cfde073e17a
  spikepk:
    url: "https://github.com/riscv-software-src/riscv-pk.git"
    ref: 7e9b671c0415dfd7b562ac934feb9380075d4aa2
  cmsis:
    # url: "https://github.com/PhilippvK/CMSIS_5.git"
    url: "https://github.com/ARM-software/CMSIS_5.git"
    ref: a75f01746df18bb5b929dfb8dc6c9407fac3a0f3
    # ref: a75f01746df18bb5b929dfb8dc6c9407fac3a0f3
  cmsisnn:
    # url: "https://github.com/PhilippvK/CMSIS-NN.git"
    url: "https://github.com/ARM-software/CMSIS-NN.git"
    # ref: 35ce20560794ddc9e6d87006cad7a3bc665f8319  # v4.0.0 + portability patch
    ref: 040da18234b597867bd54d736ca4ceae545b2853
  mlif:
    url: "https://github.com/tum-ei-eda/mlonmcu-sw.git"
    ref: d0a79d92b5a8e767b947b214bda8743ec6318741
  tflite_pack:
    url: "https://github.com/tum-ei-eda/tflite-pack.git"
    ref: 2d31cafc941d3889b042af9c0a72b5f768ac4606
  layergen:
    url: "https://github.com/PhilippvK/ml-layer-gen.git"
    ref: 8d27988fe3a50838521e7c7fb42193da717c5830
# Here all supported frameworks with their specific features are defined
# Optionally disable unwanted or incomatible backends or features here
# The configured defaults are used if no backend was specified in the command line options
frameworks:
  default: tvm
  tflm:
    enabled: true
    backends:
      default: tflmi
      tflmi:
        enabled: true
        features:
          debug_arena: true
    features:
      muriscvnn: true
      cmsisnn: false
  tvm:
    enabled: true
    backends:
      default: tvmaot
      tvmrt:
        enabled: true
        features:
          debug_arena: true
          disable_legalize: false
          autotuned: true
          moiopt: true
      tvmaot:
        enabled: true
        features:
          debug_arena: true
          unpacked_api: true
          usmp: true
          disable_legalize: false
          autotuned: true
          moiopt: true
      tvmaotplus:
        enabled: true
        features:
          debug_arena: true
          disable_legalize: false
          autotuned: true
          moiopt: true
      tvmllvm:
        enabled: true
        features:
          # unpacked_api: true
          disable_legalize: false
          autotuned: true
          moiopt: true
    features:
      cmsisnnbyoc: false
      muriscvnnbyoc: false
# Some frontends are experimental and therefore disabled here
# Features like packing are only available in certain environments
frontends:
  tflite:
    enabled: true
    features:
      validate: true
      visualize: true
      split_layers: true
  layergen:
    enabled: true
  # TODO: saved_model (TF->TFLITE), ipynb (IPYNB->?)
# Some targets/platforms support multiple toolchains
toolchains:
  gcc: true
  llvm: true
# Platform extend the number of supported targets
platforms:
  mlif:
    enabled: true
    features:
      debug: true
      validate: true
      benchmark: true
# List of supported targets in the environment
targets:
  default: host_x86
  etiss:
    enabled: true
    features:
      gdbserver: true
      etissdbg: true
      trace: true
      log_instrs: true
  host_x86:
    enabled: true
    features:
      gdbserver: true
  host_x86_ssh:
    enabled: true
  spike:
    enabled: true
    features:
      vext: true
      log_instrs: true
  canmv_k230_ssh:
    enabled: true
    features:
      vext: true
postprocesses:
  use:
  # - detailed_cycles
  # - average_cycles
  # - filter_cols
  # - features2cols
  # - config2cols
  # - bytes2kb
  # - visualize
# This is where further options such as specific versions of dependencies can be set in the furture
vars:
  allow_extensions: false
  runs_per_stage: true
  # tvm.make_tool: "ninja"
  spikepk.default_arch: "rv64gc"
  spikepk.default_abi: "lp64d"
  spike.xlen: 64
  etiss.xlen: 64
  riscv_gcc.name: riscv64-unknown-linux-musl
  riscv_gcc.dl_url: "https://syncandshare.lrz.de/dl/fiWBtDLWz17RBc1Yd4VDW7/GCC/default/2023.11.27/Ubuntu/20.04/rv64gc_lp64d_linux_musl_medany.tar.xz"
  riscv_gcc.dl_url_vext: "https://syncandshare.lrz.de/dl/fiWBtDLWz17RBc1Yd4VDW7/GCC/default/2023.11.27/Ubuntu/20.04/rv64gcv_lp64d_linux_musl_medany.tar.xz"
flags: {}
